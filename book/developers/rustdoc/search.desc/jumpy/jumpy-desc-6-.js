searchState.loadedDescShard("jumpy", 6, "Returns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTransparent black\nLoad the image from some raw bytes.\nCreate a <code>ColorImage</code> from flat opaque gray data.\nWithout label.\nLabel shown next to the combo box\nleft-top corner plus a size (stretching right-down).\nBounding-box around the points.\nCreate a <code>ColorImage</code> from flat RGB data.\nFrom <code>sRGBA</code> with premultiplied alpha.\nFrom <code>sRGBA</code> WITHOUT premultiplied alpha.\nCreate a <code>ColorImage</code> from flat un-multiplied RGBA data.\nLoad the image from an existing texture.\nReturns the bounding rectangle of the two points.\nLoad the image from a URI.\nTransparent white\nWas the <code>CollapsingHeader</code> fully closed (and not being …\nWas the <code>CollapsingHeader</code> fully open (and not being …\nTrue if this widget has keyboard focus this frame, but didn…\nPaint text that has already been laid out in a <code>Galley</code>.\nThe text color in the <code>Galley</code> will be replaced with the …\nPaint text that has already been laid out in a <code>Galley</code>.\nMultiply with 0.5 to make color half as opaque, …\nUsed to get a unique ID when implementing one of the …\nCreate a <code>Hyperlink</code> to the current <code>file!()</code> on github.\nCreate a <code>Hyperlink</code> to the current <code>file!()</code> (and line) on …\nShow larger buttons for switching between light and dark …\nShow a small button to switch to/from dark/light mode …\nReturned a “grayed out” version of the given color.\nPut into a <code>Frame::group</code>, visually grouping the contents …\nFor when you want to group a few widgets together within a …\nExtend each end of the separator line by this much.\nHelpers for zooming the whole GUI of an app (changing …\nDoes this widget have keyboard focus?\nThis widget has the keyboard focus (i.e. is receiving key …\nDo we have a pointer?\nResponse of the actual clickable header.\nShow large text.\nUse <code>TextStyle::Heading</code>.\nPrefer using <code>RichText</code> directly!\nThe allowable height range for the panel.\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nHighlight this widget, to make it look like it is hovered, …\nHighlight this widget, to make it look like it is hovered, …\nSize hint for e.g. rasterizing an svg.\nShow a faint hint text when the text field is empty.\nA horizontal line.\nPaints a horizontal line.\nStart a ui with horizontal layout. After you have called …\nExplicitly ask for a horizontal line.\nCreate a horizontal scroll area.\nSet the horizontal align of the inner text.\ne.g. for when aligning text within a button.\nLike <code>Self::horizontal</code>, but allocates the full vertical …\ne.g. for adjusting the placement of something.\nSet the horizontal scroll offset position.\nLike <code>Self::horizontal</code>, but aligns content with top.\nStart a ui with horizontal layout that wraps to a new row …\nSenses no clicks or drags. Only senses mouse hover.\nIf it is a good idea to show a tooltip, where is pointer?\nIf it is a good idea to show a tooltip, where is pointer? …\nThe pointer is hovering above this widget or the widget …\nDragged files hovering over egui.\nEnable/disable horizontal scrolling. <code>false</code> by default.\nTurn on/off scrolling on the horizontal axis.\nLink to a web page.\nThe color used for <code>Hyperlink</code>,\nShortcut for <code>add(Hyperlink::new(url).text(label))</code>.\nUse the provided function to render a different …\nUse the provided function to render a different <code>ComboBox</code> …\nAssign a unique id to the Window. Required if the title …\nA unique identity of this <code>Ui</code>.\nUse if you want to set an explicit <code>Id</code> for this widget.\nAssign an explicit and globally unique id.\nThe <code>Id</code> of the widget/area this response pertains.\nExplicitly set the source of the <code>Id</code> of this widget, …\nA source for the unique <code>Id</code>, e.g. …\nA source for the unique <code>Id</code>, e.g. …\nA source for the unique <code>Id</code>, e.g. …\nAn image at the given position.\nShow an image available at the given <code>uri</code>.\nCreates a button with an image. The size of the image as …\nAn image at the given position.\nCreates a button with an image to the left of the text. …\nShow a spinner when loading an image.\nAssociate some static bytes with a <code>uri</code>.\nInclude an image in the binary.\nCreate a child ui which is indented to the right.\nDraw a vertical lien left of indented region, in e.g. …\nWhich font face in the file to use. When in doubt, use <code>0</code>.\nDraw as triangles (i.e. the length is always multiple of …\nWhat the user closure returned.\nMargin within the painted frame.\nMargin within the painted frame.\nRead-only access to the shared <code>InputState</code>.\nRead-only access to <code>InputState</code>.\nRead-write access to the shared <code>InputState</code>.\nRead-write access to <code>InputState</code>.\nInserts text <code>text</code> into this buffer at character index …\nShow the state of egui, including its input and output.\nHelper: equivalent to …\nHow perceptually intense (bright) is the color?\nCheck for clicks, drags and/or hover on a specific region …\nCheck for more interactions (e.g. sense clicks on a …\nUse this style for interactive things. Note that you must …\nShould the cursor change when the user hovers over an …\nWhere the pointer (mouse/touch) were when when this widget …\nIf you detect a click or drag and wants to know where it …\nCheck for clicks, and drags on a specific region that is …\nIf <code>false</code> the window will be non-interactive.\nIf false, clicks goes straight through to what is behind …\nHow and when interaction happens.\nDefault is <code>true</code>. If set to <code>false</code> then you cannot interact …\nReturns true if we sense either clicks or drags.\nRegister this widget as being interested in getting …\nThe intersection of two <code>Rect</code>, i.e. the area covered by …\nThe overlap of two ranges, i.e. the range that is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLayout with wrap mode based on the containing <code>Ui</code>.\nShowing UI:s for egui/epaint types.\nIs the alpha=0 ?\nIs the alpha=0 ?\nIs any widget being dragged?\nIs this specific widget being dragged?\nIs an egui context menu open?\nJust because the mouse is down doesn’t mean we are …\nTrue if width is zero or color is transparent\nIf <code>false</code>, the <code>Ui</code> does not allow any interaction and the …\nTrue if all members are also finite.\nTrue if all members are also finite.\nTrue if all members are also finite.\nReturns <code>true</code> if the chain of bytes, image, or texture …\nIs the pointer currently moving? This is smoothed so a few …\nCan this text be edited?\n<code>width &lt; 0 || height &lt; 0</code>\nIs the pointer button currently down on this widget? This …\nIs the pointer (mouse/touch) over any egui area?\nIs the given popup open?\n<code>width &gt; 0 &amp;&amp; height &gt; 0</code>\nCan be used for culling: if <code>false</code>, then no part of <code>rect</code> …\nDo all corners have the same rounding?\nIs the pointer currently still? This is smoothed so a few …\nWas the tooltip open last frame?\nIs egui currently using the pointer position (e.g. …\nAre all indices within the bounds of the contained …\nIf <code>false</code>, any widgets added to the <code>Ui</code> will be invisible …\nTilt the characters to the right.\nPrefer using <code>RichText</code> directly!\nThe job that this galley is the result of. Contains the …\nIs the given key currently held down?\nWas the given key pressed this frame?\nWas the given key released this frame?\nShow some text.\nThe text on labels, buttons, checkboxes etc.\nAssociate a label with a control for accessibility.\nFor logarithmic sliders, the largest positive value we are …\nSet by the <code>eframe</code> web backend.\nLatest reported pointer position. When tapping a touch …\nUse this to paint stuff within this <code>Ui</code>.\nWhere we paint\nWhich layer the widget is part of.\nTop-most layer at the given position.\nTop-most layer at the given position.\nAn iterator over all layers. Back-to-front. Top is last.\nGet a full-screen painter for a new or existing layer\nHandles paint layers, i.e. how things are sometimes …\nRead the <code>Layout</code>.\nWill wrap text at the given width and line break at <code>\\n</code>.\nDo layout and position the galley in the ui, without …\nWill line break at <code>\\n</code>.\nOverride how text is being shown inside the <code>TextEdit</code>.\nThe id should be globally unique, e.g. …\n<code>min.x</code>\n<code>min.x</code>\nPlace elements horizontally, left to right.\nLinear interpolation.\nLinearly interpolate towards another point, so that …\nLinearly interpolate so that <code>[0, 0]</code> is <code>Self::min</code> and <code>[1, 1]</code>…\nLinearly interpolate so that <code>[0, 0]</code> is <code>Self::min</code> and <code>[1, 1]</code>…\nLinearly self towards other rect.\nDefault light theme.\nShow radio-buttons to switch between light and dark mode.\nShow small toggle-button for light and dark mode.\nA line through many points.\nExplicit line height of the text in points.\nExplicit line height of the text in points.\nA line between two points. More efficient than calling …\nPaints a line from the first point to the second.\nMultiply with 0.5 to make color half as opaque in linear …\nLooks like a hyperlink.\nImage loading\nErrors\nLoad the image from its <code>Image::source</code>, returning the …\nAllocate a texture.\nThe loaders of bytes, images, and textures.\nWhen <code>false</code> (default), pressing TAB will move focus to the …\nSet an event filter for a widget.\nMake this a logarithmic slider. This is great for when the …\nThe widget had keyboard focus and lost it, either because …\nThe Mac ⌘ Command key. Should always be set to <code>false</code> on …\nHow to filter when magnifying (when texels are larger than …\nHow to align things on the main axis.\nMain axis direction\nJustify the main axis?\nIf true, wrap around when reading the end of the main …\nWhether or not the <code>ImageFit</code> should maintain the image’s …\nWhether or not the final size should maintain the original …\nUse this to generate widget ids for widgets that have …\nSet margin of text. Default is [4.0,2.0]\nReport the data shown by this widget changed.\nCheck for equality but with proper handling of …\nThe other corner, opposing <code>Self::min</code>. Usually the right …\nSet soft maximum width (wrapping width) of each column.\nSet a maximum number of decimals to display. Values will …\nSet a maximum number of decimals to display.\nReturns the maximum of <code>self.x</code> and <code>self.y</code>.\nMaximum height of the panel.\nThe maximum height of the outer frame of the scroll area.\nSet the max height of the image.\nNew widgets will <em>try</em> to fit within this rectangle.\nWon’t expand to larger than this\nSet the max size of the image.\nDetermines the maximum size of the image.\nMaximum size of one side of the font texture.\nMaximum size of one side of a texture.\nMaximum width of the panel.\nThe maximum width of the outer frame of the scroll area.\nSet the max width of the image.\nRead-only access to the shared <code>Memory</code>.\nRead-only access to <code>Memory</code>.\nRead-write access to the shared <code>Memory</code>.\nRead-write access to <code>Memory</code>.\nShows the contents of <code>Self::memory</code>.\nMenu bar functionality (very basic so far).\nCreate a menu button that when clicked will show the given …\nCreate a menu button with an image that when clicked will …\nTight bounding box around all the meshes in all the rows. …\nReturns true if this widget was clicked this frame by the …\nIs the middle button currently down?\nWith the <code>eframe</code> web backend, this is set to the mime-type …\nWith the <code>eframe</code> web backend, this is set to the mime-type …\nOne of the corners of the rectangle, usually the left top …\nSet minimum width of each column. Default: …\nSet a minimum number of decimals to display. Normally you …\nSet a minimum number of decimals to display.\nReturns the minimum of <code>self.x</code> and <code>self.y</code>.\nMinimum height of the panel.\nSet minimum height of the window.\nWon’t shrink to smaller than this\nWhere and how large the <code>Ui</code> is already. All widgets that …\nSet minimum height of each row. Default: …\nThe minimum height of a vertical scroll area which …\nThe minimum width of a horizontal scroll area which …\nSize of content; same as <code>min_rect().size()</code>\nSet the minimum size of the button.\nSet the minimum size of the <code>TextEdit</code>.\nWon’t shrink to smaller than this\nMinimum width of the panel.\nSet minimum width of the window.\nWon’t shrink to smaller than this\nHow to filter when minifying (when texels are smaller than …\nWhich modifier keys are down at the start of the frame?\nWhich modifier keys are down at the start of the frame?\nShow monospace (fixed width) text.\nUse <code>TextStyle::Monospace</code>.\nPrefer using <code>RichText</code> directly!\nIf <code>false</code> the window will be immovable.\nmoveable by dragging the area?\nMoves the given area to the top in its <code>Order</code>.\nCalls <code>InputState::multi_touch</code>.\nReturns details about the currently ongoing multi-touch …\nA <code>TextEdit</code> for multiple lines. Pressing enter key will …\nMultiply with e.g. 0.5 to make us half transparent\nIs there a mutable <code>TextEdit</code> under the cursor? Use by <code>eframe</code>…\nUsage: …\nDebug-name.\nHuman-readable English name.\nName of the file. Set by the <code>eframe</code> web backend.\nRadius of the rounding of the North-East (right top) …\nCreate a scroll area where both direction of scrolling is …\nThe <code>CollapsingHeader</code> starts out collapsed unless you call …\nCreate new <code>ComboBox</code> with id and label\nThe id should be globally unique, e.g. <code>Id::new(&quot;my_panel&quot;)</code>.\nThe id should be globally unique, e.g. <code>Id::new(&quot;my_panel&quot;)</code>.\nThe window title is used as a unique <code>Id</code> and must be …\nIf you are using egui, use <code>egui::Context::load_texture</code> …\nCreate a new <code>Grid</code> with a locally unique identifier.\nCreate an image filled with the given color.\nCreate a new <code>Ui</code>.\nProgress in the <code>[0, 1]</code> range, where <code>1</code> means “completed”…\nCreates a new horizontal slider.\nCreate a scroll area where you decide which axis has …\nGenerate a new <code>Id</code> by hashing some source (e.g. a string or …\nCreate a painter to a specific layer within a certain clip …\nLoad the image from some source.\nCreate a new spinner that uses the style’s <code>interact_size</code> …\nIf <code>true</code>, open the url in a new tab. If <code>false</code> open it in …\nThis is the <code>Id</code> that will be assigned to the next widget …\nWhere do we expect a zero-sized widget to be placed?\nStyle to use for non-interactive widgets.\nSafe normalize: returns zero if input is zero.\nA special <code>Id</code>, in particular as a key to <code>crate::Memory::data</code>\nSetting this will allow the last column to expand to take …\nTotal number of indices in all the row meshes.\nHow many times was the given key pressed this frame?\nNumber of touches (fingers) on the surface. Value is ≥ 2 …\nTotal number of vertices in all the row meshes.\nRadius of the rounding of the North-West (left top) corner.\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nShow this text when hovering if the widget is disabled.\nShow this UI when hovering if the widget is disabled.\nWhen hovered or dragged, use this icon for the mouse …\nWhen hovered, use this icon for the mouse cursor.\nShow this text if the widget was hovered (i.e. a tooltip).\nLike <code>on_hover_text</code>, but show the text next to cursor.\nShow this UI if the widget was hovered (i.e. a tooltip).\nLike <code>on_hover_ui</code>, but show the ui next to cursor.\nCalling <code>.open(Some(true))</code> will make the collapsing header …\nCall this to add a close-button to the window title bar.\nAlways open this hyperlink in a new browser tab.\nOpen the given popup, and close all other.\nOpen an URL in a browser.\nOpen the given url in a web browser.\nIf set, open this url.\n0.0 if fully closed, 1.0 if fully open, and something …\nRead-only access to <code>Options</code>.\nGlobal egui options.\nRead-write access to <code>Options</code>.\n<code>order(Order::Foreground)</code> for an Area that should always be …\nVertical or horizontal slider? The default is horizontal.\nWhat operating system are we running on?\nMargin outside the painted frame.\nMargin outside the painted frame.\nAll the data egui returns to the backend at the end of …\nRead-only access to the shared <code>PlatformOutput</code>.\nRead-only access to <code>PlatformOutput</code>.\nRead-write access to the shared <code>PlatformOutput</code>.\nRead-write access to <code>PlatformOutput</code>.\nIf set this will change the font family and size for all …\nOverride default text color for all text.\nIf set this will change the default <code>TextStyle</code> for all …\nPaint the image in the given rectangle.\nPaint the spinner in the given rectangle.\nUse this to paint stuff within this <code>Ui</code>.\nCreate a painter for a sub-region of this Ui.\nPanel background color\nIf true, hide the letters from view and prevent copying …\nSet by the <code>egui-winit</code> backend.\nSet by the <code>egui-winit</code> backend.\nSize of a physical pixel in logical gui coordinates …\nWhere the “root” of the window is.\nWhere the “root” of the area is.\nThe pixels, row by row, from top to bottom.\nThe coverage value.\nThe number of physical pixels for each logical point.\nAlso known as device pixel ratio, &gt; 1 for high resolution …\nPixels per point.\nThe number of physical pixels for each logical point. …\nAlso known as device pixel ratio, &gt; 1 for high resolution …\nAlso known as device pixel ratio, &gt; 1 for high resolution …\nNon-rendering related output.\nState of the mouse or simple touch gestures which can be …\nIf it is a good idea to show a tooltip, where is pointer?\nIf you detect a click or drag and wants to know where it …\nLatest reported pointer position.\nShows a popup above or below another widget.\nHelper for <code>popup_above_or_below_widget</code>.\n<code>pos2(x, y) == Pos2::new(x, y)</code>\nReturns a 0-width Rect.\nReturns a 0-width Rect.\nReturns the point on the rect’s frame or in the center …\nShould be set to the expected time between frames when …\nEstimated time until next frame (provided we repaint right …\nShow a prefix before the number, e.g. “x: “\nShow a prefix before the number, e.g. “x: “\nIf true, the most common glyphs (ASCII) are pre-rendered …\nWhere did the current click/drag originate? <code>None</code> if no …\nWhen did the current click/drag originate? <code>None</code> if no …\nThe previous text value.\nWas the primary button clicked this frame?\nIs the primary button currently down?\nWas the primary button pressed this frame?\nWas the primary button released this frame?\nWhat to paint - either a <code>Mesh</code> or a <code>PaintCallback</code>.\nCreate a child Ui with an explicit <code>Id</code>.\nAdd a <code>Widget</code> to this <code>Ui</code> at a specific location (manual …\nShow a <code>RadioButton</code>. Often you want to use <code>Self::radio_value</code>…\nShow a <code>RadioButton</code>. It is selected if …\nAlign text to top. Only applicable together with …\nPrefer using <code>RichText</code> directly!\nThe raw input we got this frame from the backend.\nWhere to paint.\nBounding rect.\nThe area of the screen we are talking about.\nIs the pointer (mouse/touch) above this rectangle in this …\nCreate a new Image from a patch of the current image. This …\nClone a sub-region as a new image.\nLinearly remap a value from one range to another, so that …\nLike <code>remap</code>, but also clamps the value so that the returned …\nIf <code>Duration::is_zero()</code>, egui is requesting immediate …\nReplaces all contents of this string with <code>text</code>\nGive keyboard focus to a specific widget. See also …\nRequest that this widget get keyboard focus.\nCall this if there is need to repaint the UI, i.e. if you …\nRequest repaint after at most the specified duration …\nMake room for this many additional triangles (will reserve …\nMake room for this many additional vertices. See also …\nForget window positions, sizes etc. Can be used to …\nShow a button to reset a value to its default. The button …\nShow a button to reset a value to its default. The button …\nReset to the default style set in <code>Context</code>.\nCan panel be resized by dragging the edge of it?\nCan panel be resized by dragging the edge of it?\nCan the user resize the window by dragging its edges?\nCan you resize it with the mouse?\nUsage: …\nLook up this <code>TextStyle</code> in <code>Style::text_styles</code>.\nThe response of the area.\nThe id should be globally unique, e.g. …\n<code>max.x</code>\n<code>max.x</code>\nPlace elements horizontally, right to left.\nRotates the vector by 90°, i.e positive X to positive Y …\nRotate by some angle about an origin, in-place.\nRotate the image about an origin by some angle\nRotate the bounds (will expand the <code>Rect</code>)\nRotate the image about an origin by some angle\nRotation in radians. Moving fingers around each other will …\nUseful for pixel-perfect rendering.\nUseful for pixel-perfect rendering.\nUseful for pixel-perfect rendering.\nSet the rounding of the button.\nRound the corners of the image.\nRound the corners of the image.\nRows of text, from top to bottom.\nRun the ui code for one frame.\nScale the font’s glyphs by this much. this is only a …\nCreate a scoped child ui.\nThis is a signal to any backend that we want the …\nPosition and size of the egui area.\nPosition and size of the area that egui should use, in …\nPosition and size of the egui area.\nFull size of the screen, in pixels.\nEnable/disable horizontal/vertical scrolling. <code>false</code> by …\nTurn on/off scrolling on the horizontal/vertical axes.\nSet the visibility of both horizontal and vertical scroll …\nHow many points the user scrolled.\nSet the horizontal and vertical scroll offset position.\nAdjust the scroll position of any parent <code>ScrollArea</code> so …\nAdjust the scroll position until this UI becomes visible.\nAdjust the scroll position of any parent <code>ScrollArea</code> so …\nScroll this many points in the given direction, in the …\nRadius of the rounding of the South-East (right bottom) …\nWas the secondary button clicked this frame?\nReturns true if this widget was clicked this frame by the …\nIs the secondary button currently down?\nWas the secondary button pressed this frame?\nWas the secondary button released this frame?\nCan the <code>CollapsingHeader</code> be selected by clicking it? …\nShow a label which can be selected or not.\nShow selectable text. It is selected if …\nIf you set this to ‘true’, the <code>CollapsingHeader</code> will …\nIf <code>true</code>, mark this button as “selected”.\ncheckboxes, radio-buttons etc\nIf <code>true</code>, mark this button as “selected”.\nThe current value of checkboxes and radio buttons.\nWhat we show as the currently selected value\nBy default, buttons senses clicks. Change this to a …\nMake the label respond to clicks and/or drags.\nBy default, buttons senses clicks. Change this to a …\nMake the image respond to clicks and/or drags.\nThe senses (click and/or drag) that the widget was …\nShortcut for <code>add(Separator::default())</code>\nAssign a new image to an existing texture.\nModify an existing <code>Shape</code>.\nNew or changed textures. Apply before painting.\n<code>max.y</code>\nKeep size\nScreen-space rectangle for clipping what we paint in this …\nEverything painted in this <code>Painter</code> will be clipped against …\nSet the cursor icon.\nTurn on/off whether or not to debug widget layout on hover.\nSet which widget is being dragged.\nCalling <code>set_enabled(false)</code> will cause the <code>Ui</code> to deny all …\nIf true, all windows, menus, tooltips etc are to be …\nSet an event filter for a widget.\nTell <code>egui</code> which fonts to use.\nkeep min\nSet both the minimum and maximum height.\n<code>ui.set_height_range(min..=max);</code> is equivalent to …\nRedirect where you are painting.\n<code>min.x</code>\nSet the maximum height of the ui. You won’t be able to …\nSet the maximum size of the ui. You won’t be able to …\nSet the maximum width of the ui. You won’t be able to …\nSet the minimum height of the ui. This can’t shrink the …\nSet the minimum size of the ui. This can’t shrink the …\nSet the minimum width of the ui. This can’t shrink the …\nSet the operating system we are running on.\nAssign a new image to a subregion of the whole texture.\nSet the number of physical pixels for each logical point. …\nFor integrations: this callback will be called when an …\n<code>max.x</code>\nSet row height in horizontal wrapping layout.\nChanges apply to this <code>Ui</code> and its subsequent children.\nThe <code>Style</code> used by all new windows, panels etc.\n<code>min.y</code>\nCalling <code>set_visible(false)</code> will cause all further widgets …\nThe <code>Visuals</code> used by all subsequent windows, panels etc.\nkeep min\nSet both the minimum and maximum width.\n<code>ui.set_width_range(min..=max);</code> is equivalent to …\nShow a ui for settings (style and tessellation options).\nWhat to paint.\nEither of the shift keys are down.\nIs shift the only pressed button?\nShort and readable summary\nShort and readable summary\nShort and readable summary\nShow some text on the right side of the button, in weak …\nShow the panel at the top level.\nShow the panel at the top level.\nReturns <code>None</code> if the window is not open (if <code>Window::open</code> …\nShow the <code>TextEdit</code>, returning a rich <code>TextEditOutput</code>.\nShow the panel at the top level.\nShow the <code>ScrollArea</code>, and add the contents to the viewport.\nShow the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …\nShow the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …\nShow either a collapsed or a expanded panel, with a nice …\nShow either a collapsed or a expanded panel, with a nice …\nShow either a collapsed or a expanded panel, with a nice …\nShow either a collapsed or a expanded panel, with a nice …\nShow the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …\nShow the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …\nShould the <code>CollapsingHeader</code> show a background behind it? …\nShow a list of items with the given selected index.\nShow the panel inside a <code>Ui</code>.\nShow the panel inside a <code>Ui</code>.\nShow the panel inside a <code>Ui</code>.\nShow a spinner when the image is loading.\nShow the progress in percent on the progress bar.\nEfficiently show only the visible part of a large number …\nShow a separator line, even when not interacting with it?\nShow a separator line, even when not interacting with it?\nShow a tooltip at the current pointer position (if any).\nShow a tooltip at the given position.\nShow a tooltip at the current pointer position (if any).\nShow a tooltip under the given area.\nShow some text at the current pointer position (if any).\nShow the combo box, with the given ui code for the menu …\nControl whether or not the slider shows the current value. …\nThis can be used to only paint the visible part of the …\nShrink by this much on each side, keeping the center\nShrink by this much in each direction, keeping the center\nContract each end of the separator line by this much.\nShrink by this much in each direction, keeping the center\nHelper: shrinks the max height to the current height, so …\nFit the image to 100% of its available size, shrinking it …\nHelper: shrinks the max width to the current width, so …\nSigned distance to the edge of the box.\nNo newlines (<code>\\n</code>) allowed. Pressing enter key will result …\nwidth x height\n<code>rect.size() == Vec2 { x: rect.width(), y: rect.height() }</code>\nSelect the font size (in points). This overrides the value …\nSets the spinner’s size. The size sets both the height …\nwidth, height.\nwidth, height\nHeight in points.\nwidth x height\nPretend like <code>count</code> widgets have been allocated.\nShow trailing color behind the circle of a <code>Slider</code>. Default …\nShow small text.\nMake this a small button, suitable for embedding into text.\nSmaller text.\nPrefer using <code>RichText</code> directly!\nA button as small as normal body text.\nFor e.g. exponents.\nPrefer using <code>RichText</code> directly!\nFor logarithmic sliders that includes zero: what is the …\nTurn smart aim on/off. Default is ON. There is almost no …\nSet spacing between columns/rows. Default: …\nThe current spacing options for this <code>Ui</code>. Short for …\nHow much space we take up. The line is painted in the …\nSizes and distances between widgets\nMutably borrow internal <code>Spacing</code>. Changes apply to this <code>Ui</code> …\nThe length of the range, i.e. <code>max - min</code>.\nThe default egui fonts supports around 1216 emojis in …\nHow much the value changes when dragged one point (logical …\nShortcut for <code>add(Spinner::new())</code>\nSet both <code>x</code> and <code>y</code> to the same value.\nSplit rectangle in left and right halves. <code>t</code> is expected to …\nSplit rectangle in left and right halves at the given <code>x</code> …\nThis is for platforms that only support 16-bit index …\nSplit rectangle in top and bottom halves. <code>t</code> is expected to …\nSplit rectangle in top and bottom halves at the given <code>y</code> …\n<code>[2, 1]</code> for wide screen, and <code>[1, 2]</code> for portrait, etc. At …\nReturns the textures as <code>sRGBA</code> premultiplied pixels, row by …\nTime since last frame (in seconds), but gracefully handles …\nPosition of the pointer at the time the gesture started.\nChange which row number the grid starts on. This can be …\nPoint in time when the gesture started.\nSets the minimal change of the value.\nThe scroll handle will stick to the bottom position even …\nThe scroll handle will stick to the rightmost position …\nStop dragging any widget.\nStop editing of active <code>TextEdit</code> (if any).\nDraw a line through the text, crossing it out.\nPrefer using <code>RichText</code> directly!\nIf <code>true</code>, add a subtle background color to every other row.\nWhether or not Grids and Tables should be striped by …\nOverride button stroke. Note that this will override any …\nShow text that stand out a bit (e.g. slightly brighter).\nExtra strong text (stronger color).\nPrefer using <code>RichText</code> directly!\negui theme (spacing, colors, etc).\nStyle options for this <code>Ui</code> and its children.\nThe <code>Style</code> used by all subsequent windows, panels etc.\nMutably borrow internal <code>Style</code>. Changes apply to this <code>Ui</code> …\nMutate the <code>Style</code> used by all subsequent windows, panels …\nEdit the active <code>Style</code>.\nAdd a suffix to the number, this can be e.g. a unit (“°…\nAdd a suffix to the number, this can be e.g. a unit (“°…\nTotal margins on both sides\nSurrender keyboard focus for a specific widget. See also …\nSurrender keyboard focus for this widget.\nRadius of the rounding of the South-West (left bottom) …\nEmoji or name representing the key\nMargins with the same size on opposing sides\nIf <code>true</code>, pressing tab will act on the widget, and NOT move …\nClears all characters in this buffer and returns a string …\nHelper: move volatile (deltas and events), clone the rest.\nTake everything ephemeral (everything except <code>cursor_icon</code> …\nTessellate the given shapes into triangle meshes.\nRead-only access to <code>TessellationOptions</code>.\nControls the tessellator.\nRead-write access to <code>TessellationOptions</code>.\nLow-level texture manager.\nA custom text to display on the progress bar.\nThe full, non-elided text of the input job.\nShow a text next to the slider (e.g. explaining what the …\nLay out and paint some text.\nThe color and width of the text cursor\nScreen-space position of text edit cursor (used for IME).\nshow where the text cursor would be if you clicked\nA <code>TextEdit</code> for multiple lines. Pressing enter key will …\nNo newlines (<code>\\n</code>) allowed. Pressing enter key will result …\nSelected range of characters in <code>Self::current_text_value</code>.\nOverride the <code>TextStyle</code>.\nOverride the <code>TextStyle</code> if, and only if, this is a <code>RichText</code>.\nThe height of text of this text style\nAll known text styles.\nThe <code>FontFamily</code> and size you want to use for a specific …\nThe texture to use when drawing these triangles.\nTexture options used when creating the texture.\nSize of the texture, if known.\nShow stats about the allocated textures.\nTexture changes since last frame (including the font …\nMonotonically increasing time, in seconds. Relative to …\nTime in seconds. Relative to whatever. Used for animation.\nHow long has it been (in seconds) since the pointer was …\nMultiply image color with this. Default is WHITE (no tint).\nMultiply image color with this. Default is WHITE (no tint).\nMultiply image color with this. Default is WHITE (no tint).\nShow title bar on top of the window? If <code>false</code>, the window …\nPremultiplied RGBA\nPremultiplied RGBA\nConvert <code>Min =&gt; 0.0</code>, <code>Center =&gt; 0.5</code> or <code>Max =&gt; 1.0</code>.\nConverts to floating point values in the range 0-1 without …\nReturns an opaque version of self\nReturns an opaque version of self\nTreat this vector as a position. <code>v.to_pos2()</code> is equivalent …\nunmultiply the alpha\nConvert <code>Min =&gt; -1.0</code>, <code>Center =&gt; 0.0</code> or <code>Max =&gt; 1.0</code>.\n-1, 0, or +1 for each axis\nunmultiply the alpha\nPremultiplied RGBA\nPremultiplied RGBA\nThe vector from origin to this position. <code>p.to_vec2()</code> is …\nToggle the given popup between closed and open.\nActs like a checkbox, but looks like a <code>SelectableLabel</code>.\nThe id should be globally unique, e.g. …\n<code>min.y</code>\nPlace elements vertically, top to bottom.\nTop-down layout justified so that buttons etc fill the …\n<code>min.y</code>\ninner margin plus outer margin.\nDisplay trailing color behind the slider’s circle. …\nTranslate location by this much, in-place\nMove the shape by this many points, in-place.\nMove all the graphics at the given layer.\nRelative movement (comparing previous frame and current …\nReturns true if this widget was triple-clicked this frame …\nReturns true if this widget was triple-clicked this frame …\nIf <code>true</code>, the text will stop at the max width of the <code>Ui</code>, …\nTry loading the bytes from the given uri using any …\nTry loading the image from the given uri using any …\nTry loading the texture from the given uri using any …\nExtra scale and vertical tweak to apply to all text of …\nThe type of widget this is.\nAllocate space, interact, paint, and return a <code>Response</code>.\nIs the pointer (mouse/touch) above this <code>Ui</code>? Equivalent to …\nDraw a line under the text.\nPrefer using <code>RichText</code> directly!\nThe union of two bounding rectangle, i.e. the minimum <code>Rect</code> …\nA logical “or” operation. For instance …\nThe logical “or” of two <code>Sense</code>s.\nTime since last frame, in seconds.\nUpdate the value on each key press when text-editing the …\nGet the <code>uri</code> that this image was constructed from.\nHow much space is used by panels and windows.\nHow much space is used by panels and windows.\nMiscellaneous tools used by the rest of egui.\nSelect UV range. Default is (0,0) in top-left, (1,1) …\nSelect UV range. Default is (0,0) in top-left, (1,1) …\nSelect UV range. Default is (0,0) in top-left, (1,1) …\nIf you use a small font and <code>Align::TOP</code> you can get the …\nThe current value of sliders etc.\n<code>vec2(x, y) == Vec2::new(x, y)</code>\nCurrent velocity of pointer.\nStart a ui with vertical layout. Widgets will be …\nExplicitly ask for a vertical line.\nMake this a vertical slider.\nCreate a vertical scroll area.\nSet the vertical align of the inner text.\ne.g. for when aligning text within a button.\nStart a ui with vertical layout. Widgets will be …\nStart a ui with vertical layout. Widgets will be …\nSet the vertical scroll offset position.\nThe vertex data indexed by <code>indices</code>.\nViewport in points.\nThe viewport rectangle. This is what you would use in e.g. …\nThe visual bounding rectangle (includes stroke widths)\nThe current visuals settings of this <code>Ui</code>. Short for …\nColors etc.\nMutably borrow internal <code>visuals</code>. Changes apply to this <code>Ui</code> …\nA vertical line.\nPaints a vertical line.\nEnable/disable vertical scrolling. <code>false</code> by default.\nTurn on/off scrolling on the vertical axis.\nIf <code>true</code>, egui is currently listening on text input (e.g. …\nTrue if egui is currently interested in the pointer (mouse …\nA good color for warning text (e.g. orange).\nHelper function that adds a label when compiling with …\nCheck reusing of <code>Id</code>s, and show a visual warning on screen …\nWas this popup visible last frame?\nShow text that is weaker (fainter color).\nExtra weak text (fainter color).\nPrefer using <code>RichText</code> directly!\nFor accessibility.\nWidgets are pieces of GUI such as <code>Label</code>, <code>Button</code>, <code>Slider</code> …\nVisual styles of widgets\nSet the outer width of the button and menu.\nThe allowable width range for the panel.\nWindow background color.\nGenerate a new <code>Id</code> by hashing the parent <code>Id</code> and the given …\nCall the provided function with the given ID pushed on the …\nCreate a painter for a sub-region of this <code>Painter</code>.\nThe alignment to use on the cross axis.\nJustify widgets along the cross axis?\nRedirect shapes to another paint layer.\nRedirect where you are painting.\nThe new layout will take up all available space.\nThe alignment to use on the main axis.\nJustify widgets on the main axis?\nWrap widgets when we overflow the main axis?\nReturns a response with a modified <code>Self::rect</code>.\nSetting this will allow for dynamic coloring of rows of …\nControls whether text wrap is used for the selected text\nIf <code>true</code>, the text will wrap to stay within the max width …\nIf <code>true</code>, the text will wrap to stay within the max width …\nIf set, labels buttons wtc will use this to determine …\nShould text wrap in this <code>Ui</code>?\nReturns an alignment by the X (horizontal) axis\nHow far to the right.\nRightwards. Width.\nReturns an alignment by the Y (vertical) axis\nHow far down.\nDownwards. Height.\nShift font’s glyphs downwards by this amount of logical …\nShift font’s glyphs downwards by this fraction of the …\nZoom scale factor this frame (e.g. from ctrl-scroll or …\nProportional zoom factor (pinch gesture).\n2D non-proportional zoom scale factor this frame (e.g. …\n2D non-proportional zoom factor (pinch gesture).\nWhat mouse button? For touches, use <code>PointerButton::Primary</code>.\nThe amount scrolled horizontally and vertically. The …\nHashed device identifier (if available; may be zero). Can …\nDescribes how hard the touch device was pressed. May …\nUnique identifier of a finger/pen. Value is stable from …\nThe state of the modifier keys at the time of the event.\nThe state of the modifier keys at the time of the event.\nThe state of the modifier keys at the time of the event.\nOne of: start move end cancel.\nWhere is the pointer?\nPosition of the touch (or where the touch was last …\nWas it pressed or released?\nWas it the button/touch pressed this frame, or released?\nIf this is a <code>pressed</code> event, is it a key-repeat?\nThe unit of scrolling: points, lines, or pages.\nThe unique identifier for this image, e.g. …\nA <code>HashMap</code> using <code>RandomState</code> to hash the items. (Requires …\nA <code>HashSet</code> using <code>RandomState</code> to hash the items. (Requires …\nA <code>Hasher</code> for hashing an arbitrary stream of bytes.\nType alias for HashMap&lt;K, V, ahash::RandomState&gt;\nA convenience trait that can be used together with the …\nType alias for HashSet&lt;K, ahash::RandomState&gt;\nA convenience trait that can be used together with the …\nProvides a Hasher factory. This is typically used (e.g. by …\nReturns the intersection of <code>self</code> and <code>rhs</code> as a new …\nReturns the union of <code>self</code> and <code>rhs</code> as a new <code>AHashSet&lt;T, S&gt;</code>.\nReturns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …\nConstructs a new AHasher with keys based on this …\nConstructs a new AHasher with fixed keys. If <code>std</code> is …\nCreates an empty <code>AHashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nExamples\nExamples\nReturns the argument unchanged.\nReturns the argument unchanged.\nThis crates a hashmap from the provided iterator using …\nThis crates a hashset from the provided iterator using …\nCreate a new <code>RandomState</code> <code>BuildHasher</code> based on the provided …\nReturns a reference to the value corresponding to the key.\nReturns the key-value pair corresponding to the supplied …\nReturns a mutable reference to the value corresponding to …\nCalculates the hash of a single value. This provides a …\nReturns a reference to the value corresponding to the …\nInserts a key-value pair into the map.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator visiting all the keys in …\nCreates a consuming iterator visiting all the values in …\nConstructs a new HashMap\nConstructs a new HashSet\nThis crates a hashmap using RandomState::new which obtains …\nThis crates a hashset using RandomState::new. See the …\nCreate a new <code>RandomState</code> <code>BuildHasher</code> using random keys.\nRemoves a key from the map, returning the value at the key …\nReturns the difference of <code>self</code> and <code>rhs</code> as a new …\nConstructs a new HashMap with a given initial capacity\nConstructs a new HashSet with a given initial capacity\nThis crates a hashmap with the specified capacity using …\nThis crates a hashset with the specified capacity using …\nBuild a <code>RandomState</code> from a single key. The provided key …\nAllows for explicitly setting the seeds to used. All …\nA supplier of Randomness used for different hashers. See …\nProvides a Hasher factory. This is typically used (e.g. by …\nProvides an optional way to manually supply a source of …\nIndicate whether or not a popup will be shown above or …\nAn area on the screen that can be moved by dragging.\nA panel that covers the remainder of the screen, i.e. …\nA header which can be collapsed/expanded, revealing a …\nThe response from showing a <code>CollapsingHeader</code>.\nA drop-down selection menu with a descriptive label.\nAdd a background, frame and/or margin to a rectangular …\nA function that paints the <code>ComboBox</code> icon\nA region that can be resized by dragging the bottom right …\nAdd vertical and/or horizontal scrolling to a contained <code>Ui</code>.\nA panel that covers the entire left or right side of a <code>Ui</code> …\nA panel that covers the entire top or bottom of a <code>Ui</code> or …\nBuilder for a floating window which can be dragged, …\nNone iff collapsed.\nNone iff collapsed.\nResponse of the actual clickable header.\nMargin within the painted frame.\n0.0 if fully closed, 1.0 if fully open, and something …\nMargin outside the painted frame.\nPanels are <code>Ui</code> regions taking up e.g. the left side of a <code>Ui</code> …\nShow popup windows, tooltips, context menus etc.\nShows a popup above or below another widget.\nHelper for <code>popup_above_or_below_widget</code>.\nCoordinate system names:\nShow a tooltip at the current pointer position (if any).\nShow a tooltip at the given position.\nShow a tooltip at the current pointer position (if any).\nShow a tooltip under the given area.\nShow some text at the current pointer position (if any).\nWas this popup visible last frame?\nA header which can be collapsed/expanded, revealing a …\nThe response from showing a <code>CollapsingHeader</code>.\nThis is a a building block for building collapsing regions.\nFrom <code>CollapsingState::show_header</code>.\nA function that paints an icon indicating if the region is …\nReturns the response of the collapsing button, the custom …\nNone iff collapsed.\nNone iff collapsed.\nReturns the response of the collapsing button, the custom …\nReturns the argument unchanged.\nReturns the argument unchanged.\nResponse of the actual clickable header.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0 for closed, 1 for open, with tweening\n0.0 if fully closed, 1.0 if fully open, and something …\nPaint the arrow icon that indicated if the region is open …\nShow body if we are open, with a nice animation between …\nShow body if we are open, with a nice animation between …\nShows header and body (if expanded).\nPaint this CollapsingState’s toggle button. Takes an …\nA panel that covers the remainder of the screen, i.e. …\nState regarding panels.\n<code>Left</code> or <code>Right</code>\nA panel that covers the entire left or right side of a <code>Ui</code> …\nA panel that covers the entire top or bottom of a <code>Ui</code> or …\n<code>Top</code> or <code>Bottom</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe size of the panel (from previous frame).\nShows a popup above or below another widget.\nHelper for <code>popup_above_or_below_widget</code>.\nShow a tooltip at the current pointer position (if any).\nShow a tooltip at the given position.\nShow a tooltip at the current pointer position (if any).\nShow a tooltip under the given area.\nShow some text at the current pointer position (if any).\nWas this popup visible last frame?\nAdd vertical and/or horizontal scrolling to a contained <code>Ui</code>.\nIndicate whether the horizontal and vertical scroll bars …\nThe size of the content. If this is larger than …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n<code>Id</code> of the <code>ScrollArea</code>.\nWhat the user closure returned.\nWhere on the screen the content is (excludes scroll bars).\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPositive offset means scrolling down/right\nThe current state of the scroll area.\nGet the current kinetic scrolling velocity.\nBackend-specific painting.\nCircle with optional outline and fill.\nHow to paint a circle.\nA <code>Mesh</code> or <code>PaintCallback</code> within a clip rectangle.\nA <code>Shape</code> within a clip rectangle.\nRGBA image.\nThis format is used for space-efficient color …\nA 2D RGBA color image in RAM.\nA cubic Bézier Curve.\nA cubic Bézier Curve.\nUsed for the font texture.\nFont of unknown size.\nHow to select a sized font.\nA single-channel image designed for the font texture.\nThe collection of fonts used by <code>epaint</code>.\nText that has been laid out, ready for painting.\nHue, saturation, value, alpha. All in the range [0, 1]. No …\nLike Hsva but with the <code>v</code> value (brightness) being gamma …\nAn image stored in RAM.\nA change to an image.\nA line between two points.\nTextures allocated using <code>TextureManager</code>.\nTextured triangles in two dimensions.\nA general triangle mesh.\nA version of <code>Mesh</code> that uses 16-bit indices.\nA font where each character is the same width (<code>w</code> is the …\nOne of the names in <code>FontDefinitions::families</code>.\nPaint nothing. This can be useful as a placeholder.\nIf you want to paint some 3D shapes inside an egui region, …\nInformation passed along with <code>PaintCallback</code> (…\nCollected allocation statistics for shapes and meshes.\nA series of lines between points. The path can have a …\nA path which can be stroked and/or filled (if closed).\nA position on screen.\nA rendering primitive - either a <code>Mesh</code> or a <code>PaintCallback</code>.\nA font where some characters are wider than other (e.g. ‘…\nA quadratic Bézier Curve.\nA quadratic Bézier Curve.\nA rectangular region of space.\nRectangle with optional outline and fill.\nHow to paint a rectangle.\n0-1 linear space <code>RGBA</code> color with premultiplied alpha.\nHow rounded the corners of things should be\nThe color and fuzziness of a fuzzy shape. Can be used for …\nA paint primitive such as a circle or a piece of text. …\nDescribes the width and color of a line.\nTessellation quality options\nConverts <code>Shape</code>s into triangles (<code>Mesh</code>).\nText.\nHow to paint some text on screen.\nContains font data in an atlas, where each character …\nUsed to paint images.\nWhat texture to use in a <code>Mesh</code> mesh.\nLow-level manager for allocating textures.\nYour own texture, defined in any which way you want. The …\nRecursively nest more shapes - sometimes a convenience to …\nA vector has a direction and length. A <code>Vec2</code> is often used …\nThe 2D vertex type.\nThe UV coordinate of a white region of the texture mesh. …\nalpha 0-1. A negative value signifies an additive color …\nalpha 0-1. A negative value signifies an additive color …\nAllocate a new texture.\nReturns the coordinates of where the rect ended up, and …\nGet meta-data about all allocated textures in some …\nRotate text by this many radians clockwise. The pivot is …\nCall at the start of each frame with the latest known …\nThe maximum distance between the original curve and the …\nUsed for egui windows in dark mode.\nUsed for egui windows in light mode.\nPaint something custom (e.g. 3D stuff).\nClip rectangle in points.\nClip / scissor rectangle. Only show the part of the <code>Shape</code> …\nClip / scissor rectangle. Only show the part of the <code>Mesh</code> …\nNumber of separate clip rectangles\nIf true, connect the first and last of the points together.\nA line that closes back to the start point again.\nIf <code>true</code> (default) cull certain primitives before …\nsRGBA with premultiplied alpha\nColor of the opaque center of the shadow.\nA convex polygon with a fill and optional stroke.\nIf true, no clipping will be done.\nOutput the clip rectangles to be painted.\nOutput the text-containing rectangles.\nSet to true the text was truncated due to …\nAn assert that is only active when <code>epaint</code> is compiled with …\nThe default value will be 1.0e-5, it will be used during …\nThe shadow extends this much outside the rect. The size of …\nList of all known font families.\nWhat font family to use.\nUse “feathering” to smooth out the edges of shapes as …\nThe size of the the feathering, in physical pixels.\nFill is only supported for convex polygons.\nHow to fill the rectangle.\nWhen this get high, it might be time to clear and start …\nIf the rect should be filled with a texture, which one?\nFind out the t value for the point where the curve is …\nfind a set of points that approximate the cubic Bézier …\nfind a set of points that approximate the quadratic …\nfind a set of points that approximate the cubic Bézier …\nHow full is the font atlas?\nCall at the end of each frame (before painting) to get the …\nCurrent size of the font image. Pass this to …\nIterates through the curve invoking a callback at each …\nCompute a flattened approximation of the curve, invoking a …\nFree an existing texture.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a cubic Bézier curve based on 4 points and stroke.\nCreate a new quadratic Bézier shape based on the 3 points …\nUpdate the whole texture.\nThe laid out text, from <code>Fonts::layout_job</code>.\nWidth of this character in points.\nhue 0-1\nhue 0-1\nCan we display this glyph?\nCan we display all the glyphs in this text?\nWhat to set the texture to.\nDraw as triangles (i.e. the length is always multiple of …\nDraw as triangles (i.e. the length is always multiple of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAre all indices within the bounds of the contained …\nIs this affecting the whole texture? If <code>false</code>, this is a …\nThe job that this galley is the result of. Contains the …\nWill wrap text at the given width and line break at <code>\\n</code>.\nLike <code>Self::layout</code>, made for when you want to pick a color …\nLayout some text.\nWill line break at <code>\\n</code>.\nA line through many points.\nLogical bounding rectangle (ignoring stroke width)\nLogical bounding rectangle (ignoring stroke width)\nThe other corner, opposing <code>Self::min</code>. Usually the right …\nTight bounding box around all the meshes in all the rows. …\nGet meta-data about a specific texture.\nOne of the corners of the rectangle, usually the left top …\nHelper module that adds extra checks when the …\nRadius of the rounding of the North-East (right top) …\nCreate a new <code>Tessellator</code>.\nCreate a new <code>Fonts</code> for text layout. This call is …\nTotal number of allocated textures.\nTotal number of indices in all the row meshes.\nTotal number of vertices in all the row meshes.\nRadius of the rounding of the North-West (left top) corner.\nIf set, the text color in the galley will be ignored and …\nUpdate a sub-region of an existing texture.\nThe pixels, row by row, from top to bottom.\nThe coverage value.\nPixels per point.\nThe number of physical pixels for each logical point. …\nThe first point is the starting point and the last one is …\nThe first point is the starting point and the last one is …\nFilled paths should prefer clockwise order.\nIf <code>None</code>, set the whole texture to <code>Self::image</code>.\nLogical pixel coordinates (points). (0,0) is the top left …\nTop left corner of the first character.\n<code>pos2(x, y) == Pos2::new(x, y)</code>\nReturns the locations and sizes of pre-rasterized discs …\nIf <code>true</code>, small filled circled will be optimized by using …\nWhat to paint - either a <code>Mesh</code> or a <code>PaintCallback</code>.\nWhere to paint.\nBounding rect.\nIncrease the retain-count of the given texture.\nIf <code>true</code> (default) align text to mesh grid. This makes the …\nHow rounded the corners are. Use <code>Rounding::ZERO</code> for no …\nHeight of one row of text in points\nRows of text, from top to bottom.\nsaturation 0-1\nsaturation 0-1\nCalculate the point (x,y) at t based on the cubic Bézier …\nCalculate the point (x,y) at t based on the quadratic …\nFull size of the screen, in pixels.\nRadius of the rounding of the South-East (right bottom) …\nAssign a new image to an existing texture, or update a …\nSet the <code>Rect</code> to use for culling.\nThe shape\nwidth, height.\nwidth, height\nHeight in points.\nTooltips, menus, …, for dark mode.\nTooltips, menus, …, for light mode.\nsplit the original cubic curve into a new one within a …\nCollect statistics about what is being painted.\nColor and thickness of the line.\nThe thickness and color of the outline.\nRadius of the rounding of the South-West (left bottom) …\nCall to get the change to the image since last call.\nTake and reset changes since last frame.\nTessellate a single <code>CircleShape</code> into a <code>Mesh</code>.\nTessellate a clipped shape into a list of primitives.\nTessellate a single <code>CubicBezierShape</code> into a <code>Mesh</code>.\nTessellate a line segment between the two points with the …\nTessellate a single <code>Mesh</code> into a <code>Mesh</code>.\nTessellate a single <code>PathShape</code> into a <code>Mesh</code>.\nTessellate a single <code>QuadraticBezierShape</code> into a <code>Mesh</code>.\nTessellate a single <code>Rect</code> into a <code>Mesh</code>.\nTessellate a single <code>Shape</code> into a <code>Mesh</code>.\nTurns <code>Shape</code>:s into sets of triangles.\nTessellate a single <code>TextShape</code> into a <code>Mesh</code>.\nConverts graphics primitives into textured triangles.\nEverything related to text, fonts, text layout, cursors …\nThe font atlas. Pass this to <code>crate::Tessellator</code>.\nThe texture to use when drawing these triangles.\nThe texture to use when drawing these triangles.\nConvert the quadratic Bézier curve to one <code>PathShape</code>. The …\nConvert the cubic Bézier curve to one or two <code>PathShape</code>’…\nTransform the curve with the given transform.\nTransform the curve with the given transform.\nAdd this underline to the whole text. You can also set an …\nNormalized texture coordinates. (0, 0) is the top left …\nWhat UV coordinates to use for the texture?\nvalue 0-1, in gamma-space (~perceptually even)\nvalue 0-1\n<code>vec2(x, y) == Vec2::new(x, y)</code>\nThe vertex data indexed by <code>indices</code>.\nThe vertex data indexed by <code>indices</code>.\nViewport in points.\nThe visual bounding rectangle (includes stroke width)\nThe visual bounding rectangle (includes stroke width)\nThe visual bounding rectangle (includes stroke width)\nThe visual bounding rectangle (includes stroke width)\nThe visual bounding rectangle (includes stroke width)\nThe visual bounding rectangle\nHow far to the right.\nRightwards. Width.\nHow far down.\nDownwards. Height.\nThis format is used for space-efficient color …\nHue, saturation, value, alpha. All in the range [0, 1]. No …\nLike Hsva but with the <code>v</code> value (brightness) being gamma …\n0-1 linear space <code>RGBA</code> color with premultiplied alpha.\nalpha 0-1. A negative value signifies an additive color …\nalpha 0-1. A negative value signifies an additive color …\nAn assert that is only active when <code>epaint</code> is compiled with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nFrom linear RGBA with premultiplied alpha\nFrom linear RGBA without premultiplied alpha\nFrom <code>sRGBA</code> with premultiplied alpha\nFrom <code>sRGBA</code> without premultiplied alpha\nlinear [0, 1] -&gt; gamma [0, 1] (not clamped). Works for …\nlinear [0, 1] -&gt; gamma [0, 255] (clamped). Values outside …\nhue 0-1\nhue 0-1\nAll ranges in 0-1, rgb is linear.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ngamma [0, 255] -&gt; linear [0, 1].\nlinear [0, 255] -&gt; linear [0, 1]. Useful for alpha-channel.\ngamma [0, 1] -&gt; linear [0, 1] (not clamped). Works for …\nlinear [0, 1] -&gt; linear [0, 255] (clamped). Useful for …\nAll ranges in 0-1, rgb is linear.\nsaturation 0-1\nsaturation 0-1\nCheap and ugly. Made for graying out disabled <code>Ui</code>s.\nRepresents additive colors using a negative alpha.\nvalue 0-1, in gamma-space (~perceptually even)\nvalue 0-1\nleft/center/right or top/center/bottom alignment for e.g. …\nTwo-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.\nHorizontal or vertical center.\nThis struct tracks recent values of some time series.\nThe identity rotation: nothing rotates\nIs this an integer type?\nLargest finite value\nSmallest finite value\nRight or bottom.\nLeft or top.\nExtends <code>f32</code>, <code>Vec2</code> etc with <code>at_least</code> and <code>at_most</code> as aliases …\nImplemented for all builtin numeric types\nHelper trait to implement <code>lerp</code> and <code>remap</code>.\nA position on screen.\nIncludive range of floats, i.e. <code>min..=max</code>, but more …\nHelper trait to implement <code>lerp</code> and <code>remap</code>.\nA rectangular region of space.\nLinearly transforms positions from one <code>Rect</code> to another.\nRepresents a rotation in the 2D plane. A rotation of …\nA vector has a direction and length. A <code>Vec2</code> is often used …\nValues must be added with a monotonically increasing time, …\nOne- and two-dimensional alignment (<code>Align::Center</code>, …\nReturn true when arguments are the same within some …\nMore readable version of <code>self.max(lower_limit)</code>\nMore readable version of <code>self.min(upper_limit)</code>\nAverage times rate. If you are keeping track of individual …\nIdentity rotation\nAmount of time contained from start to end in this <code>History</code>.\nAn assert that is only active when <code>emath</code> is compiled with …\nCalculate a lerp-factor for exponential smoothing using a …\nRemove samples that are too old.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAngle is clockwise in radians. A 𝞃/4 = 90° rotation …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhere in the range is this value? Returns 0-1 if within …\n<code>(time, value)</code> pairs Time difference between values can be …\nCurrent number of values kept in history\nThe factor by which vectors will be scaled.\nLinear interpolation.\nThe other corner, opposing <code>Self::min</code>. Usually the right …\nMean time difference between values in this <code>History</code>.\nOne of the corners of the rectangle, usually the left top …\nExample:\nWrap angle to <code>[-PI, PI]</code> range.\n<code>pos2(x, y) == Pos2::new(x, y)</code>\nLinearly remap a value from one range to another, so that …\nLike <code>remap</code>, but also clamps the value so that the returned …\nRound a value to the given number of decimal places.\nThe scale factors.\nFind “simple” numbers is some range. Used by sliders.\nTotal number of values seen. Includes those that have been …\nTransforms the given coordinate in the <code>from</code> space to the <code>to</code>…\nTransforms the given coordinate in the <code>from</code> space to the <code>to</code>…\nTransforms the given rectangle in the <code>in</code>-space to a …\n<code>vec2(x, y) == Vec2::new(x, y)</code>\nCalculate a smooth velocity (per second) over the entire …\nHow far to the right.\nRightwards. Width.\nHow far down.\nDownwards. Height.\nleft/center/right or top/center/bottom alignment for e.g. …\nTwo-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.\nHorizontal or vertical center.\nRight or bottom.\nLeft or top.\nAllocates a rectangle of the specified <code>size</code> inside the …\nFind the “simplest” number in a closed range [min, max]…\nRGBA image.\nA 2D RGBA color image in RAM.\nUsed for the font texture.\nA single-channel image designed for the font texture.\nAn image stored in RAM.\nA change to an image.\nWhat to set the texture to.\nThe pixels, row by row, from top to bottom.\nThe coverage value.\nIf <code>None</code>, set the whole texture to <code>Self::image</code>.\nwidth, height.\nwidth, height\nProvides interior mutability.\nAn RAII implementation of a “scoped lock” of a mutex. …\nProvides interior mutability.\nAn RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …\nAn RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAggregate information about a bunch of allocations.\nCollected allocation statistics for shapes and meshes.\nNumber of separate clip rectangles\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA connected line (without thickness or gaps) which can be …\nTessellation quality options\nConverts <code>Shape</code>s into triangles (<code>Mesh</code>).\nThe maximum distance between the original curve and the …\nIf <code>true</code> (default) cull certain primitives before …\nIf true, no clipping will be done.\nOutput the clip rectangles to be painted.\nOutput the text-containing rectangles.\nThe default value will be 1.0e-5, it will be used during …\nUse “feathering” to smooth out the edges of shapes as …\nThe size of the the feathering, in physical pixels.\nThe path is taken to be closed (i.e. returning to the …\nLike <code>Self::fill</code> but with texturing.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelpers for constructing paths\nIf <code>true</code>, small filled circled will be optimized by using …\nIf <code>true</code> (default) align text to mesh grid. This makes the …\nA closed path (returning to the first point).\nOpen-ended.\nTurns <code>Shape</code>:s into sets of triangles.\nAdd one quadrant of a circle\noverwrites existing points\nA <code>.ttf</code> or <code>.otf</code> file and a font face index.\nDescribes the font data and the sizes to use.\nFont of unknown size.\nHow to select a sized font.\nExtra scale and vertical tweak to apply to all text of a …\nThe collection of fonts used by <code>epaint</code>.\nThe collection of fonts used by <code>epaint</code>.\nText that has been laid out, ready for painting.\nDescribes the task of laying out text.\nA font where each character is the same width (<code>w</code> is the …\nOne of the names in <code>FontDefinitions::families</code>.\nSuggested character to use to replace those in password …\nA font where some characters are wider than other (e.g. ‘…\nThe tessellated output of a row.\nOne <code>\\t</code> character is this many spaces wide.\nFormatting option for a section of text.\nControls the text wrapping and elision of a <code>LayoutJob</code>.\nHelper for adding a new section when building a <code>LayoutJob</code>.\n<code>ascent</code> value from the font\nWhen using this font’s metrics to layout a row, shift …\nIf <code>true</code>: Allow breaking between any characters. If <code>false</code> …\nIf <code>true</code>, all <code>\\n</code> characters will result in a new <em>paragraph</em>, …\nRange into the galley text\nClosest char at the desired x coordinate. Returns …\nExcludes the implicit <code>\\n</code> after the <code>Row</code>, if any.\nIncludes the implicit <code>\\n</code> after the <code>Row</code>, if any.\nThe character this glyph represents.\nText color\nDifferent types of text cursors, i.e. ways to point into a …\nSet to true the text was truncated due to …\nIf true, this <code>Row</code> came from a paragraph ending with a <code>\\n</code>. …\nExtra spacing between letters, in points.\nWhich fonts (names) to use for each <code>FontFamily</code>.\nWhat font family to use.\nThe first row must be at least this high. This is in case …\nGet the right font implementation from size and <code>FontFamily</code>.\nThe content of a <code>.ttf</code> or <code>.otf</code> file.\nList of font names and their definitions.\nThe height of the tallest font used in the job.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe range of vertices in the mesh the contain glyphs. …\nOne for each <code>char</code>.\nHow to horizontally align the text (<code>Align::LEFT</code>, …\nCan we display this glyph?\nCan we display all the glyphs in this text?\nWhich font face in the file to use. When in doubt, use <code>0</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe job that this galley is the result of. Contains the …\nJustify text so that word-wrapped rows fill the whole …\nLayout text into a <code>Galley</code>.\nCan be used for first row indentation.\nExplicit line height of the text in points.\nSame y range for all characters with the same <code>TextFormat</code>.\nMaximum amount of rows the text galley should have.\nWrap text so that no row is wider than this.\nThe tessellated text, using non-normalized (texel) UV …\nTight bounding box around all the meshes in all the rows. …\nBounds of the mesh, and can be used for culling. Does NOT …\nCreate a new <code>FontsImpl</code> for text layout. This call is …\nA row can be as long as it need to be.\nTotal number of indices in all the row meshes.\nTotal number of vertices in all the row meshes.\nCharacter to use to represent elided text.\nThe number of physical pixels for each logical point. …\nBaseline position, relative to the galley. Logical …\nBounding rect.\nLogical bounding rectangle based on font heights etc. Use …\nRows of text, from top to bottom.\nScale the font’s glyphs by this much. this is only a …\nIndex into <code>LayoutJob::sections</code>. Decides color etc.\nThis is included in case there are no glyphs\nThe different section, which can have different fonts, …\nBreak on <code>\\n</code> and at the given wrap width.\nDoes not break on <code>\\n</code>, but shows the replacement character …\nHeight in points.\nAdvance width and line height.\nThe text on this row, excluding the implicit <code>\\n</code> if any.\nThe complete text of this job, referenced by <code>LayoutSection</code>.\nElide text that doesn’t fit within the given width, …\nExtra scale and vertical tweak to apply to all text of …\nPosition and size of the glyph in the font texture, in …\nIf you use a small font and <code>Align::TOP</code> you can get the …\nThe mesh, ready to be rendered.\nControls the text wrapping and elision.\nShift font’s glyphs downwards by this amount of logical …\nShift font’s glyphs downwards by this fraction of the …\nCharacter cursor\nAll different types of cursors together. They all point to …\nParagraph Cursor\nRow Cursor\nCharacter based (NOT bytes). It is fine if this points to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCharacter offset (NOT byte offset!).\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCharacter based (NOT bytes). It is fine if this points to …\n0 is first paragraph, and so on. Note that a single …\nIf this cursors sits right at the border of a wrapped row …\nIf this cursors sits right at the border of a wrapped row …\n0 is first row, and so on. Note that a single paragraph …\nLinearly interpolate the nearest neighbors, creating a …\nShow the nearest pixel value.\nHow the texture texels are filtered.\nLow-level manager for allocating textures.\nMeta-data about an allocated texture.\nHow the texture texels are filtered.\nWhat has been allocated and freed during the last period.\n4 or 1\nSize in bytes. width x height x <code>Self::bytes_per_pixel</code>.\nTextures to free after painting.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHow to filter when magnifying (when texels are larger than …\nHow to filter when minifying (when texels are smaller than …\nA human-readable name useful for debugging.\nThe texture filtering mode to use when rendering.\nFree when this reaches zero.\nNew or changed textures. Apply before painting.\nwidth x height\nExtension trait to provide <code>ord()</code> method.\nWraps a floating-point value to add total order and hash. …\nReturns the argument unchanged.\nHash the given value with a predictable hasher.\nHash the given value with the given hasher.\nCalls <code>U::from(self)</code>.\nType to provide total order, useful as key in sorted …\nThe suggested keyboard shortcuts for global gui zooming.\nMake everything larger.\nShow buttons for zooming the ui.\nMake everything smaller.\nLet the user scale the GUI (change …\nPainted behind all floating windows\nDebug layer, always painted last / on top\nPopups, menus etc that should always be painted on top of …\nAn identifier for a paint layer. Also acts as an …\nNormal moveable windows that you reorder by click\nDifferent layer categories\nA list of <code>Shape</code>s paired with a clip rectangle.\nSpecial layer between panels and windows\nA unique identifier of a specific <code>Shape</code> in a <code>PaintList</code>.\nThings floating on top of everything else, like tooltips. …\nReturns the index of the new <code>Shape</code> that can be used with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nModify an existing <code>Shape</code>.\nTranslate each <code>Shape</code> and clip rectangle by this much, …\nRepresents a byte buffer.\nRepresents a loader capable of loading raw unstructured …\nRepresents bytes which are currently being loaded.\nMaps URI:s to <code>Bytes</code>, e.g. found with <code>include_bytes!</code>.\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nScale to height.\nAn <code>ImageLoader</code> decodes raw bytes into a <code>ColorImage</code>.\nRepresents an image which is currently being loaded.\nRepresents a failed attempt at loading an image.\nThe loaders of bytes, images, and textures.\nRuntime error: Loading was attempted, but failed (e.g. “…\nProgrammer error: There are no image loaders installed.\nProgrammer error: Failed to find the bytes for this image …\nProgrammer error: Failed to parse the bytes as an image …\nProgrammer error: no matching <code>TextureLoader</code>. Because of …\nA specific loader does not support this scheme, protocol …\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nBytes are being loaded.\nImage is loading.\nTexture is loading.\nBytes are loaded.\nImage is loaded.\nTexture is loaded.\nScale original size by some factor.\nScale to size.\nGiven as a hint for image loading requests.\nA texture with a known size.\nA <code>TextureLoader</code> uploads a <code>ColorImage</code> to the GPU, returning …\nRepresents a texture is currently being loaded.\nScale to width.\nIf the loader caches any data, this should return the size …\nIf the loader caches any data, this should return the size …\nIf the loader caches any data, this should return the size …\nImplementations may use this to perform work at the end of …\nImplementations may use this to perform work at the end of …\nImplementations may use this to perform work at the end of …\nForget the given <code>uri</code>.\nForget the given <code>uri</code>.\nForget the given <code>uri</code>.\nForget all URIs ever given to this loader.\nForget all URIs ever given to this loader.\nForget all URIs ever given to this loader.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFetch the id and size from a <code>TextureHandle</code>.\nUsed to get a unique ID when implementing one of the …\nUnique ID of this loader.\nUnique ID of this loader.\nUnique ID of this loader.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTry loading the bytes from the given uri.\nTry loading the image from the given uri.\nTry loading the texture from the given uri.\nCreate a <code>SizedTexture</code> from a texture <code>id</code> with a specific …\nFile contents, e.g. the contents of a <code>.png</code>.\nMime type of the content, e.g. <code>image/png</code>.\nSet if known (e.g. from a HTTP header, or by parsing the …\nSet if known (e.g. from a HTTP header, or by parsing the …\nSet if known (e.g. from a HTTP header, or by parsing the …\nSet if known (e.g. from a HTTP header, or by parsing the …\nThe menu bar goes well in a <code>TopBottomPanel::top</code>, but can …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a top level menu in a menu bar. This would be …\nConstruct a top level menu with an image in a menu bar. …\nAndroid OS.\nApple iPhone OS.\nMacOS.\nLinux or Unix other than Android.\nAn <code>enum</code> of common operating systems.\nUnknown OS - could be wasm\nWindows.\nReturns the argument unchanged.\nUses the compile-time <code>target_arch</code> to identify the OS.\nHelper: try to guess from the user-agent of a browser.\nCalls <code>U::from(self)</code>.\nIndicated an alias, e.g. a shortcut\nSomething can be scrolled in any direction (panned).\nHover a cell in a table\nA widget was clicked.\nA context menu is available\nIndicate that a copy will be made\nRequest an elevated amount of animations and flair for the …\nFor precision work\nA mouse cursor icon.\nNormal cursor icon, whatever that is.\nA widget was double-clicked.\nA widget gained keyboard focus (by tab key).\nWhat egui emits each frame from <code>crate::Context::run</code>.\nThe thing you are hovering can be grabbed\nYou are grabbing the thing you are hovering\nQuestion mark\nRequest a standard amount of attention-grabbing actions.\nOmnidirectional move icon (e.g. arrows in all cardinal …\nCan’t drop here\nShow no cursor\nForbidden\nWhat URL to open, and how.\nThings that happened during this frame that the …\nThe non-rendering part of what egui emits each frame.\nPointing hand, used for e.g. web links\nShows that processing is being done, but that the program …\nReset the attention request and interrupt related …\nResize a column\nResize something rightwards (e.g. when dragging the …\nHorizontal resize <code>-</code> to make something wider or more narrow …\nDiagonal resize <code>/</code> (right-up to/from left-down)\nResize something up (e.g. when dragging the top edge of …\nResize something up and right (e.g. when dragging the …\nResize something up and left (e.g. when dragging the …\nDiagonal resize <code>\\</code> (left-up to/from right-down)\nResize a row\nResize something downwards (e.g. when dragging the bottom …\nResize something down and right (e.g. when dragging the …\nResize something down and left (e.g. when dragging the …\nVertical resize <code>|</code> (up-down or down-up)\nResize something leftwards (e.g. when dragging the left …\nText caret, e.g. “Click here to edit text”\nText selection was updated.\nA widget was triple-clicked.\nTypes of attention to request from a user when a native …\nA widget’s value changed.\nVertical text caret, e.g. “Click here to edit vertical …\nNot yet ready, try later.\nDescribes a widget such as a <code>crate::Button</code> or a …\nEnhance!\nLet’s get a better overview\nIf set, put this text in the system clipboard. Ignore if …\nThe contents of some editable text (for <code>TextEdit</code> fields).\nSet the cursor to this icon.\nWhether the widget is enabled.\nEvents that may be useful to e.g. a screen reader.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe text on labels, buttons, checkboxes etc.\nIs there a mutable <code>TextEdit</code> under the cursor? Use by <code>eframe</code>…\nIf <code>true</code>, open the url in a new tab. If <code>false</code> open it in …\nIf set, open this url.\nNon-rendering related output.\nThe previous text value.\nIf <code>Duration::is_zero()</code>, egui is requesting immediate …\nThe current value of checkboxes and radio buttons.\nWhat to paint.\nScreen-space position of text edit cursor (used for IME).\nSelected range of characters in <code>Self::current_text_value</code>.\nTexture changes since last frame (including the font …\nThe type of widget this is.\nThe current value of sliders etc.\nThe word <code>git</code>.\nThe Github logo.\nThe Android logo.\nThe Apple logo.\nTux, the Linux penguin.\nThe Windows logo.\nThe Twitter bird.\nNormal labels. Easily readable, doesn’t take up too much …\nButtons. Maybe slightly bigger than <code>Self::Body</code>.\nOptions for help debug egui by adding extra visualization\nDefault text style - will use <code>TextStyle::Body</code>, unless …\nDirectly select size and font family\nA way to select <code>FontId</code>, either by picking one directly or …\nHeading. Probably larger than <code>Self::Body</code>.\nHow and when interaction happens.\nSame size as <code>Self::Body</code>, but used when monospace is …\nA user-chosen style, found in <code>Style::text_styles</code>.\nSelected text, selected elements etc\nUsed when small text is needed.\nControls the sizes and distances between widgets.\nSpecifies the look and feel of egui.\nUse a <code>TextStyle</code> to look up the <code>FontId</code> in <code>Style::text_styles</code>…\nAlias for a <code>FontId</code> (font of a certain size).\nControls the visual style (colors etc) of egui.\nbg = background, fg = foreground.\nThe visuals of widgets for different states of interaction.\nThe style of an interactive widget as you are clicking or …\nHow many seconds a typical animation should last.\nBackground color of widgets that must have a background …\nFor surrounding rectangle of things that need it, like …\nShow a background behind buttons.\nButton size is text size plus this on each side\nAllow child widgets to be just on the border and still …\nBackground color behind code-styled monospaced labels.\nShow a background behind collapsing headers.\nHeight of a combo-box before showing scroll bars.\nDefault (minimum) width of a <code>ComboBox</code>.\nIf true, the visuals are overall dark with light text. If …\nOptions to help debug why egui behaves strangely.\nAlways show callstack to ui on hover.\nShow callstack for the current widget on hover if all …\nThe default text styles of the default egui theme.\nThe style to use for <code>DragValue</code> text.\nA good color for error text (e.g. red).\nMake the frame this much larger.\nShow tooltips explaining <code>DragValue</code>:s etc when hovered.\nVery dark or light color (for corresponding theme). Used …\nSomething just barely different from the background color. …\nStroke and text color of the interactive part of a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf we show the hover ui, include where the next widget is …\nThe style of an interactive widget while you hover it, or …\nThe color used for <code>Hyperlink</code>,\nReturns small icon rectangle and big icon rectangle\nCheckboxes, radio button and collapsing headers have an …\nCheckboxes, radio button and collapsing headers have an …\nCheckboxes, radio button and collapsing headers have an …\nShow a spinner when loading an image.\nThe style of an interactive widget, such as a button, at …\nIndent collapsing regions etc by this much.\nEnd indented regions with a horizontal line\nDraw a vertical lien left of indented region, in e.g. …\nShould the cursor change when the user hovers over an …\nMinimum size of a <code>DragValue</code>, color picker button, and …\nHow and when interaction happens.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHorizontal and vertical spacing between widgets.\nHorizontal and vertical margins within a menu frame.\nThe style of a widget that you cannot interact with.\nThe style of a button that has an open menu beneath it …\nIf set this will change the font family and size for all …\nOverride default text color for all text.\nIf set this will change the default <code>TextStyle</code> for all …\nPanel background color\nMouse must be this close to the corner of a window to …\nMouse must be this close to the side of a window to resize\nButton frames etc.\nMargin between contents and scroll bar.\nMargin between scroll bar and the outer container (e.g. …\nMake sure the scroll handle is at least this big\nShow what widget blocks the interaction of another widget.\nShow which widgets make their parent higher\nShow which widgets make their parent wider\nShow an overlay on all interactive widgets.\nIf <code>false</code>, tooltips will show up anytime you hover …\nShow trailing color behind the circle of a <code>Slider</code>. Default …\nDefault width of a <code>Slider</code>.\nSizes and distances between widgets\nWhether or not Grids and Tables should be striped by …\nThe color and width of the text cursor\nshow where the text cursor would be if you clicked\nDefault width of a <code>TextEdit</code>.\nThe <code>FontFamily</code> and size you want to use for a specific …\nDelay in seconds before showing tooltips after the mouse …\nWidth of a tooltip (<code>on_hover_ui</code>, <code>on_hover_text</code> etc).\nColors etc.\nA good color for warning text (e.g. orange).\nBackground color of widgets that can <em>optionally</em> have a …\nVisual styles of widgets\nHorizontal and vertical margins within a window frame.\nIf set, labels buttons wtc will use this to determine …\nCharacter cursor\nA selected text range (could be a range of length zero).\nA <code>.ttf</code> or <code>.otf</code> file and a font face index.\nDescribes the font data and the sizes to use.\nFont of unknown size.\nThe collection of fonts used by <code>epaint</code>.\nText that has been laid out, ready for painting.\nDescribes the task of laying out text.\nA font where each character is the same width (<code>w</code> is the …\nOne of the names in <code>FontDefinitions::families</code>.\nA font where some characters are wider than other (e.g. ‘…\nOne <code>\\t</code> character is this many spaces wide.\nFormatting option for a section of text.\nControls the text wrapping and elision of a <code>LayoutJob</code>.\nIf <code>true</code>: Allow breaking between any characters. If <code>false</code> …\nIf <code>true</code>, all <code>\\n</code> characters will result in a new <em>paragraph</em>, …\nRange into the galley text\nText color\nSet to true the text was truncated due to …\nExtra spacing between letters, in points.\nWhich fonts (names) to use for each <code>FontFamily</code>.\nThe first row must be at least this high. This is in case …\nThe content of a <code>.ttf</code> or <code>.otf</code> file.\nList of font names and their definitions.\nReturns the argument unchanged.\nHow to horizontally align the text (<code>Align::LEFT</code>, …\nCharacter offset (NOT byte offset!).\nWhich font face in the file to use. When in doubt, use <code>0</code>.\nCalls <code>U::from(self)</code>.\nThe job that this galley is the result of. Contains the …\nJustify text so that word-wrapped rows fill the whole …\nCan be used for first row indentation.\nExplicit line height of the text in points.\nMaximum amount of rows the text galley should have.\nWrap text so that no row is wider than this.\nTight bounding box around all the meshes in all the rows. …\nTotal number of indices in all the row meshes.\nTotal number of vertices in all the row meshes.\nThe empty range.\nCharacter to use to represent elided text.\nThe number of physical pixels for each logical point. …\nIf this cursors sits right at the border of a wrapped row …\nWhen selecting with a mouse, this is where the mouse was …\nBounding rect.\nRows of text, from top to bottom.\nWhen selecting with a mouse, this is where the mouse was …\nThe different section, which can have different fonts, …\nreturns the two ends ordered\nThe complete text of this job, referenced by <code>LayoutSection</code>.\nExtra scale and vertical tweak to apply to all text of …\nIf you use a small font and <code>Align::TOP</code> you can get the …\nControls the text wrapping and elision.\nThis struct tracks recent values of some time series.\nStores values identified by an <code>Id</code> AND a the …\nComputing the same thing each frame can be expensive, so …\nCount the number of values are stored with the given type.\nCount how many values are stored but not yet deserialized.\nReturns the argument unchanged.\nRead a value, optionally deserializing it if available.\nRead a value without trying to deserialize a persisted …\nHash the given value with a predictable hasher.\nHash the given value with the given hasher.\nInsert a value that will be persisted next time you start …\nInsert a value that will not be persisted.\nCalls <code>U::from(self)</code>.\nThe maximum number of bytes that will be used to store the …\nRemove the state of this type an id.\nNote all state of the given type.\nSee <code>Self::max_bytes_per_type</code>.\nSomething that does an expensive computation that we want …\nCaches the results of a computation for one frame. If it …\nMust be called once per frame to clear the cache.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet from cache (if the same key was used last frame) or …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of values currently in the cache.\nCall once per frame to evict cache.\nCall once per frame to evict cache.\nStores values identified by an <code>Id</code> AND a the …\nLike <code>std::any::TypeId</code>, but can be serialized and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAutomatic undo system.\nAdd an undo point if, and only if, there has been a change …\nIf the state is changing so often that we never get to …\nCall this as often as you want (e.g. every frame) and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nDo we have an undo point different from the given state?\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true if the state is currently changing\nMaximum number of undos. If your state is resource …\nWhen that state hasn’t changed for this many seconds, …\nUse exactly this galley when painting the text.\nUse this <code>LayoutJob</code> when laying out the text.\nText and optional style choices for it.\nThis is how you specify text for a widget.\nText that has been laid out and ready to be painted.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPaint with this specific color.\nUse the colors in the original <code>WidgetText</code> if any, else …\nUse the colors in the original <code>WidgetText</code> if any, else …\nSize of the laid out text.\nThe full, non-elided text of the input job.\nClickable button with text.\nLoad the image from some raw bytes.\nBoolean on/off control with text label.\nA numeric value that you can change by dragging the …\nFit the image to an exact size.\nFit the image to a fraction of the available size.\nA clickable hyperlink, e.g. to …\nA widget which displays an image.\nA clickable image within a frame.\nThis type determines how the image should try to fit …\nThis type determines the constraints on how the size of an …\nThis type tells the <code>Ui</code> how to load an image.\nStatic text.\nClickable text, that looks like a hyperlink.\nFit the image to its original size, scaled by some factor.\nA simple progress bar.\nOne out of several alternatives, either selected or not.\nOne out of several alternatives, either selected or not. …\nA visual separator. A horizontal or vertical line …\nControl a number with a slider.\nSpecifies the orientation of a <code>Slider</code>.\nA spinner widget used to indicate loading.\nTrait constraining what types <code>crate::TextEdit</code> may use as …\nA text region that the user can edit the contents of.\nLoad the image from an existing texture.\nLoad the image from a URI, e.g. …\nAnything implementing Widget can be added to a <code>Ui</code> with …\nHelper so that you can do <code>TextEdit::State::read…</code>\nReturns this buffer as a <code>str</code>.\nA solid color to put behind the image. Useful for …\nReads the given character range.\nClears all characters in this buffer\nColor picker widgets.\nDeletes a range of text <code>char_range</code> from this buffer.\nDetermines how the image should shrink/expand/stretch/etc. …\nShow larger buttons for switching between light and dark …\nShow a small button to switch to/from dark/light mode …\nInserts text <code>text</code> into this buffer at character index …\nCan this text be edited?\nWhether or not the final size should maintain the original …\nDetermines the maximum size of the image.\nReplaces all contents of this string with <code>text</code>\nShow a button to reset a value to its default. The button …\nShow a button to reset a value to its default. The button …\nRotate the image about an origin by some angle\nRound the corners of the image.\nClears all characters in this buffer and returns a string …\nMultiply image color with this. Default is WHITE (no tint).\nAllocate space, interact, paint, and return a <code>Response</code>.\nSelect UV range. Default is (0,0) in top-left, (1,1) …\nThe unique identifier for this image, e.g. …\nWhat options to show for alpha\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a color picker where the user can change the given …\nReturns <code>true</code> on change.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nShow a color with background checkers to demonstrate …\nShow a color with background checkers to demonstrate …\nA selected text range (could be a range of length zero).\nA selected text range (could be a range of length zero).\nTrait constraining what types <code>crate::TextEdit</code> may use as …\nA text region that the user can edit the contents of.\nThe output from a <code>TextEdit</code>.\nThe text edit state stored between frames.\nThe range of selected character indices.\nReturns this buffer as a <code>str</code>.\nThe the currently selected range of characters.\nReads the given character range.\nClears all characters in this buffer\nWhere the text cursor is.\nDeletes a range of text <code>char_range</code> from this buffer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHow the text was displayed.\nInserts text <code>text</code> into this buffer at character index …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if the selected range contains no characters.\nCan this text be edited?\nThe empty range.\nWhen selecting with a mouse, this is where the mouse was …\nWhen selecting with a mouse, this is where the mouse was …\nWhen selecting with a mouse, this is where the mouse was …\nReplaces all contents of this string with <code>text</code>\nThe interaction response.\nWhen selecting with a mouse, this is where the mouse was …\nWhen selecting with a mouse, this is where the mouse was …\nWhen selecting with a mouse, this is where the mouse was …\nSets the currently selected range of characters.\nIf there is a selection, None is returned. If the two ends …\nreturns the two ends ordered\nThe state we stored after the run.\nClears all characters in this buffer and returns a string …\nThe text was clipped to this rectangle when painted.\nWhere the text in <code>Self::galley</code> ended up on the screen.\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nFluent messages can use arguments in order to …\n<code>FluentAttribute</code> is a component of a compound <code>FluentMessage</code>.\nSpecialized <code>FluentBundle</code> over non-concurrent …\nCore error type for Fluent runtime system.\n<code>FluentMessage</code> is a basic translation unit of the Fluent …\nA resource containing a list of localization messages.\nThe <code>FluentValue</code> enum represents values which can be …\nAn error which occurs when <code>FluentBundle::add_resource</code> adds …\nConverts the <code>FluentValue</code> to a string.\nAn iterator over <code>FluentAttribute</code> elements.\n<code>FluentBundle</code> is a collection of localization messages in …\nReturns an iterator over <code>entries</code> of the <code>FluentResource</code>.\nA helper macro to simplify creation of FluentArgs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the <code>FluentValue</code> at the <code>key</code> if it exists.\nRetrieve a single <code>FluentAttribute</code> element.\nReturns an <code>Entry</code> at the given index out of the …\nRetrieves an id of an attribute.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the <code>FluentValue</code> to a string.\nIterate over a tuple of the key an <code>FluentValue</code>.\nChecks to see if two <code>FluentValues</code> match each other by …\nCreates a new empty argument map.\nSets the key value pair.\nReturns a reference to the source string that was used to …\nA fallible constructor of a new <code>FluentResource</code>.\nAttempts to parse the string representation of a <code>value</code> …\n<code>types</code> module contains types necessary for Fluent runtime …\nRetrieves an value of an attribute.\nRetrieves an option of a <code>ast::Pattern</code>.\nPre-allocates capacity for arguments.\nWrite out a string version of the <code>FluentValue</code> to <code>W</code>.\nA collection of localization messages for a single locale, …\nMakes the provided rust function available to messages …\nAdds a resource to the bundle, returning an empty <code>Result&lt;T&gt;</code>…\nAdds a resource to the bundle, returning an empty <code>Result&lt;T&gt;</code>…\nFormats a pattern which comes from a <code>FluentMessage</code>.\nReturns the argument unchanged.\nRetrieves a <code>FluentMessage</code> from a bundle.\nReturns true if this bundle contains a message with the …\nCalls <code>U::from(self)</code>.\nConstructs a FluentBundle. The first element in <code>locales</code> …\nA constructor analogous to <code>FluentBundle::new</code> but operating …\nThis method allows to specify a function that will be …\nThis method allows to specify a function that will be …\nWhen formatting patterns, <code>FluentBundle</code> inserts Unicode …\nWrites a formatted pattern which comes from a <code>FluentMessage</code>…\nSpecialized <code>FluentBundle</code> over concurrent <code>IntlLangMemoizer</code>.\nCustom types can implement the <code>FluentType</code> trait in order …\nThe <code>FluentValue</code> enum represents values which can be …\nConvert the custom type into a string value, for instance …\nConvert the custom type into a string value, for instance …\nCreate a clone of the underlying type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis function parses Accept-Language string into a list of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLanguage Negotiation is a process in which locales from …\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nDense input for network replication.\nExtension of <code>InputCollector</code> exposing dense control for …\nDefine input types used by game for use in networking.\nTrait allowing for creating and applying <code>DenseInput</code> from …\nRequired for use of <code>PlayerControls</code> in networking.\nGet dense control for player.\nGet dense control\nGet <code>DenseInput</code> for control.\nUpdate control of player from dense input.\nUpdate control from <code>DenseInput</code>.\nType of the arguments that are used to construct the …\nType of any errors that can occur during the construction …\nThe <code>IntlLangMemoizer</code> can memoize multiple constructed …\n<code>IntlMemoizer</code> is designed to handle lazily-initialized …\nThe trait that needs to be implemented for each intl …\nContains thread-safe variants.\nConstruct a formatter. This maps the <code>Self::Args</code> type to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a <code>IntlLangMemoizer</code> for a given language. If one does …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>IntlLangMemoizer</code> that is unique to a specific …\n<code>with_try_get</code> means <code>with</code> an internationalization formatter, …\nA thread-safe version of the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new <code>IntlLangMemoizer</code> that is unique to a specific …\nLazily initialize and run a formatter. See …\nAll samples are multiplied by the specified factor.\nThe action should occur when a clock reaches a specific …\nThe volume is adjusted by the given number of decibels.\nThe action should occur a certain amount of time from now.\nAn emitter in a spatial scene.\nA stereo audio sample.\nThe action should occur immediately.\nRoute audio to the main mixer track.\nThe minimum decibel value at which a sound is considered …\nWhere a source of audio should be routed to.\nAn error that is returned when a resource cannot be added …\nDescribes when an action should occur.\nA mixer track.\nA change in volume of a sound.\nA <code>Frame</code> with both the left and right samples set to <code>0.0</code>.\nReturns the volume as an amplitude.\nReturns the volume as a difference in the number of …\nReturns the frame mixed down to mono.\nPrecise timing for audio events.\nHelpers for sending commands from the gameplay thread to …\nCreates a set of command writers and readers and a …\nModifies audio signals.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a frame with both the left and right channels set …\nGiven a previous frame, a current frame, the two next …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe sample for the left channel.\nThe main entrypoint for controlling audio from gameplay …\nGlobal values that parameters (like volume and playback …\nCreates a frame with the given left and right values.\nPans a frame to the left or right.\nThe sample for the right channel.\nSources of audio.\nPositions audio in 3D space.\nOrganizes and applies effects to audio.\nSmooth interpolation between values.\nControls a clock.\nA unique identifier for a clock.\nThe rate that a clock ticks at.\nAn instant in time associated with a clock.\nThe clock ticks every x seconds.\nThe clock ticks x times per minute.\nThe clock ticks x times per second.\nReturns the <code>ClockSpeed</code> as a number of seconds between each …\nReturns the <code>ClockSpeed</code> as a number of ticks per minute.\nReturns the <code>ClockSpeed</code> as a number of ticks per second.\nThe clock this time is associated with.\nContains types for reporting information about clocks.\nThe amount of time since the last tick as a fraction of a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>ClockTime</code> for a clock with the specified number …\nCreates a <code>ClockTime</code> for a clock with the specified number …\nReturns the unique identifier for the clock.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPauses the clock.\nSets the speed of the clock.\nStarts or resumes the clock.\nStops and resets the clock.\nReturns <code>true</code> if the clock is currently ticking and <code>false</code> …\nThe elapsed time in whole ticks.\nReturns the current time of the clock.\nInformation about the current state of a clock.\nProvides information about any clock that currently exists.\nThe thing should start later because the appropriate clock …\nBuilds a <code>ClockInfoProvider</code> that provides fake clock info.\nThe thing will never start because the clock it depends on …\nThe thing should start now.\nWhen something should start given the current state of the …\nAdds a new fake clock to the builder and returns the …\nConsumes the builder and returns a <code>ClockInfoProvider</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets information about the clock with the given ID if it …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>MockClockInfoProviderBuilder</code> with room for …\nWhether the clock is currently running.\nThe current time of the clock.\nReturns whether something with the given start time should …\nReads values that were written to a <code>CommandWriter</code>.\nWrites values that can be sent to a <code>CommandReader</code>.\nA command that holds a target <code>Value</code> and a <code>Tween</code>.\nCreates a command writer/reader pair.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the latest value that was written to the …\nThe new value to set something to.\nThe tween to use to smoothly transition the value.\nWrites a new value, overwriting any previous values.\nReceives input audio from a mixer track and outputs …\nConfigures an effect.\nAllows the user to control the effect from gameplay code.\nCreates the effect and a handle to the effect.\nReduces (or increases) the dynamic range of audio.\nAdds echoes to a sound.\nMakes a sound harsher and noisier.\nAdjusts the volume of a frequency range of a sound.\nRemoves frequencies from a sound.\nCalled when the effect is first sent to the renderer.\nCalled when the sample rate of the renderer is changed.\nCalled whenever a new batch of audio samples is requested …\nAdjusts the panning of audio.\nTransforms an input <code>Frame</code>.\nAdds reverberations to a sound. Useful for simulating room …\nAdjusts the volume of audio.\nConfigures a compressor.\nControls a compressor.\nSets how much time it takes for the volume attenuation to …\nHow much time it takes for the volume attenuation to ramp …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the amount to change the volume after processing (in …\nThe amount to change the volume after processing (in dB).\nSets how much dry (unprocessed) signal should be blended …\nHow much dry (unprocessed) signal should be blended with …\nCreates a new <code>CompressorBuilder</code> with the default settings.\nSets how much the signal will be compressed.\nHow much the signal will be compressed.\nSets how much time it takes for the volume attenuation to …\nHow much time it takes for the volume attenuation to relax …\nSets how much time it takes for the volume attenuation to …\nSets the amount to change the volume after processing (in …\nSets how much dry (unprocessed) signal should be blended …\nSets how much the signal will be compressed.\nSets how much time it takes for the volume attenuation to …\nSets the volume above which volume will start to be …\nSets the volume above which volume will start to be …\nThe volume above which volume will start to be decreased …\nConfigures a delay effect.\nControls a delay effect.\nAdds an effect to the feedback loop.\nSets the amount of audio the delay can store.\nSets the delay time (in seconds).\nSets the amount of feedback.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets how much dry (unprocessed) signal should be blended …\nCreates a new <code>DelayBuilder</code> with the default settings.\nSets the delay time (in seconds).\nSets the amount of feedback.\nSets how much dry (unprocessed) signal should be blended …\nConfigures a distortion effect.\nControls a distortion effect.\nDifferent types of distortion.\nThe signal will be clamped to the -1.0 to 1.0 range.\nThe signal will be kept in the -1.0 to 1.0 range, and the …\nSets the factor to multiply the signal by before applying …\nThe factor to multiply the signal by before applying the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the kind of distortion to use.\nThe kind of distortion to use.\nSets how much dry (unprocessed) signal should be blended …\nHow much dry (unprocessed) signal should be blended with …\nCreates a new <code>DistortionBuilder</code> with the default settings.\nSets how much distortion should be applied.\nSets the kind of distortion to use.\nSets how much dry (unprocessed) signal should be blended …\nFrequencies around the user-defined frequency are adjusted.\nConfigures an EQ filter.\nControls an EQ filter.\nThe shape of the frequency adjustment curve.\nFrequencies around and higher than the user-defined …\nFrequencies around and lower than the user-defined …\nThe “center” or “corner” of the frequency range to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe volume adjustment for frequencies in the specified …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe shape of the frequency adjustment curve.\nCreates a new <code>EqFilterBuilder</code>.\nThe width of the frequency range to adjust.\nSets the “center” or “corner” of the frequency …\nSets the volume adjustment for frequencies in the …\nSets the shape of the frequency adjustment curve.\nSets the width of the frequency range to adjust.\nRemoves frequencies above and below the cutoff frequency.\nConfigures a filter effect.\nControls a filter effect.\nThe frequencies that the filter will remove.\nRemoves frequencies below the cutoff frequency.\nRemoves frequencies above the cutoff frequency.\nRemoves frequencies around the cutoff frequency.\nSets the cutoff frequency of the filter (in hertz).\nThe cutoff frequency of the filter (in hertz).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets how much dry (unprocessed) signal should be blended …\nHow much dry (unprocessed) signal should be blended with …\nSets the frequencies that the filter will remove.\nThe frequencies that the filter will remove.\nCreates a new <code>FilterBuilder</code> with the default settings.\nSets the resonance of the filter.\nThe resonance of the filter.\nSets the cutoff frequency of the filter (in hertz).\nSets how much dry (unprocessed) signal should be blended …\nSets the frequencies that the filter will remove.\nSets the resonance of the filter.\nConfigures a panning control effect.\nControls a panning control effect.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the panning adjustment to apply to input audio.\nConfigures a reverb effect.\nControls a reverb effect.\nSets how quickly high frequencies disappear from the …\nHow quickly high frequencies disappear from the …\nSets how much the room reverberates. A higher value will …\nHow much the room reverberates. A higher value will result …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets how much dry (unprocessed) signal should be blended …\nHow much dry (unprocessed) signal should be blended with …\nCreates a new <code>ReverbBuilder</code> with the default settings.\nSets how quickly high frequencies disappear from the …\nSets how much the room reverberates. A higher value will …\nSets how much dry (unprocessed) signal should be blended …\nSets the stereo width of the reverb effect (0.0 being …\nSets the stereo width of the reverb effect (0.0 being …\nThe stereo width of the reverb effect (0.0 being fully …\nConfigures a volume control effect.\nControls a volume control effect.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>VolumeControlBuilder</code>.\nSets the volume adjustment to apply to input audio.\nControls audio from gameplay code.\nSettings for an <code>AudioManager</code>.\nSpecifies how many of each resource type an audio context …\nThe default backend used by <code>AudioManager</code>s.\nCreates a clock.\nCreates a modulator.\nCreates a spatial scene.\nCreates a mixer sub-track.\nCommunication between Kira and a low-level audio API.\nReturns a mutable reference to this manager’s backend.\nConfigures the backend.\nSpecifies how many of each resource type an audio context …\nReturns the number of clocks that can exist at a time.\nThe maximum number of clocks that can exist at a time.\nThe number of commands that be sent to the renderer at a …\nErrors that can occur when using an <code>AudioManager</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a handle to the main mixer track.\nConfigures the main mixer track.\nReturns the number of modulators that can exist at a time.\nThe maximum number of modulators that can exist at a time.\nCreates a new <code>AudioManager</code>.\nReturns the number of clocks that currently exist.\nReturns the number of modulators that currently exist.\nReturns the number of sounds that are currently loaded.\nReturns the number of spatial scenes that currently exist.\nReturns the number of mixer sub-tracks that currently …\nPlays a sound.\nReturns the number of sounds that can be loaded at a time.\nThe maximum number of sounds that can be playing at a time.\nReturns the number of spatial scenes that can exist at a …\nThe maximum number of spatial scenes that can exist at a …\nReturns the number of mixer sub-tracks that can exist at a …\nThe maximum number of mixer sub-tracks that can exist at a …\nConnects a <code>Renderer</code> to a lower level audio API.\nThe default backend used by <code>AudioManager</code>s.\nErrors that can occur when using this backend.\nProduces <code>Frame</code>s of audio data to be consumed by a …\nSettings for this backend.\nPlays audio using cpal.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUseful for testing and benchmarking.\nCalled by the backend when the sample rate of the audio …\nCalled by the backend when it’s time to process a new …\nProduces the next <code>Frame</code> of audio.\nStarts the backend and returns itself and the initial …\nSends the renderer to the backend to start audio playback.\nAn error occurred when building the audio stream.\nA backend that uses cpal to connect a <code>Renderer</code> to the …\nSettings for the <code>cpal</code> backend.\nAn error occurred when getting the default output …\nErrors that can occur when using the cpal backend.\nA default audio output device could not be determined.\nAn error occurred when starting the audio stream.\nThe buffer size used by the device. If it is set to …\nThe output audio device to use. If <code>None</code>, the default output\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA backend that does not connect to any lower-level audio …\nSettings for the mock backend.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls the <code>on_start_processing</code> callback of the <code>Renderer</code>.\nCalls the <code>process</code> callback of the <code>Renderer</code>.\nThe sample rate that the <code>Renderer</code> should run at.\nChanges the sample rate of the <code>Renderer</code>.\nAn error occurred when initializing the sound.\nErrors that can occur when playing a sound.\nCould not play a sound because the maximum number of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAllows the user to control the modulator from gameplay …\nProduces a stream of values that a parameter can be linked …\nConfigures a modulator.\nA unique identifier for a modulator.\nCreates the modulator and a handle to the modulator.\nWhether the modulator can be removed from the audio …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOscillates back and forth.\nCalled whenever a new batch of audio samples is requested …\nSmoothly transitions values to other values.\nUpdates the modulator.\nReturns the current output of the modulator.\nContains types for reporting values of modulators.\nConfigures an LFO modulator.\nControls an LFO modulator.\nThe value jumps back and forth between two values.\nThe value moves gradually in one direction, then abruptly …\nThe value moves back and forth smoothly.\nThe value moves back and forth at a constant speed.\nDescribes an oscillation pattern.\nSets how much the value oscillates.\nHow much the value oscillates.\nSets how quickly the value oscillates.\nHow quickly the value oscillates.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the unique identifier for the modulator.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>LfoBuilder</code> with the default settings.\nSets a constant value that the modulator is offset by.\nThe constant value the modulator is offset by.\nSets how much the value oscillates.\nSets how quickly the value oscillates.\nSets a constant value that the modulator is offset by.\nSets the phase of the LFO (in radians).\nSets the oscillation pattern.\nSets the phase the LFO should start at (in radians).\nThe phase the LFO should start at (in radians).\nSets the oscillation pattern.\nThe oscillation pattern.\nThe ratio between how much time the oscillator spends on …\nConfigures a tweener.\nControls a tweener.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the unique identifier for the modulator.\nThe initial value of the tweener.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStarts a transition from the current value to a target …\nBuilds a <code>ModulatorValueProvider</code> that provides fake …\nProvides values of any modulator that currently exists.\nAdds a new fake modulator to the builder and returns the …\nConsumes the builder and returns a <code>ModulatorValueProvider</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the value of the modulator with the given ID if it …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>MockModulatorValueProviderBuilder</code> with room …\nA user-defined time in seconds.\nThe end of the audio data.\nThe ending time of a region of audio.\nErrors that can occur when starting the sound.\nThe sound is played at a speed factor of the original …\nErrors that can occur when loading or streaming an audio …\nThe type that can be used to control the sound once it has …\nA trait for types that can be converted into an …\nAn error occurred while reading the file from the …\nCould not determine the default audio track in the file.\nPlayback is paused.\nThe sound is fading out, and when the fade-out is …\nA point in time in a piece of audio.\nHow quickly a sound is played.\nThe playback state of a sound.\nThe sound is playing normally.\nA portion of audio.\nThe time in samples (individual audio data points).\nThe time in seconds.\nThe sound is played faster or slower so that the pitch of …\nAn actively playing sound.\nA source of audio that is loaded, but not yet playing.\nThe sound has stopped and can no longer be resumed.\nThe sound is fading out, and when the fade-out is …\nAn error occurred when parsing the file.\nCould not determine the duration of the audio.\nCould not determine the sample rate of the audio.\nThe audio uses an unsupported channel configuration. Only …\nReturns the playback rate as a factor of the original …\nReturns the number of semitones of pitch difference this …\nThe (exclusive) ending time of the region.\nReturns <code>true</code> if the sound is finished and can be unloaded.\nReturns the argument unchanged.")