searchState.loadedDescShard("jumpy", 0, "Jumpy\nDebug tools and menus.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the lua plugins loaded by the game.\nMacro to “derive” ( not really a derive macro ) …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGame plugin for performance profiling tools.\nExtension of bones <code>AudioCenter</code>.\nPlay some music using <code>StaticSoundSettings</code>. These may or …\nPlaying the character select music.\nPlaying the credits music.\nPlaying the fight music.\nThe amount of time to spend fading the music in and out.\nPlaying the main menu music.\nThe music playback state.\nMusic is not playing.\nBevy resource containing the in-game music playlist …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSystem that plays music according to the game mode.\nThe index of the song in the shuffled playlist.\nThe target fixed frames-per-second that the game …\nThe maximum number of players per match.\nUtilities for attaching entities to other entities.\nGeneric bullet implementation.\nCamera controller and parallax.\nIf control_source is <code>None</code> then the player is an AI.\nDamage / kill regions.\nDebug rendering for collision boxes, etc.\nDisables local input for session.\nMap editing implementation.\nMap element implementations.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGlobal constants.\nPlayer and editor input types.\nThe jumpy match runner has it’s own input collector …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCommon item code.\nEntity lifetimes for deleting an entity after a period of …\nMap and navigation mesh implementation.\nMap constructor implementations.\nCore game metadata\nPhysics and collision detection.\nPlayer controller, states, and animation implementation.\nThe lua plugins to enable for this match.\nGlobal, deterministic random resource.\nTracks score for match. Should be default if installing for\nTrack scoring of rounds / tournament\nThe player skin that has been selected.\nMiscellaneous utilities.\nComponent for attaching an entity to another entity.\nComponent that animates attachment offset with easing\nMetadata for <code>AttachmentEasing</code>\nMetadata for attachment\nThis is used by the <code>update_player_body_attachments</code> system …\nA component for attaching an entity to the player’s body.\nMake <code>Attachment</code> from meta and entity\nCompute offset from current progress\nAmount offset is changed over time (target offset = …\nEase\nThe entity to attach to.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhether the attachment should be to the head instead of …\nInitial offset of entity\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new body attachment to the given player.\nThe offset to the attached entity.\nThe offset relative to the center of the player’s sprite.\nHow long to apply ease function until delta_offset fully …\nOffset ease timer used to update progress of Ease\nShould attachment inherit parent’s rotation (applied to …\nShould attachment inherit parent’s rotation (applied to …\nThe player to attach to.\nSystem that cleans up old <code>Attachment</code> and …\nSynchronize <code>AtlasSprite</code> animation with entity animation\nSynchronize <code>AtlasSprite</code> animation with entity animation\nWhether or not to automatically play the same animation …\nSynchronize <code>Sprite</code> color with entity color\nSynchronize <code>Sprite</code> color with entity color\nWhether or not to automatically sync the color of the …\nSynchronize <code>Sprite</code> flip values from parent (both flip and …\nSynchronize <code>Sprite</code> flip values from parent (both flip and …\nTarget offset after easing is complete\nEase progress with delta time\nSystem to update the transforms of entities with the …\nSystem that updates entities with the <code>PlayerBodyAttachment</code> …\nBullet component.\nComponent containing the bullet’s metadata handle.\nThe direction that the bullet is moving.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHydrate bullets.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe player entity that shot the bullet.\nInstall this module.\nUpdate bullets.\nThe state of the camera.\nA subject of the camera.\nA sprite that is spawned as a part of the parallax …\nImplemenets the camera controller.\nImplements the background layer parallax.\nDisables the default camera controller. Useful, for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe sprite with <code>idx</code> of <code>0</code> will be centered, with indexes …\nInstall this module.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInformation about the parallax layer it is a part of.\nA rectangle around the subject that is larger than the …\nA rectangular damage region.\nA component that may be added to a damage region entity to …\nGet the collision rectangle of this damage region, given it…\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstall this module.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSystem that will eliminate players that are intersecting …\nThe size of the damage region in pixels\nResource configuring various debugging settings.\nAn implementation of the rapier <code>DebugRenderingBackend</code> that …\nResource containing the physics debug line entity.\nRenders debug lines for rapier colliders.\nRenders debug lines for damage regions.\nRenders debug lines for emote regions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstall this module.\nWhether or not to render damage region collider shapes.\nWhether or not to render kinematic collider shapes.\nWhether or not to show the pathfinding lines.\nA system parameter for editing the map.\nClear all of the elements on the map.\nClear all the tiles on the map.\nCreate a new map element at the given location on the …\nCreate a new layer with the given name.\nDelete an element off of the map.\nDelete the layer with the given index.\nReturns the argument unchanged.\nThe the number of layers.\nGet the size of the map.\nHandles user input comming from the editor and makes the …\nInstall this module.\nCalls <code>U::from(self)</code>.\nMove an element to a new position on the map.\nRename the layer with the given index.\nRename the map.\nSet the tilemap for the given layer.\nSet the tile index of a tile on the given layer.\nSwap the position of two layers.\nComponent that contains the <code>Entity</code> to de-hydrate when the …\nComponent containing an element’s metadata handle.\nMarker component added to map elements that have been …\nStores the spawned elements as having been spawned by the …\nStores the spawned elements as having been spawned by the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe offset of the bounding rect for the element in the …\nThe size of the bounding rect for the element in the editor\nThe group identifier where all of the elements are meant …\nStores the spawned elements as having come from the same …\nHelper macro to install element game and session plugins\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns if the entity provided is a spawner\nKills the provided spawner entity and any spawned entities …\nRemoves that spawned entity from the spawner entities …\nShow the element name above the bounding rect in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA crab roaming on the ocean floor\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHow long a crab has to be away from it’s spawn point …\nThe throwable crate item\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn animated decoration such as seaweed or anemones\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMoving to a location\nThe default and most-likely to ocurr number of fish in a …\nThe ammount greater or less than the base number of fish …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe distance that the fish wish to stay within the center …\nThe distance from the spawn point on each axis that the …\nA marker component for flappy jellyfish to indicate that …\nExplode flappy jellyfish that either have the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpawn a flappy jellyfish.\nA player with a jellyfish is holding shoot. Take control …\nTake control of the flappy associated with a jellyfish for …\nTry to cast the <code>asset</code> to a <code>JellyfishMeta</code> and get the …\nGrenades item\nThe grenade atlas\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe time in seconds before a grenade explodes\nThe amount of time left until the grenade explodes.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe owner of the grenade.\nA marker component for jellyfish items to indicate that it …\nA jellyfish item.\nA marker component for players to indicate that they are …\nThe angular velocity of the item when thrown.\nThe atlas for the item image.\nThe size of the item.\nThe animation frame a player’s fin should use when …\nThe metadata of a flappy jellyfish.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe offset relative to the center of the player that is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum amount of uses of the item. Resets when …\nThe velocity of the item when thrown.\nCommands for KickBombs\nComponent containing the kick bombs’s metadata handle.\nThe grenade atlas\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe time in seconds before a grenade explodes\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCommand for spawning  a kick bomb. If entity is provided, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe mine item\nThe delay after throwing the mine, before it becomes armed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nResource that stores the next spawner to use when spawning …\nMarker component for player spawners.\nPlayer spawner element\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe animation frames for when the snail is crawling\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe animation frames for when the snail is fleeing into …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>crawl_frames</code> indexes in which to move the snail\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is a sproinger\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMarker component added to things ( presumably players, but …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is a sword\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe alpha range for the player sprite during spawn …\nCreate a new layer\nThe editor inputs that a player may make.\nThe inputs for each player in this simulation frame.\nMove a layer up or down.\nPlayer input, not just controls, but also other status …\nRename a map layer.\nUpdate the tilemap of a layer.\nSpawn an element onto the map.\nWhether or not the player is present.\nThe player control input\nIf this is <code>None</code> it means the player is an AI, or remote …\nThe editor inputs the player is making, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether or not this is an AI player.\nThe selected player hat.\nThe selected player skin.\nThe tile collision kind\nWhether or not to move the layer down. If false, move the …\nThe entity to move.\nThe entity to delete.\nThe handle to the element that is being spawned.\nThe handle to the tilemap to use or <code>None</code> to clear the …\nThe name of the layer.\nThe map layer index to spawn the element on.\nThe index of the layer to rename.\nThe layer to move\nThe layer index of the layer to update.\nThe layer index of the layer to update\nThe new name of the layer.\nThe amount to move the entity.\nThe position of the tile to set\nThe index in the tilemap to set the tile, or <code>None</code> to …\nThe translation to spawn the element with.\nMarker component that may be added to an item to cause it …\nA helper struct containing a player-inventory pair that …\nAn intventory component, indicating another entity that …\nMarker component for items.\nMarker component added to items when they are dropped.\nComponent defining the grab settings when an item is …\nMarker component added to items when they are grabbed.\nComponent defining the strength of the throw types when an …\nMarker component added to items when they are used.\nSystem param that can be used to conveniently get the …\nThe relative velocities of each different throw type.\nDrop items that have the <code>DropItem</code> component added to them.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe player that used the item\nThe player that dropped the item\nThe player that grabbed the item\n<code>Self::base</code> with the throw values multiplied by <code>strength</code>.\nAn optional system value that gets run once on throw.\nChooses one of the throw values based on a <code>PlayerControl</code>\nA timer that can be used to make an entity invincible for …\nThe lifetime state of an entity\nHow long the entity has lived in seconds.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHow long the entity should be allowed to live in seconds.\nDespawns entities that have an expired lifetime\nResource containing the map metadata for this game session.\nThe Z depth in between each map layer.\nThe Z depth of the deepest map layer.\nResource indicating whether the map has been spawned.\nThe map navigation graph resource.\nRepresents the way to get from one tile to another tile in …\nThe inner graph type of <code>NavGraph</code>.\nThe type of nodes in the map navigation graph.\nComponent containing the map layer that an entity is …\nResource containing essential the map metadata for the map …\nHelper method to create a navigation graph from the map …\nCalculates the Pythagorean distance between two nodes.\nThe distance to the connected tile. This is used as the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe sequence of inputs for each frame, required to get to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe layer index of the layer that the element belongs to …\nHelper for getting the z-depth of the map layer with the …\nTrait implemented by map constructors.\nTake the map manager and use it to either modify or …\nMap randomizer using Shiftnanigans.\nAn element at a location within the map\nThis can contain one or more ungrouped pixels, allowing …\nThe entity as it exists in the map\nThe pixel provided to the pixel board randomizer\nMap randomizer using Shiftnanigans.\nThe tile as it exists in the map\nThis contains the layer pixels\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert <code>MapPoolNetwork</code> into a <code>MapPool</code>\nMake a <code>MapPool</code> consisting of single map.\nConstruct <code>MapPool</code> from slice of maps. Current map is first …\nReturn a random map handle from pool\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to <code>MapPoolNetwork</code> which is serializable for …\nRandomize current map. Updates <code>curent_map</code> on self and …\nMetadata for a player emote.\nMetadata for a player hat.\nExtension trait for the bones <code>AssetServer</code>.\nThe parallax background layers\nThe background color of the map, behind the parallax layers\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSize of the map in tiles\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe layers of the map\nRegister the default assets from <code>bones_framework</code>.\nHow long round lingers after displaying round winner\nAfter one or fewer players left, how long to watch before …\nHow many rounds between intermissions\nThe size of the tiles in pixels\nHow many rounds must be won to end match\nThe parallax background layers\nThe background color of the map, behind the parallax layers\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSize of the map in tiles\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the given position is out of the bounds of the …\nThe layers of the map\nThe size of the tiles in pixels\nMetadata for a player emote.\nMetadata for a player hat.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFor now kinematic mode is globally position based.\nA kinematic physics body\nAngular velocity in degrees per second\nHelper function to apply rotation to a kinematic body.\nGet the body’s axis-aligned-bounding-box ( AABB ).\nCollision detection implementation.\nDynamicBody component allows simultaing phyiscs of a body.\nWhether or not the body should fall through jump_through …\nSets a 1 frame override for the body friction. It will be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf this is <code>true</code> the body will be affected by gravity\nHydrate newly added <code>KinematicBody</code>s.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf body is controlled by player or some system simulating …\nWhether or not physics has been disabled for this body.\nWill be <code>true</code> if the body is currently on top of a …\nIndicates that we should reset the collider like it was …\nPosition cached from last kinematic body update, used to …\nSee comment for <code>last_update_position</code>, this tracks previous …\nPrelude containing the common types defined by Rapier.\nUpdate physics for kinematic bodies.\nAn actor in the physics simulation.\nA collider body in the physics simulation.\nThe Jumpy collision shape type.\nResource that maps <code>ColliderShape</code>s to a rapier <code>SharedShape</code>.\nA cache containing a map of entities, to the list of …\nPass-through hasher for entities to reduce hashing cost …\nErrors produced from physics system\nParameters for physics step\nResource containing the data structures needed for rapier …\nNamespace struct for converting rapier collider user data …\nA solid in the physics simulation.\nThe kind of collision that a map tile has.\nComponent added to tiles that have an additional collider …\nComponent added to tiles that have been given …\nReturns the collisions that one actor has with any other …\nReturns the collisions that one actor has with any other …\nActors are things like players that move around and detect …\nApply simulation commands to dynamic bodies.\nHelper function for configuring ColliderBuilder for actors.\nClear tracked data for removed colliders this frame (call …\nNotify cache of removal of collider to correctly handle …\nA collider is anything that can detect collisions in the …\nThe collisions in the cache.\nThe rapier context.\nPut the entity’s collider into descent mode so that it …\nWhether or not the collider wants to drop through …\nGet an <code>Entity</code> from the given Rapier user data ( assuming …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate rapier user data value from the entity <code>e</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the set of entities that the given <code>entity</code> is …\nGet the collider for the given entity.\nGravity (positive value is downward force)\nWhen spawning or teleporting an entity, this should be …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempt to move a body horizontally. This will return <code>true</code> …\nAttempt to move a body vertically. This will return <code>true</code> …\nCall closure with mutable reference to <code>rapier::RigidBody</code> …\nOffset of collider from center of tile.\nPrelude containing the common types defined by Rapier.\nThe handle to the Rapier rigid body associated to this …\nMap removed collider handles to entities. When Rapier …\nWhether or not the collider is in the process of going …\nUpdate shape of actor’s <code>Collider</code>. Warns if entity does …\nUpdate shape of actor’s <code>Collider</code>. Warns if entity does …\nShape of collider, should be contained within tile.\nGet the solver group for tile, this is collision filtering …\nReturns whether or not there is a tile or solid at the …\nSolids are things like walls and platforms, that aren’t …\nSync the transforms and attributes ( like <code>disabled</code> ) of …\nTerminal velocity (effectively min velocity on y axis, …\nGet the <code>TileCollisionKind</code> of the first tile detected …\nReturns the tile collision at the given point.\nContains the rapier collider handles for each map tile.\nUpdates the collision world with the entity’s actual …\nUpdate the collision for the tile with the given layer …\nUpdate all of the map tile collisions.\nUpdate the collisions for map tiles that pass the given …\nFlags for collision filtering, this is used for collision …\nDefault membership for bodies\nFlags for filtering simulated collision for dynamics. …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe maximum number of rotational degrees of freedom of a …\nAn axis-aligned bounding box.\nThe solved spring-like equation is: …\nFlags affecting whether or not collision-detection happens …\nFlags affecting the events generated for this collider.\nFlags affecting the behavior of the constraints solver for …\nA potential new collision pair has been detected by the …\nThe dimension of the rotations.\nThe angular vector type.\nThe rotational degree of freedom along the joint’s local …\nThe angular inertia of a rigid body.\nStorage needed to store triangle indices.\nStorage needed to store points.\nStorage needed to store topology faces.\nStorage needed to store topology half-edges.\nStorage needed to store topology vertices.\nStorage needed to store u32\nStorage needed to store usize.\nStorage needed to store vectors.\nStorage needed to store triples of vectors.\nThe two coefficients are averaged.\nAt least two adjacent triangles have opposite orientations.\nFound a triangle with two or three identical vertices.\nA ball shape.\nA ball shape.\nA ball shape.\nA pair of rigid body handles.\nThe type of a body, governing the way it is affected by …\nTrait of bounding volumes.\nTrait implemented by broad-phase algorithms supported by …\nA broad-phase combining a Hierarchical Grid and …\nAn event emitted by the broad-phase.\nSolver responsible for performing motion-clamping on …\nA capsule shape.\nA capsule shape.\nA capsule shape.\nA collision event handler that collects events into a …\nOrientation with a clockwise orientaiton, i.e., with a …\nRules used to combine two coefficients.\nA geometric entity that can be attached to a body so it …\nA collider is being rendered.\nThe AABB of a collider is being rendered.\nData associated to a collider that takes part to a …\nA structure responsible for building a new collider.\nFlags describing how the collider has been modified by the …\nEnum indicating whether or not a collider is enabled.\nA set of flags for controlling collision/intersection …\nIndex of a node of the interaction graph.\nThe unique identifier of a collider added to a collider …\nThe mass-properties of a collider.\nThe constraints solver-related properties of this collider …\nA pair of collider handles.\nInformation about the rigid-body this collider is attached …\nThe position of a collider.\nA set of colliders that can be handled by a physics <code>World</code>.\nThe shape of a collider.\nThe type of collider.\nEvents occurring when two colliders start or stop colliding\nFlags providing more information regarding a collision …\nThe collision pipeline, responsible for performing …\nA compound shape with an aabb bounding volume.\nA Compound shape.\nA Compound shape.\nA contact between two colliders.\nA single contact between two collider.\nEvent occurring when the sum of the magnitudes of the …\nA contact manifold between two colliders.\nA contact manifold between two colliders.\nContext given to custom contact modifiers to modify the …\nThe description of all the contacts between a pair of …\nThe contacts of a contact-pair are being rendered.\nA 2D convex polygon.\nOrientation with a clockwise orientaiton, i.e., with a …\nA matrix that represent the cross product with a given …\nA cuboid shape.\nA cuboid shape.\nA cuboid shape.\nThe <code>Collider::position</code> is taken into account.\nA custom user-defined shape.\nA custom user-defined shape with a type identified by a …\nThe default tolerance used for geometric operations.\nThe dimension of the space.\nA dynamically sized column-major matrix.\nA dynamically sized column vector.\nA color for debug-rendering.\nTrait implemented by graphics backends responsible for …\nFlags indicating what part of the physics engine should be …\nThe object currently being rendered by the debug-renderer.\nPipeline responsible for rendering the state of the …\nStyle used for computing colors when rendering the scene.\nThe default broad-phase implementation recommended for …\nDegenerate triangle.\nThe two colliders are guaranteed not to touch any more.\nThe collider is given a density.\nThe dimension of the ambient space.\nThe joint is disabled by the user explicitly.\nThe collider is disabled by the user explicitly.\nThe joint wasn’t disabled by the user explicitly but it …\nThe collider wasn’t disabled by the user explicitly but …\nA <code>RigidBodyType::Dynamic</code> body can be affected by all …\nA <code>RigidBodyType::Dynamic</code> body can be affected by all …\nThe joint is enabled.\nThe collider is enabled.\nTrait implemented by structures responsible for handling …\nShape-dependent identifier of a face.\nAn identifier of a feature of a convex polyhedron.\nA <code>RigidBodyType::Fixed</code> body cannot be affected by external …\nA <code>RigidBodyType::Fixed</code> body cannot be affected by external …\nA fixed joint, locks all relative motion between two …\nCreate fixed joints using the builder pattern.\nThe solved spring-like equation is: …\nA 2D heightfield with a generic storage buffer for its …\nA generic joint.\nCreate generic joints using the builder pattern.\nA triangle mesh.\nA bit mask identifying groups for interaction.\nA half-space delimited by an infinite plane.\nA shape representing a full half-space.\nA shape representing a full half-space.\nA heightfield shape.\nA heightfield shape.\nA heightfield shape.\nIndicates if a cell of an heightfield is removed or not. …\nTrait describing all the types needed for storing an …\nType of the array containing the heightfield’s heights.\nAn impulse-based joint attached to two bodies.\nAn impulse-joint is being rendered.\nThe unique identifier of a joint added to the joint set. …\nA set of impulse_joints that can be handled by a physics …\nParameters for a time-step of the physics engine.\nA graph where nodes are collision objects and edges are …\nPairwise filtering using bit masks.\nThe description of all the contacts between a pair of …\nStructure responsible for maintaining the set of active …\nThe transformation matrix type.\nThe type of a constraint Jacobian in twist coordinates.\nThe type of a slice of the constraint Jacobian in twist …\nThe type of a mutable slice of the constraint Jacobian in …\nA bit mask identifying multiple degrees of freedom of a …\nIdentifiers of degrees of freedoms of a joint.\nEnum indicating whether or not a joint is enabled.\nThe limits of a joint along one of its degrees of freedom.\nA joint’s motor along one of its degrees of freedom.\nA <code>RigidBodyType::KinematicPositionBased</code> body cannot be …\nA <code>RigidBodyType::KinematicPositionBased</code> body cannot be …\nA <code>RigidBodyType::KinematicVelocityBased</code> body cannot be …\nA <code>RigidBodyType::KinematicVelocityBased</code> body cannot be …\nAdditional shape-specific projection information\nFlags affecting the behavior of the constraints solver for …\nMax number of pairs of contact points from the same …\nMass to be added to the rigid-body. This will also …\nThe collider is given a mass.\nThe local mass properties of a rigid-body.\nThe collider is given explicit mass-properties.\nMass properties to be added as-is.\nThe matrix type.\nThe greatest coefficient is chosen.\nThe smallest coefficient is chosen.\nThe spring-like model used for constraints resolution.\nAn articulated body simulated using the …\nThe temporary index of a multibody added to a …\nAn joint attached to two bodies based on the reduced …\nA multibody joint is being rendered.\nThe unique handle of an multibody_joint added to a …\nA set of rigid bodies that can be handled by a physics …\nOne link of a multibody.\nIndexes usable to get a multibody link from a …\nThe two coefficients are multiplied.\nThe narrow-phase responsible for computing precise contact …\nThe point lies on the segment interior.\nThe point lies on an edge.\nThe point lies on the triangle interior.\nThe point lies on the triangle interior (for “solid” …\nThe point lies on a vertex.\nThe point lies on a vertex.\nThe orientation type.\nA feature id where the feature type is packed into the …\nContext given to custom collision filters to filter-out …\nUser-defined functions called by the physics engines …\nThe physics pipeline, responsible for stepping the whole …\nThe point type.\nThe projection of a point on a collider.\nTrait of objects that can be tested for point inclusion …\nReturns shape-specific info in addition to generic …\nA polygonal feature representing the local polygonal …\nTrait implemented by convex shapes with features with …\nA polyline.\nA set of segments.\nA set of segments.\nThe principal angular inertia of a rigid body.\nA prismatic joint, locks all relative motion between two …\nCreate prismatic joints using the builder pattern.\nStorage needed to store a Qbvh.\nA filter tha describes what collider should be included or …\nFlags for excluding whole sets of colliders from a scene …\nA pipeline for performing queries on all the colliders of …\nIndicates how the colliders position should be taken into …\nA ray that can be cast against colliders.\nTraits of objects which can be transformed and tested for …\nThe intersection between a ray and a  collider.\nThe scalar type used throughout this crate.\nA revolute joint, locks all relative motion except for …\nCreate revolute joints using the builder pattern.\nA rigid body.\nA rigid-body is being rendered.\nThe rb_activation status of a body.\nMass and angular inertia added to a rigid-body on top of …\nA builder for rigid-bodies.\nInformation used for Continuous-Collision-Detection.\nFlags describing how the rigid-body has been modified by …\nThe set of colliders attached to this rigid-bodies.\nDamping factors to progressively slow down a rigid-body.\nThe dominance groups of a rigid-body.\nThe user-defined external forces applied to this …\nIndex of a node of the interaction graph.\nThe unique handle of a rigid body added to a <code>RigidBodySet</code>.\nInternal identifiers used by the physics engine.\nThe mass properties of a rigid-body.\nThe position of this rigid-body.\nA set of rigid bodies that can be handled by a physics …\nThe status of a body, governing the way it is affected by …\nThe velocities of this rigid-body.\nA rope joint, limits the maximum distance between two …\nCreate rope joints using the builder pattern.\nThe rotation matrix type.\nA convex polygon dilated by a sphere (so it has round …\nA convex polygon with rounded corners.\nA convex polygon with rounded corners.\nA cuboid dilated by a sphere (so it has round corners).\nA cuboid with rounded corners.\nA cuboid with rounded corners.\nA shape with rounded borders.\nA triangle dilated by a sphere (so it has round corners).\nA triangle with rounded corners.\nA triangle with rounded corners.\nSIMD_WIDTH - 1\nThe number of lanes of a SIMD number.\nThe maximum number of possible rotations and translations …\nA 2D symmetric-definite-positive matrix.\nA segment shape.\nA segment shape.\nA segment shape.\nLogical description of the location of a point on a …\nA collider that can generate intersection and intersection …\nTrait implemented by shapes usable by Rapier.\nEnum representing the type of a shape.\nThe shape of a collider.\nA SIMD bool with SIMD_WIDTH lanes.\nTrait implemented by shapes composed of multiple simpler …\nA SIMD float with SIMD_WIDTH lanes.\nA collider that can generate contacts and contact events.\nA contact seen by the constraints solver for computing …\nFlags affecting the behavior of the constraints solver for …\nA vector with a dimension equal to the maximum number of …\nA spring-damper joint, applies a force proportional to the …\nA SpringJoint joint using the builder pattern.\nEvent occurring when two colliders start colliding\nType of the array containing the heightfield’s cells …\nEvent occurring when two colliders stop colliding.\nTraits of convex shapes representable by a support mapping …\nThe …\nThe …\nThe time of impact between two shapes.\nThe dimension of the space multiplied by two.\nTemporary index to and edge of the interaction graph.\nA face of a triangle-mesh’s half-edge topology.\nA half-edge of a triangle-mesh’s half-edge topology.\nA vertex of a triangle-mesh’s half-edge topology.\nIndicated an inconsistency in the topology of a triangle …\nA single contact between two shape.\nThe translation type.\nA triangle-mesh.\nA triangle mesh shape.\nA triangle mesh shape.\nThe connected-components of a triangle mesh.\nThe status of the cell of an heightfield.\nTrait describing all the types needed for storing a …\nThe half-edge topology information of a triangle mesh.\nA triangle shape.\nA triangle shape.\nA triangle shape.\nOrientation of a triangle.\nDescription of the location of a point on a triangle.\nEnum representing the shape with its actual type\nThe unit vector type.\nUnknown identifier.\nThe vector type.\nShape-dependent identifier of a vertex.\nThe translational degree of freedom along the joint’s …\nThe translational degree of freedom along the joint’s …\nThe segment first point.\nThe triangle first point.\nControls whether collision-detection happens between two …\nContact pairs enabled for this collider.\nThe events enabled for this collider.\nEvents enabled for this collider.\nThe physics hooks enabled for contact pairs and …\nPhysics hooks enabled for this collider.\nMass-properties of this rigid-bodies, added to the …\nThe additional number of solver iterations run for this …\nAmount of penetration the engine wont attempt to correct …\nDamping factor for gradually slowing down the angular …\nDamping factor for gradually slowing down the angular …\nThe angular linear velocity bellow which the body can fall …\nThe angular velocity of the rigid-body.\nThe angular velocity of the rigid-body to be built.\nConverts this shape to a polygonal feature-map, if it is …\nConvents this shape into its support mapping, if it has …\nGets the underlying shape as an enum.\nThe segment second point.\nThe triangle second point.\nThe set of rigid-bodies.\nThe set of rigid-bodies.\nHandle to the first body attached to this joint.\nThe first rigid body handle.\nHandle to the second body attached to this joint.\nThe second rigid body handle.\nThe radius of the rounded border.\nThe radius of the rounded border.\nThe radius of the rounded border.\nThe radius of the rounded border.\nThe number of subdivision used to approimate the curved …\nThe triangle third point.\nWhether or not the rigid-body to be created can sleep if …\nComputes the time of impact between this transform shape …\nComputes the time of impact, and normal between this …\nComputes the time of impact between this transform shape …\nComputes the time of impact, and normal between this …\nIs CCD active for this rigid-body?\nIs CCD enabled for this rigid-body?\nWhether continuous collision-detection is enabled for the …\nThe max distance between this rigid-body’s center of …\nThe distance used by the CCD solver to decide if a …\nReturns a point inside of this bounding volume. This is …\nClones this shape into a boxed trait-object.\nThe handle of the first collider involved in the potential …\nThe handle of the first collider involved in the potential …\nThe first collider involved in the contact.\nThe handle of the first collider involved in this pair.\nThe first collider involved in the contact pair.\nThe handle of the first collider involved in the potential …\nThe handle of the first collider involved in the potential …\nThe second collider involved in the contact.\nThe handle of the second ocllider involved in this pair.\nThe second collider involved in the contact pair.\nThe color of the colliders Aabbs.\nThe color of colliders attached to dynamic rigid-bodies.\nThe color of colliders attached to fixed rigid-bodies.\nThe color of colliders attached to kinematic rigid-bodies.\nThe color of colliders not attached to any rigid-body.\nThe set of colliders.\nThe set of colliders.\nThe groups controlling the pairs of colliders that can …\nThe collision groups for the collider being built.\nComputes the <code>Aabb</code> of this shape with the given position.\nComputes the bounding-sphere of this shape with the given …\nComputes the <code>Aabb</code> of this shape.\nComputes the bounding-sphere of this shape.\nComputes the swept <code>Aabb</code> of this shape, i.e., the space it …\nThe collor for the segments joining the two contact points.\nThe total force magnitude beyond which a contact force …\nThe color of the contact normals.\nThe length of the contact normals.\nAre contacts between the attached rigid-bodies enabled?\nChecks if this bounding volume contains another one.\nTests if the given point is inside of <code>self</code>.\nTests if the given point is inside of <code>self</code> transformed by <code>m</code>…\nThe coordinates of this point, i.e., the shift from the …\nCounters used for benchmarking only.\nThe coupled degrees of freedom of this joint.\nThe damping coefficient of the motor’s spring-like …\n0-1: the damping ratio used by the springs for Baumgarte …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nUser-data associated to this contact.\nAdditional tracked data associated to this contact …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe underlying joint data.\nThe joint’s description.\nThe joint’s description.\nThe underlying joint data.\nThe underlying joint data.\nThe underlying joint data.\nThe underlying joint data.\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nUser-data associated to this contact.\nDirection of the ray.\nIf a rigid-body is disabled, its attached entities will …\nThe distance between the two contact points.\nThe distance between the two contact points.\nThe distance between the two original contacts points …\nComputes the minimal distance between a point and <code>self</code>.\nComputes the minimal distance between a point and <code>self</code> …\nThe dominance group of the rigid-body to be built.\nDraws a colored line.\nDraws a chain of line.\nDraws a set of line.\nThe timestep length (default: <code>1.0 / 60.0</code>)\nThe inverse mass taking into account translation locking.\nThe square-root of the world-space inverse angular inertia …\nWhether or not the joint is enabled.\nWill the rigid-body being built be enabled?\nWhether or not the collider is enabled.\nWill the collider being built be enabled?\n0-1: multiplier for how much of the constraint violation …\nIf set, this collider will be excluded from the scene …\nIf set, any collider attached to this rigid-body will be …\nThe face associated to this half-edge.\nThe <code>face_colors[i]</code> gives the connected-component index of …\nThe faces of this half-edge representation.\nFeature at the intersection point.\nThe shape’s normal at the given point located on a …\nThe feature ID of this polygonal feature.\nThe feature ID of the first shape involved in the contact.\nThe feature ID of the first shape involved in the contact.\nThe feature ID of the second shape involved in the contact.\nThe feature ID of the second shape involved in the contact.\nGroups filter.\nApplies the contact pair filter.\nApplies the intersection pair filter.\nPredicate to filter-out some objects from the …\nFlags for locking rotation and translation.\nFlags indicating what particular type of colliders should …\nAccumulation of external forces (only for dynamic bodies).\nThe friction coefficient of this collider.\nThe effective friction coefficient at this contact point.\nThe friction coefficient of the collider to be built.\nThe rule applied to combine the friction coefficients of …\nThe rule used to combine two friction coefficients.\nGravity is multiplied by this scaling factor before it’s …\nThe scale factor applied to the gravity affecting the …\nThe set of faces grouped by connected components.\nIf set, only colliders with collision groups compatible …\nOne of the half-edge with this vertex as endpoint.\nThe half-edge adjacent to this face, with a starting point …\nThe half-edges of this half-edge representation.\nThe half-extents of the cuboid.\nHandle of the rigid-body this collider is attached to.\nHandle a collision event.\nHandle a force event.\nIs there any active contact in this contact pair?\nThe multibody link index to be given to <code>Multibody::link</code>.\nThe impulse applied to enforce the joint’s limit.\nThe impulse applied by this motor.\nThe impulse, along the contact normal, applied by this …\nThe color of the line between a rigid-body’s …\nThe color of the line between the two anchors of an …\nThe impulses applied by this joint.\nThe shape being rounded.\nThe shape being rounded.\nThe shape being rounded.\nThe shape being rounded.\nAre the colliders intersecting?\nChecks if this bounding volume intersect with another one.\nTests whether a ray intersects this transformed shape.\nTests whether a ray intersects this transformed shape.\nThe inverse of the mass of a rigid-body.\nThe inverse of the principal angular inertia of the …\nIs this shape known to be convex?\nIs this shape a <code>ConvexPolyhedron</code>?\nWhether or not the point to project was inside of the …\nWhether or not this contact existed during the last …\nIs this collider a sensor?\nThe multibody joint of this link.\nThe fraction of critical damping applied to the joint for …\n0-1: multiplier for how much of the joint violation will …\nThe degrees-of-freedoms limited by this joint.\nThe limits, along each degrees of freedoms of this joint.\nDamping factor for gradually slowing down the …\nDamping factor for gradually slowing down the …\nThe threshold linear velocity bellow which the body can …\nThe linear velocity of the rigid-body.\nThe linear velocity of the rigid-body to be built.\nThe center of mass of a rigid-body expressed in its …\nThe joint’s frame, expressed in the first rigid-body’s …\nThe joint’s frame, expressed in the second …\nThe local mass properties of the rigid-body.\nThe contact normal of all the contacts of this manifold, …\nThe contact normal of all the contacts of this manifold, …\nThe contact point in the local-space of the first shape.\nThe contact point in the local-space of the first shape.\nThe contact point in the local-space of the second shape.\nThe contact point in the local-space of the second shape.\nCompute the support polygonal face of <code>self</code> towards the <code>dir</code>.\nSame as <code>self.local_support_point</code> except that <code>dir</code> is …\nThe degrees-of-freedoms locked by this joint.\nEnlarges this bounding volume.\nCreates a new, enlarged version, of this bounding volume.\nThe component at the first row and first column of this …\nThe component at the first row and second column of this …\nThe component at the second row and second column of this …\nThe contact manifold.\nThe set of contact manifolds between the two colliders.\nApplies a function to one sub-shape of this composite …\nCompute the mass-properties of this shape given its …\nControls the way the collider’s mass-properties are …\nThe maximum bound of the joint limit.\nMaximum number of substeps performed by the  solver …\nThe maximum force this motor can deliver.\nThe world-space (unit) direction of the force with …\nThe magnitude of the largest force at a contact point of …\nMaximum amount of penetration the solver will attempt to …\nGroups memberships.\nMerges this bounding volume with another one. The merge is …\nMerges this bounding volume with another one.\nThe minimum bound of the joint limit.\nMinimum timestep size when using CCD with multiple …\nMinimum number of dynamic bodies in each active island …\nFlags controlling what part of the physics engine need to …\nThe spring-like model used for simulating this motor.\nModifies the set of contacts seen by the constraints …\nThe degrees-of-freedoms motorised by this joint.\nThe motors, along each degrees of freedoms of this joint.\nThe multibody index to be used as …\nThe color of the line between a rigid-body’s …\nThe color of the line between the two anchors of a …\nThe next half-edge.\nThe next position of the rigid-body.\nThe normal at the intersection point.\nThe contact normal that can be modified.\nThe halfspace planar boundary’s outward normal.\nThe world-space contact normal shared by all the contact …\nThe local-space outward normal on the first shape at the …\nThe local-space outward normal on the second shape at the …\nNumber of addition friction resolution iteration run …\nNumber of internal Project Gauss Seidel (PGS) iterations …\nThe number of solver iterations run by the constraints …\nThe number of vertices on this polygon (must be &lt;= 4).\nStarting point of the ray.\nThe projection result.\nThe contact point in world-space.\nConstruct a fixed-size point directly from data.\nThe contacts points.\nConst position of this collider relative to its parent …\nThe world-space position of the rigid-body.\nThe initial position of the rigid-body to be built.\nThe position of this collider.\nIf set, any collider for which this closure returns false …\nThe maximal distance separating two objects that will …\nProjects a point on <code>self</code>.\nProjects a point on the boundary of <code>self</code> and returns the …\nProjects a point on <code>self</code>.\nProjects a point on <code>self</code>, with a maximum projection …\nProjects a point on <code>self</code>, unless the projection lies …\nProjects a point on <code>self</code> transformed by <code>m</code>.\nProjects a point on the boundary of <code>self</code> transformed by <code>m</code> …\nProjects a point on <code>self</code> transformed by <code>m</code>.\nProjects a point on <code>self</code> transformed by <code>m</code>, with a maximum …\nProjects a point on <code>self</code> transformed by <code>m</code>, unless the …\nGets the acceleration structure of the composite shape.\nThe radius of the ball.\nThe radius of the capsule.\nThe range of connected components. …\nThe relative dominance of the bodies involved in this …\nThe restitution coefficient of this collider.\nThe effective restitution coefficient at this contact …\nThe restitution coefficient of the collider to be built.\nThe rule applied to combine the restitution coefficients …\nThe rule used to combine two restitution coefficients.\nThe handle of the first body involved in the potential …\nThe handle of the first body involved in the potential …\nThe first rigid-body involved in this contact manifold.\nThe handle of the first body involved in the potential …\nThe handle of the first body involved in the potential …\nThe second rigid-body involved in this contact manifold.\nThe length of the local coordinate axes rendered for a …\nThe pure rotational part of this isometry.\nThe endpoints of the capsule’s principal axis.\nThe shape of the collider to be built.\nGets the type tag of this shape.\nIf a rigid-body is sleeping, its attached entities will …\nIs this body sleeping?\nWhether or not the rigid-body is to be created asleep.\nThe solver contacts that can be modified.\nThe contacts that will be seen by the constraints solver …\nFlags used to control some aspects of the constraints …\nThe groups controlling the pairs of collider that have …\nThe solver groups for the collider being built.\nThe way the time-of-impact computation algorithm …\nThe stiffness coefficient of the motor’s spring-like …\nThe style used to compute the line colors for each element …\nThe number of subdivision used to approximate the curved …\nThe first subshape involved in this contact manifold.\nThe second subshape involved in this contact manifold.\nIf the first shape involved is a composite shape, this …\nIf the second shape involved is a composite shape, this …\nSame as <code>self.support_point</code> except that <code>dir</code> is normalized.\nThe friction impulse along the vector orthonormal to the …\nThe desired tangent relative velocity at the contact point.\nThe target position of the motor.\nThe target velocity of the motor.\nTighten this bounding volume.\nCreates a new, tightened version, of this bounding volume.\nSince how much time can this body sleep?\nThe amount of time the rigid-body must remain below the …\nThe time of impact of the ray with the object. The exact …\nThe time at which the objects touch.\nAccumulation of external torques (only for dynamic bodies).\nThe sum of all the forces between the two colliders.\nThe sum of the magnitudes of each force between the two …\nThe pure translational part of this isometry.\nThis half-edge twin on the adjacent triangle.\nInitializes and generate the velocity constraints …\nInitializes and generate the velocity constraints …\nUpdates the broad-phase.\nUser-defined data attached to the manifold.\nUser-defined data associated to this joint.\nUser-defined data associated to this rigid-body.\nAn arbitrary user-defined 128-bit integer associated to …\nA user-defined piece of data.\nUser-defined data associated to this collider.\nThe user-data of the collider being built.\nForces applied by the user.\nTorque applied by the user.\nThe translation coordinates, i.e., how much is added to a …\nConstruct a fixed-size column vector directly from data.\nThe first vertex of this edge.\nThe vertices of this half-edge representation.\nUp to two vertices forming this polygonal feature.\nThe feature IDs of this polygon’s vertices.\nThe local-space closest point on the first shape at the …\nThe local-space closest point on the second shape at the …\nThe world-space center of mass of the rigid-body.\nThe time used to integrate the rigid-body’s velocity and …\nThe edge shared between the two triangles.\nThe first triangle, with an orientation opposite to the …\nThe second triangle, with an orientation opposite to the …\nTrait implemented by rotations that can be used inside of …\nA 2D affine transformation. Stored as a homogeneous 3x3 …\nA 3D affine transformation. Stored as a homogeneous 4x4 …\nA array-based statically sized matrix data storage.\nThe bidiagonalization of a general matrix.\nThe column-stride of the owned data storage for a buffer …\nThe static stride of this storage’s columns.\nThe Cholesky decomposition of a …\nTrait <strong>alias</strong> for <code>Add</code> and <code>AddAssign</code> with result of type <code>Self</code>.\nTrait <strong>alias</strong> for <code>Div</code> and <code>DivAssign</code> with result of type <code>Self</code>.\nTrait <strong>alias</strong> for <code>Mul</code> and <code>MulAssign</code> with result of type <code>Self</code>.\nTrait <strong>alias</strong> for <code>Sub</code> and <code>SubAssign</code> with result of type <code>Self</code>.\nThe QR decomposition (with column pivoting) of a general …\nA complex number in Cartesian form.\nTrait shared by all complex fields and its subfields (like …\nA dynamically sized column-major matrix.\nA column-major matrix slice dynamic numbers of rows and …\nA column-major matrix slice dynamic numbers of rows and …\nA column-major matrix view dynamic numbers of rows and …\nA column-major matrix view dynamic numbers of rows and …\nA dynamically sized column vector.\nA column vector slice dynamic numbers of rows and columns.\nA column vector slice dynamic numbers of rows and columns.\nA column vector view dynamic numbers of rows and columns.\nA column vector view dynamic numbers of rows and columns.\nAn allocator based on <code>ArrayStorage</code> and <code>VecStorage</code> for …\nTrait implemented by any type that can be used as a …\nTrait implemented exclusively by type-level integers.\nA range with a size that may be known at compile-time.\nA dual quaternion.\nDim of dynamically-sized algebraic entities.\nThe type of the elements of each lane of this SIMD value.\nEuclidean norm.\nTrait implemented by fields, i.e., complex numbers and …\nLU decomposition with full row and column pivoting.\nHessenberg decomposition of a general matrix.\nMarker trait indicating that a storage is stored …\nTrait implemented by <code>Dyn</code>.\nTrait implemented by <code>Dyn</code> and type-level integers different …\nA direct isometry, i.e., a rotation followed by a …\nA 2-dimensional direct isometry using a unit complex …\nA 3-dimensional direct isometry using a unit quaternion …\nA 2-dimensional direct isometry using a rotation matrix …\nA 3-dimensional direct isometry using a rotation matrix …\nLU decomposition with partial (row) pivoting.\nLp norm.\nThe most generic column-major matrix (and vector) type.\nA stack-allocated, column-major, 1x1 square matrix.\nA stack-allocated, column-major, 1x2 matrix.\nA stack-allocated, column-major, 1x3 matrix.\nA stack-allocated, column-major, 1x4 matrix.\nA stack-allocated, column-major, 1x5 matrix.\nA stack-allocated, column-major, 1x6 matrix.\nA heap-allocated, column-major, matrix with 1 rows and a …\nA stack-allocated, column-major, 2x2 square matrix.\nA stack-allocated, column-major, 2x1 matrix.\nA stack-allocated, column-major, 2x3 matrix.\nA stack-allocated, column-major, 2x4 matrix.\nA stack-allocated, column-major, 2x5 matrix.\nA stack-allocated, column-major, 2x6 matrix.\nA heap-allocated, column-major, matrix with 2 rows and a …\nA stack-allocated, column-major, 3x3 square matrix.\nA stack-allocated, column-major, 3x1 matrix.\nA stack-allocated, column-major, 3x2 matrix.\nA stack-allocated, column-major, 3x4 matrix.\nA stack-allocated, column-major, 3x5 matrix.\nA stack-allocated, column-major, 3x6 matrix.\nA heap-allocated, column-major, matrix with 3 rows and a …\nA stack-allocated, column-major, 4x4 square matrix.\nA stack-allocated, column-major, 4x1 matrix.\nA stack-allocated, column-major, 4x2 matrix.\nA stack-allocated, column-major, 4x3 matrix.\nA stack-allocated, column-major, 4x5 matrix.\nA stack-allocated, column-major, 4x6 matrix.\nA heap-allocated, column-major, matrix with 4 rows and a …\nA stack-allocated, column-major, 5x5 square matrix.\nA stack-allocated, column-major, 5x1 matrix.\nA stack-allocated, column-major, 5x2 matrix.\nA stack-allocated, column-major, 5x3 matrix.\nA stack-allocated, column-major, 5x4 matrix.\nA stack-allocated, column-major, 5x6 matrix.\nA heap-allocated, column-major, matrix with 5 rows and a …\nA stack-allocated, column-major, 6x6 square matrix.\nA stack-allocated, column-major, 6x1 matrix.\nA stack-allocated, column-major, 6x2 matrix.\nA stack-allocated, column-major, 6x3 matrix.\nA stack-allocated, column-major, 6x4 matrix.\nA stack-allocated, column-major, 6x5 matrix.\nA heap-allocated, column-major, matrix with 6 rows and a …\nThe type of the result of a matrix cross product.\nAn owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …\nAn owned matrix column-major matrix with <code>D</code> columns.\nA matrix slice.\nA column-major 1x1 matrix slice.\nA column-major 1x2 matrix slice.\nA column-major 1x3 matrix slice.\nA column-major 1x4 matrix slice.\nA column-major 1x5 matrix slice.\nA column-major 1x6 matrix slice.\nA column-major matrix slice with 1 row and a number of …\nA column-major 2x2 matrix slice.\nA column-major 2x1 matrix slice.\nA column-major 2x3 matrix slice.\nA column-major 2x4 matrix slice.\nA column-major 2x5 matrix slice.\nA column-major 2x6 matrix slice.\nA column-major matrix slice with 2 rows and a number of …\nA column-major 3x3 matrix slice.\nA column-major 3x1 matrix slice.\nA column-major 3x2 matrix slice.\nA column-major 3x4 matrix slice.\nA column-major 3x5 matrix slice.\nA column-major 3x6 matrix slice.\nA column-major matrix slice with 3 rows and a number of …\nA column-major 4x4 matrix slice.\nA column-major 4x1 matrix slice.\nA column-major 4x2 matrix slice.\nA column-major 4x3 matrix slice.\nA column-major 4x5 matrix slice.\nA column-major 4x6 matrix slice.\nA column-major matrix slice with 4 rows and a number of …\nA column-major 5x5 matrix slice.\nA column-major 5x1 matrix slice.\nA column-major 5x2 matrix slice.\nA column-major 5x3 matrix slice.\nA column-major 5x4 matrix slice.\nA column-major 5x6 matrix slice.\nA column-major matrix slice with 5 rows and a number of …\nA column-major 6x6 matrix slice.\nA column-major 6x1 matrix slice.\nA column-major 6x2 matrix slice.\nA column-major 6x3 matrix slice.\nA column-major 6x4 matrix slice.\nA column-major 6x5 matrix slice.\nA column-major matrix slice with 6 rows and a number of …\nA mutable matrix slice.\nA column-major 1x1 matrix slice.\nA column-major 1x2 matrix slice.\nA column-major 1x3 matrix slice.\nA column-major 1x4 matrix slice.\nA column-major 1x5 matrix slice.\nA column-major 1x6 matrix slice.\nA column-major matrix slice with 1 row and a number of …\nA column-major 2x2 matrix slice.\nA column-major 2x1 matrix slice.\nA column-major 2x3 matrix slice.\nA column-major 2x4 matrix slice.\nA column-major 2x5 matrix slice.\nA column-major 2x6 matrix slice.\nA column-major matrix slice with 2 rows and a number of …\nA column-major 3x3 matrix slice.\nA column-major 3x1 matrix slice.\nA column-major 3x2 matrix slice.\nA column-major 3x4 matrix slice.\nA column-major 3x5 matrix slice.\nA column-major 3x6 matrix slice.\nA column-major matrix slice with 3 rows and a number of …\nA column-major 4x4 matrix slice.\nA column-major 4x1 matrix slice.\nA column-major 4x2 matrix slice.\nA column-major 4x3 matrix slice.\nA column-major 4x5 matrix slice.\nA column-major 4x6 matrix slice.\nA column-major matrix slice with 4 rows and a number of …\nA column-major 5x5 matrix slice.\nA column-major 5x1 matrix slice.\nA column-major 5x2 matrix slice.\nA column-major 5x3 matrix slice.\nA column-major 5x4 matrix slice.\nA column-major 5x6 matrix slice.\nA column-major matrix slice with 5 rows and a number of …\nA column-major 6x6 matrix slice.\nA column-major 6x1 matrix slice.\nA column-major 6x2 matrix slice.\nA column-major 6x3 matrix slice.\nA column-major 6x4 matrix slice.\nA column-major 6x5 matrix slice.\nA column-major matrix slice with 6 rows and a number of …\nA column-major matrix slice with <code>R</code> rows and <code>C</code> columns.\nA column-major matrix slice with <code>D</code> rows and columns.\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nThe type of the result of a matrix sum.\nRenamed to <code>VecStorage</code>.\nA matrix view.\nA column-major 1x1 matrix view.\nA column-major 1x2 matrix view.\nA column-major 1x3 matrix view.\nA column-major 1x4 matrix view.\nA column-major 1x5 matrix view.\nA column-major 1x6 matrix view.\nA column-major matrix view with 1 row and a number of …\nA column-major 2x2 matrix view.\nA column-major 2x1 matrix view.\nA column-major 2x3 matrix view.\nA column-major 2x4 matrix view.\nA column-major 2x5 matrix view.\nA column-major 2x6 matrix view.\nA column-major matrix view with 2 rows and a number of …\nA column-major 3x3 matrix view.\nA column-major 3x1 matrix view.\nA column-major 3x2 matrix view.\nA column-major 3x4 matrix view.\nA column-major 3x5 matrix view.\nA column-major 3x6 matrix view.\nA column-major matrix view with 3 rows and a number of …\nA column-major 4x4 matrix view.\nA column-major 4x1 matrix view.\nA column-major 4x2 matrix view.\nA column-major 4x3 matrix view.\nA column-major 4x5 matrix view.\nA column-major 4x6 matrix view.\nA column-major matrix view with 4 rows and a number of …\nA column-major 5x5 matrix view.\nA column-major 5x1 matrix view.\nA column-major 5x2 matrix view.\nA column-major 5x3 matrix view.\nA column-major 5x4 matrix view.\nA column-major 5x6 matrix view.\nA column-major matrix view with 5 rows and a number of …\nA column-major 6x6 matrix view.\nA column-major 6x1 matrix view.\nA column-major 6x2 matrix view.\nA column-major 6x3 matrix view.\nA column-major 6x4 matrix view.\nA column-major 6x5 matrix view.\nA column-major matrix view with 6 rows and a number of …\nA mutable matrix view.\nA column-major 1x1 matrix view.\nA column-major 1x2 matrix view.\nA column-major 1x3 matrix view.\nA column-major 1x4 matrix view.\nA column-major 1x5 matrix view.\nA column-major 1x6 matrix view.\nA column-major matrix view with 1 row and a number of …\nA column-major 2x2 matrix view.\nA column-major 2x1 matrix view.\nA column-major 2x3 matrix view.\nA column-major 2x4 matrix view.\nA column-major 2x5 matrix view.\nA column-major 2x6 matrix view.\nA column-major matrix view with 2 rows and a number of …\nA column-major 3x3 matrix view.\nA column-major 3x1 matrix view.\nA column-major 3x2 matrix view.\nA column-major 3x4 matrix view.\nA column-major 3x5 matrix view.\nA column-major 3x6 matrix view.\nA column-major matrix view with 3 rows and a number of …\nA column-major 4x4 matrix view.\nA column-major 4x1 matrix view.\nA column-major 4x2 matrix view.\nA column-major 4x3 matrix view.\nA column-major 4x5 matrix view.\nA column-major 4x6 matrix view.\nA column-major matrix view with 4 rows and a number of …\nA column-major 5x5 matrix view.\nA column-major 5x1 matrix view.\nA column-major 5x2 matrix view.\nA column-major 5x3 matrix view.\nA column-major 5x4 matrix view.\nA column-major 5x6 matrix view.\nA column-major matrix view with 5 rows and a number of …\nA column-major 6x6 matrix view.\nA column-major 6x1 matrix view.\nA column-major 6x2 matrix view.\nA column-major 6x3 matrix view.\nA column-major 6x4 matrix view.\nA column-major 6x5 matrix view.\nA column-major matrix view with 6 rows and a number of …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA trait for abstract matrix norms.\nThe type of the norm.\nTrait implemented by entities scan be be normalized and …\nAn owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …\nA point in an euclidean space.\nAn owned D-dimensional column vector.\nA 3D orthographic projection stored as a homogeneous 4x4 …\nThe reshaped storage type.\nThe owned data storage that can be allocated from <code>S</code>.\nThe owned data storage that can be allocated from <code>S</code>.\nA sequence of row or column permutations.\nA 3D perspective projection stored as a homogeneous 4x4 …\nA point with <code>D</code> elements.\nA statically sized 1-dimensional column point.\nA statically sized 2-dimensional column point.\nA statically sized 3-dimensional column point.\nA statically sized 4-dimensional column point.\nA statically sized 5-dimensional column point.\nA statically sized 6-dimensional column point.\nAn invertible 2D general transformation. Stored as a …\nAn invertible 3D general transformation. Stored as a …\nThe QR decomposition of a general matrix.\nA quaternion. See the type alias …\nThe row-stride of the owned data storage for a buffer of …\nThe static stride of this storage’s rows.\nThe trait shared by all matrix data storage.\nTrait implemented by matrix data storage that can provide …\nTrait shared by all reals.\nA reflection wrt. a plane.\nA 1-dimensional reflection.\nA 2-dimensional reflection.\nA 3-dimensional reflection.\nA 4-dimensional reflection.\nA 5-dimensional reflection.\nA 6-dimensional reflection.\nThe transform category that results from the …\nA matrix storage that can be reshaped in-place.\nA rotation matrix.\nA 2-dimensional rotation matrix.\nA 3-dimensional rotation matrix.\nA dynamically sized row vector.\nAn owned D-dimensional row vector.\nA statically sized D-dimensional row vector.\nA matrix with one row and <code>D</code> columns .\nA stack-allocated, 1-dimensional row vector.\nA stack-allocated, 2-dimensional row vector.\nA stack-allocated, 3-dimensional row vector.\nA stack-allocated, 4-dimensional row vector.\nA stack-allocated, 5-dimensional row vector.\nA stack-allocated, 6-dimensional row vector.\nA statically sized column-major matrix with <code>R</code> rows and <code>C</code> …\nA column-major matrix slice with dimensions known at …\nA column-major matrix slice with dimensions known at …\nA column-major matrix view with dimensions known at …\nA column-major matrix view with dimensions known at …\nSingular Value Decomposition of a general matrix.\nA statically sized D-dimensional column vector.\nA column vector slice with dimensions known at …\nA column vector slice with dimensions known at …\nA column vector view with dimensions known at compile-time.\nA column vector view with dimensions known at compile-time.\nThe data storage for the sum of two matrices with …\nThe basic scalar type for all structures of <code>nalgebra</code>.\nA scale which supports non-uniform scaling.\nA 1-dimensional scale.\nA 2-dimensional scale.\nA 3-dimensional scale.\nA 4-dimensional scale.\nA 5-dimensional scale.\nA 6-dimensional scale.\nSchur decomposition of a square matrix.\nLane-wise generalization of <code>bool</code> for SIMD booleans.\nType of the result of comparing two SIMD values like <code>self</code>.\nLane-wise generalisation of <code>ComplexField</code> for SIMD complex …\nLane-wise generalization of the standard <code>PartialOrd</code> for …\nLanewise generalization of <code>RealField</code> for SIMD reals.\nType of the coefficients of a complex number.\nBase trait for every SIMD types.\nA similarity, i.e., an uniform scaling, followed by a …\nA 2-dimensional similarity.\nA 3-dimensional similarity.\nA 2-dimensional similarity using a rotation matrix for its …\nA 3-dimensional similarity using a rotation matrix for its …\nType of the range size. May be a type-level integer.\nA range with a size that may be known at compile-time.\nA matrix data storage for a matrix view. Only contains an …\nA mutable matrix data storage for mutable matrix view. …\nA square matrix.\nTrait shared by all matrix data storage that don’t …\nTrait shared by all mutable matrix data storage that …\nIndicates that <code>Self</code> is a more specific <code>Transform</code> category …\nIndicates that <code>Self</code> is a more general <code>Transform</code> category …\nEigendecomposition of a symmetric matrix.\nTridiagonalization of a symmetric matrix.\nTag representing an affine <code>Transform</code>. Its bottom-row is …\nTrait implemented by phantom types identifying the …\nTraits that gives the <code>Transform</code> category that is …\nTag representing the most general (not necessarily …\nTag representing the most general inversible <code>Transform</code> …\nA transformation matrix in homogeneous coordinates.\nA 2D general transformation that may not be invertible. …\nA 3D general transformation that may not be inversible. …\nA translation.\nA 1-dimensional translation.\nA 2-dimensional translation.\nA 3-dimensional translation.\nA 4-dimensional translation.\nA 5-dimensional translation.\nA 6-dimensional translation.\nThe constant dimension 0 .\nThe constant dimension 1.\nThe constant dimension 10 .\nThe constant dimension 100 .\nThe constant dimension 101 .\nThe constant dimension 102 .\nThe constant dimension 103 .\nThe constant dimension 104 .\nThe constant dimension 105 .\nThe constant dimension 106 .\nThe constant dimension 107 .\nThe constant dimension 108 .\nThe constant dimension 109 .\nThe constant dimension 11 .\nThe constant dimension 110 .\nThe constant dimension 111 .\nThe constant dimension 112 .\nThe constant dimension 113 .\nThe constant dimension 114 .\nThe constant dimension 115 .\nThe constant dimension 116 .\nThe constant dimension 117 .\nThe constant dimension 118 .\nThe constant dimension 119 .\nThe constant dimension 12 .\nThe constant dimension 120 .\nThe constant dimension 121 .\nThe constant dimension 122 .\nThe constant dimension 123 .\nThe constant dimension 124 .\nThe constant dimension 125 .\nThe constant dimension 126 .\nThe constant dimension 127 .\nThe constant dimension 13 .\nThe constant dimension 14 .\nThe constant dimension 15 .\nThe constant dimension 16 .\nThe constant dimension 17 .\nThe constant dimension 18 .\nThe constant dimension 19 .\nThe constant dimension 2 .\nThe constant dimension 20 .\nThe constant dimension 21 .\nThe constant dimension 22 .\nThe constant dimension 23 .\nThe constant dimension 24 .\nThe constant dimension 25 .\nThe constant dimension 26 .\nThe constant dimension 27 .\nThe constant dimension 28 .\nThe constant dimension 29 .\nThe constant dimension 3 .\nThe constant dimension 30 .\nThe constant dimension 31 .\nThe constant dimension 32 .\nThe constant dimension 33 .\nThe constant dimension 34 .\nThe constant dimension 35 .\nThe constant dimension 36 .\nThe constant dimension 37 .\nThe constant dimension 38 .\nThe constant dimension 39 .\nThe constant dimension 4 .\nThe constant dimension 40 .\nThe constant dimension 41 .\nThe constant dimension 42 .\nThe constant dimension 43 .\nThe constant dimension 44 .\nThe constant dimension 45 .\nThe constant dimension 46 .\nThe constant dimension 47 .\nThe constant dimension 48 .\nThe constant dimension 49 .\nThe constant dimension 5 .\nThe constant dimension 50 .\nThe constant dimension 51 .\nThe constant dimension 52 .\nThe constant dimension 53 .\nThe constant dimension 54 .\nThe constant dimension 55 .\nThe constant dimension 56 .\nThe constant dimension 57 .\nThe constant dimension 58 .\nThe constant dimension 59 .\nThe constant dimension 6 .\nThe constant dimension 60 .\nThe constant dimension 61 .\nThe constant dimension 62 .\nThe constant dimension 63 .\nThe constant dimension 64 .\nThe constant dimension 65 .\nThe constant dimension 66 .\nThe constant dimension 67 .\nThe constant dimension 68 .\nThe constant dimension 69 .\nThe constant dimension 7 .\nThe constant dimension 70 .\nThe constant dimension 71 .\nThe constant dimension 72 .\nThe constant dimension 73 .\nThe constant dimension 74 .\nThe constant dimension 75 .\nThe constant dimension 76 .\nThe constant dimension 77 .\nThe constant dimension 78 .\nThe constant dimension 79 .\nThe constant dimension 8 .\nThe constant dimension 80 .\nThe constant dimension 81 .\nThe constant dimension 82 .\nThe constant dimension 83 .\nThe constant dimension 84 .\nThe constant dimension 85 .\nThe constant dimension 86 .\nThe constant dimension 87 .\nThe constant dimension 88 .\nThe constant dimension 89 .\nThe constant dimension 9 .\nThe constant dimension 90 .\nThe constant dimension 91 .\nThe constant dimension 92 .\nThe constant dimension 93 .\nThe constant dimension 94 .\nThe constant dimension 95 .\nThe constant dimension 96 .\nThe constant dimension 97 .\nThe constant dimension 98 .\nThe constant dimension 99 .\nUDU factorization.\nL-infinite norm aka. Chebytchev norm aka. uniform norm …\nAn owned matrix with uninitialized data.\nAn owned matrix with uninitialized data.\nA wrapper that ensures the underlying algebraic entity has …\nA 2D rotation represented as a complex number with …\nA unit dual quaternion. May be used to represent a …\nA unit quaternions. May be used to represent a rotation.\nA stack-allocated, 1-dimensional unit vector.\nA stack-allocated, 2-dimensional unit vector.\nA stack-allocated, 3-dimensional unit vector.\nA stack-allocated, 4-dimensional unit vector.\nA stack-allocated, 5-dimensional unit vector.\nA stack-allocated, 6-dimensional unit vector.\nA Vec-based matrix data storage. It may be …\nA matrix with one column and <code>D</code> rows.\nA stack-allocated, 1-dimensional column vector.\nA stack-allocated, 2-dimensional column vector.\nA stack-allocated, 3-dimensional column vector.\nA stack-allocated, 4-dimensional column vector.\nA stack-allocated, 5-dimensional column vector.\nA stack-allocated, 6-dimensional column vector.\nAn owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …\nA column vector slice with dimensions known at …\nA 1D column vector slice.\nA 2D column vector slice.\nA 3D column vector slice.\nA 4D column vector slice.\nA 5D column vector slice.\nA 6D column vector slice.\nA column vector slice with dimensions known at …\nA 1D column vector slice.\nA 2D column vector slice.\nA 3D column vector slice.\nA 4D column vector slice.\nA 5D column vector slice.\nA 6D column vector slice.\nThe type of the result of a matrix sum.\nA column vector view with dimensions known at compile-time.\nA 1D column vector view.\nA 2D column vector view.\nA 3D column vector view.\nA 4D column vector view.\nA 5D column vector view.\nA 6D column vector view.\nA column vector view with dimensions known at compile-time.\nA 1D column vector view.\nA 2D column vector view.\nA 3D column vector view.\nA 4D column vector view.\nA 5D column vector view.\nA 6D column vector view.\nA matrix data storage for a matrix view. Only contains an …\nA mutable matrix data storage for mutable matrix view. …\nThe absolute value of <code>a</code>.\nThe absolute value of this complex number: …\nAre all vector lanes true?\nLane-wise bitwise and of the vector elements.\nIs any vector lane true?\nThe argument of this complex number.\nRetrieves the mutable data buffer as a contiguous slice.\nRetrieves the data buffer as a contiguous slice.\n[Reexported at the root of this crate.] Data structures …\nThe start index of the range.\nA bit mask representing the boolean state of each lanes of …\nThe center of two points.\nChecks that the given matrix is a valid homogeneous …\nReturns a reference to the input value clamped to the …\nClones this data storage to one that does not contain any …\nConverts an object from one type to an equivalent or more …\nConverts an object from one type to an equivalent or more …\nUse with care! Same as <code>try_convert</code> but without any …\nUse with care! Same as <code>try_convert</code> but without any …\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThis quaternion as a 4D vector of coordinates in the …\nCopies the sign of <code>sign</code> to <code>self</code>.\nCardinal cos\nThe diagonal matrix resulting from the factorization\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe value of this dimension.\nThe distance between two points.\nThe squared distance between two points.\nConstruct a dynamic matrix directly from data.\nThe dual component of the quaternion\nConstruct a dynamic column vector directly from data.\nThe unsorted eigenvalues of the decomposed matrix.\nThe eigenvectors of the decomposed matrix.\nThe index immediately after the last index inside of the …\nExtracts the i-th lane of <code>self</code>.\nExtracts the i-th lane of <code>self</code> without bound-checking.\nBuilds a pure-real complex number from the given value.\nBuilds a pure-real complex number from the given value.\nBuilds an instance of <code>Self</code> from a run-time value. Panics …\n[Reexported at the root of this crate.] Data structures …\nGets the address of the i-th matrix component without …\nGets the address of the i-th matrix component without …\nGets the mutable address of the i-th matrix component …\nGets the mutable address of the i-th matrix component …\nRetrieves a reference to the i-th element without …\nRetrieves a reference to the i-th element without …\nRetrieves a mutable reference to the i-th element without …\nRetrieves a mutable reference to the element at …\nIndicates whether a <code>Transform</code> with the category <code>Self</code> has a …\nComputes (self.conjugate() * self + other.conjugate() * …\nThe rotation identity.\nMerges the value of <code>if_value()</code> and <code>else_value()</code> depending …\nMerges the value of <code>if_value()</code> and <code>else_if.1()</code> and …\nMerges the value of <code>if_value()</code> and <code>else_if.1()</code> and …\nImaginary portion of the complex number\nThe imaginary part of this complex number.\nReturns the infimum of <code>a</code> and <code>b</code>.\nReturns simultaneously the infimum and supremum of <code>a</code> and <code>b</code>.\nBuilds a matrix data storage that does not contain any …\nThe rotation inverse.\nChange <code>self</code> to its inverse.\nApply the inverse rotation to the given point.\nApply the inverse rotation to the given unit vector.\nApply the inverse rotation to the given vector.\nIndicates whether this data buffer stores its elements …\nIndicates if <code>try_convert</code> will succeed without actually …\nIs the sign of this real number negative?\nIs the sign of this real number positive?\nThe part of this similarity that does not include the …\nThe part of this similarity that does not include the …\nThe part of this similarity that does not include the …\nThe part of this similarity that does not include the …\nThe part of this similarity that does not include the …\nThe number of lanes of this SIMD value.\n[Reexported at the root of this crate.] Factorization of …\nCompute the index corresponding to the irow-th row and …\nApplies a function to each lane of <code>self</code>.\nConstruct a fixed-size matrix directly from data.\nSame as <code>cmp::max</code>.\nThe largest finite positive value representable using this …\nUse the metric induced by this norm to compute the metric …\nSame as <code>cmp::min</code>.\nThe smallest finite positive value representable using …\nThe modulus of this complex number.\nThe squared modulus of this complex number.\nThe name of this dimension, i.e., the singleton <code>Self</code>.\nAre all vector lanes false?\nApply this norm to the given matrix.\nComputes the norm.\nThe sum of the absolute value of this complex number’s …\nComputes the squared norm.\nGets the multiplicative identity element.\nLane-wise bitwise or of the vector elements.\nClamp <code>value</code> between <code>min</code> and <code>max</code>. Returns <code>None</code> if <code>value</code> is …\nCompare <code>a</code> and <code>b</code> using a partial ordering relation.\nReturns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &gt;= b</code>.\nReturns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &gt; b</code>.\nReturns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &lt;= b</code>.\nReturns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &lt; b</code>.\nReturn the maximum of <code>a</code> and <code>b</code> if they are comparable.\nReturn the minimum of <code>a</code> and <code>b</code> if they are comparable.\nSorts two values in increasing order using a partial …\nConstruct a fixed-size point directly from data.\nThe matrix data pointer.\nThe matrix mutable data pointer.\nReal portion of the complex number\nThe real part of this complex number.\nThe real component of the quaternion\nReplaces the i-th lane of <code>self</code> by <code>val</code>.\nReplaces the i-th lane of <code>self</code> by <code>val</code> without …\nReshapes the storage into the output storage type.\nThe pure rotational part of this isometry.\nThe pure rotational part of this isometry.\nThe pure rotational part of this isometry.\nThe pure rotational part of this isometry.\nThe pure rotational part of this isometry.\nMultiplies this complex number by <code>factor</code>.\nMultiply <code>self</code> by n.\nMerges <code>self</code> and <code>other</code> depending on the lanes of <code>cond</code>.\nThe dimension of the matrix at run-time. Arr length of …\nThe exponential part of this complex number: …\nThe absolute value of this complex number: …\nThe argument of this complex number.\nClamps each lane of <code>self</code> between the corresponding lane of …\nCopies the sign of <code>sign</code> to <code>self</code>.\nCardinal cos\nLanewise <em>equal</em> <code>==</code> comparison.\nLanewise <em>greater or equal</em> <code>&gt;=</code> comparison.\nLanewise <em>greater than</em> <code>&gt;</code> comparison.\nThe max value among all lanes of <code>self</code>.\nThe min value among all lanes of <code>self</code>.\nComputes the product of all the lanes of <code>self</code>.\nComputes the sum of all the lanes of <code>self</code>.\nComputes (self.conjugate() * self + other.conjugate() * …\nThe imaginary part of this complex number.\nLanewise <em>less or equal</em> <code>&lt;=</code> comparison.\nLanewise <em>less than</em> <code>&lt;</code> comparison.\nLanewise max value.\nLanewise min value.\nThe modulus of this complex number.\nThe squared modulus of this complex number.\nLanewise <em>not equal</em> <code>!=</code> comparison.\nThe sum of the absolute value of this complex number’s …\nThe real part of this complex number.\nMultiplies this complex number by <code>factor</code>.\nThe exponential part of this complex number: …\nCardinal sine\nThe exponential form of this complex number: (modulus, …\nThe polar form of this complex number: (modulus, arg)\nDivides this complex number by <code>factor</code>.\nCardinal sine\nThe singular values of this SVD.\nThe number of elements of the range, i.e., …\nInitializes an SIMD value with each lanes set to <code>val</code>.\nThe spacing between consecutive row elements and …\nReturns the supremum of <code>a</code> and <code>b</code>.\nSwaps two elements without bound-checking.\nSwaps two elements using their linear index without …\nThe exponential form of this complex number: (modulus, …\nThe polar form of this complex number: (modulus, arg)\nApply the rotation to the given point.\nApply the rotation to the given vector.\nThe pure translational part of this isometry.\nThe pure translational part of this isometry.\nThe pure translational part of this isometry.\nThe pure translational part of this isometry.\nThe pure translational part of this isometry.\nAttempts to convert an object to a more specific one.\nAttempts to convert an object to a more specific one.\nPerforms a LU decomposition to overwrite <code>out</code> with the …\nGets the compile-time value of <code>Self</code>. Returns <code>None</code> if it is …\nThe left-singular vectors <code>U</code> of this SVD.\nThe upper triangular matrix resulting from the …\nDivides this complex number by <code>factor</code>.\nDivides <code>self</code> by n.\nThe right-singular vectors <code>V^t</code> of this SVD.\nGets the run-time value of <code>self</code>. For type-level integers, …\nThe translation coordinates, i.e., how much is added to a …\nThe translation coordinates, i.e., how much is added to a …\nThe translation coordinates, i.e., how much is added to a …\nThe translation coordinates, i.e., how much is added to a …\nThe translation coordinates, i.e., how much is added to a …\nThe translation coordinates, i.e., how much is added to a …\nThe scale coordinates, i.e., how much is multiplied to a …\nThe scale coordinates, i.e., how much is multiplied to a …\nThe scale coordinates, i.e., how much is multiplied to a …\nThe scale coordinates, i.e., how much is multiplied to a …\nThe scale coordinates, i.e., how much is multiplied to a …\nThe scale coordinates, i.e., how much is multiplied to a …\nThe translation coordinates, i.e., how much is added to a …\nThe scale coordinates, i.e., how much is multiplied to a …\nConstruct a fixed-size column vector directly from data.\nComputes the wilkinson shift, i.e., the 2x2 symmetric …\nWraps <code>val</code> into the range <code>[min, max]</code> using modular …\nLane-wise bitwise xor of the vector elements.\nGets the additive identity element.\nApplies a function to each lane of <code>self</code> paired with the …\nA array-based statically sized matrix data storage.\nThe column-stride of the owned data storage for a buffer …\nThe static stride of this storage’s columns.\nA dynamically sized column-major matrix.\nA column-major matrix slice dynamic numbers of rows and …\nA column-major matrix slice dynamic numbers of rows and …\nA column-major matrix view dynamic numbers of rows and …\nA column-major matrix view dynamic numbers of rows and …\nA dynamically sized column vector.\nA column vector slice dynamic numbers of rows and columns.\nA column vector slice dynamic numbers of rows and columns.\nA column vector view dynamic numbers of rows and columns.\nA column vector view dynamic numbers of rows and columns.\nAn allocator based on <code>ArrayStorage</code> and <code>VecStorage</code> for …\nTrait implemented by any type that can be used as a …\nTrait implemented exclusively by type-level integers.\nA range with a size that may be known at compile-time.\nDim of dynamically-sized algebraic entities.\nEuclidean norm.\nMarker trait indicating that a storage is stored …\nTrait implemented by <code>Dyn</code>.\nTrait implemented by <code>Dyn</code> and type-level integers different …\nLp norm.\nThe most generic column-major matrix (and vector) type.\nA stack-allocated, column-major, 1x1 square matrix.\nA stack-allocated, column-major, 1x2 matrix.\nA stack-allocated, column-major, 1x3 matrix.\nA stack-allocated, column-major, 1x4 matrix.\nA stack-allocated, column-major, 1x5 matrix.\nA stack-allocated, column-major, 1x6 matrix.\nA heap-allocated, column-major, matrix with 1 rows and a …\nA stack-allocated, column-major, 2x2 square matrix.\nA stack-allocated, column-major, 2x1 matrix.\nA stack-allocated, column-major, 2x3 matrix.\nA stack-allocated, column-major, 2x4 matrix.\nA stack-allocated, column-major, 2x5 matrix.\nA stack-allocated, column-major, 2x6 matrix.\nA heap-allocated, column-major, matrix with 2 rows and a …\nA stack-allocated, column-major, 3x3 square matrix.\nA stack-allocated, column-major, 3x1 matrix.\nA stack-allocated, column-major, 3x2 matrix.\nA stack-allocated, column-major, 3x4 matrix.\nA stack-allocated, column-major, 3x5 matrix.\nA stack-allocated, column-major, 3x6 matrix.\nA heap-allocated, column-major, matrix with 3 rows and a …\nA stack-allocated, column-major, 4x4 square matrix.\nA stack-allocated, column-major, 4x1 matrix.\nA stack-allocated, column-major, 4x2 matrix.\nA stack-allocated, column-major, 4x3 matrix.\nA stack-allocated, column-major, 4x5 matrix.\nA stack-allocated, column-major, 4x6 matrix.\nA heap-allocated, column-major, matrix with 4 rows and a …\nA stack-allocated, column-major, 5x5 square matrix.\nA stack-allocated, column-major, 5x1 matrix.\nA stack-allocated, column-major, 5x2 matrix.\nA stack-allocated, column-major, 5x3 matrix.\nA stack-allocated, column-major, 5x4 matrix.\nA stack-allocated, column-major, 5x6 matrix.\nA heap-allocated, column-major, matrix with 5 rows and a …\nA stack-allocated, column-major, 6x6 square matrix.\nA stack-allocated, column-major, 6x1 matrix.\nA stack-allocated, column-major, 6x2 matrix.\nA stack-allocated, column-major, 6x3 matrix.\nA stack-allocated, column-major, 6x4 matrix.\nA stack-allocated, column-major, 6x5 matrix.\nA heap-allocated, column-major, matrix with 6 rows and a …\nThe type of the result of a matrix cross product.\nAn owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …\nAn owned matrix column-major matrix with <code>D</code> columns.\nA matrix slice.\nA column-major 1x1 matrix slice.\nA column-major 1x2 matrix slice.\nA column-major 1x3 matrix slice.\nA column-major 1x4 matrix slice.\nA column-major 1x5 matrix slice.\nA column-major 1x6 matrix slice.\nA column-major matrix slice with 1 row and a number of …\nA column-major 2x2 matrix slice.\nA column-major 2x1 matrix slice.\nA column-major 2x3 matrix slice.\nA column-major 2x4 matrix slice.\nA column-major 2x5 matrix slice.\nA column-major 2x6 matrix slice.\nA column-major matrix slice with 2 rows and a number of …\nA column-major 3x3 matrix slice.\nA column-major 3x1 matrix slice.\nA column-major 3x2 matrix slice.\nA column-major 3x4 matrix slice.\nA column-major 3x5 matrix slice.\nA column-major 3x6 matrix slice.\nA column-major matrix slice with 3 rows and a number of …\nA column-major 4x4 matrix slice.\nA column-major 4x1 matrix slice.\nA column-major 4x2 matrix slice.\nA column-major 4x3 matrix slice.\nA column-major 4x5 matrix slice.\nA column-major 4x6 matrix slice.\nA column-major matrix slice with 4 rows and a number of …\nA column-major 5x5 matrix slice.\nA column-major 5x1 matrix slice.\nA column-major 5x2 matrix slice.\nA column-major 5x3 matrix slice.\nA column-major 5x4 matrix slice.\nA column-major 5x6 matrix slice.\nA column-major matrix slice with 5 rows and a number of …\nA column-major 6x6 matrix slice.\nA column-major 6x1 matrix slice.\nA column-major 6x2 matrix slice.\nA column-major 6x3 matrix slice.\nA column-major 6x4 matrix slice.\nA column-major 6x5 matrix slice.\nA column-major matrix slice with 6 rows and a number of …\nA mutable matrix slice.\nA column-major 1x1 matrix slice.\nA column-major 1x2 matrix slice.\nA column-major 1x3 matrix slice.\nA column-major 1x4 matrix slice.\nA column-major 1x5 matrix slice.\nA column-major 1x6 matrix slice.\nA column-major matrix slice with 1 row and a number of …\nA column-major 2x2 matrix slice.\nA column-major 2x1 matrix slice.\nA column-major 2x3 matrix slice.\nA column-major 2x4 matrix slice.\nA column-major 2x5 matrix slice.\nA column-major 2x6 matrix slice.\nA column-major matrix slice with 2 rows and a number of …\nA column-major 3x3 matrix slice.\nA column-major 3x1 matrix slice.\nA column-major 3x2 matrix slice.\nA column-major 3x4 matrix slice.\nA column-major 3x5 matrix slice.\nA column-major 3x6 matrix slice.\nA column-major matrix slice with 3 rows and a number of …\nA column-major 4x4 matrix slice.\nA column-major 4x1 matrix slice.\nA column-major 4x2 matrix slice.\nA column-major 4x3 matrix slice.\nA column-major 4x5 matrix slice.\nA column-major 4x6 matrix slice.\nA column-major matrix slice with 4 rows and a number of …\nA column-major 5x5 matrix slice.\nA column-major 5x1 matrix slice.\nA column-major 5x2 matrix slice.\nA column-major 5x3 matrix slice.\nA column-major 5x4 matrix slice.\nA column-major 5x6 matrix slice.\nA column-major matrix slice with 5 rows and a number of …\nA column-major 6x6 matrix slice.\nA column-major 6x1 matrix slice.\nA column-major 6x2 matrix slice.\nA column-major 6x3 matrix slice.\nA column-major 6x4 matrix slice.\nA column-major 6x5 matrix slice.\nA column-major matrix slice with 6 rows and a number of …\nA column-major matrix slice with <code>R</code> rows and <code>C</code> columns.\nA column-major matrix slice with <code>D</code> rows and columns.\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nThe type of the result of a matrix sum.\nRenamed to <code>VecStorage</code>.\nA matrix view.\nA column-major 1x1 matrix view.\nA column-major 1x2 matrix view.\nA column-major 1x3 matrix view.\nA column-major 1x4 matrix view.\nA column-major 1x5 matrix view.\nA column-major 1x6 matrix view.\nA column-major matrix view with 1 row and a number of …\nA column-major 2x2 matrix view.\nA column-major 2x1 matrix view.\nA column-major 2x3 matrix view.\nA column-major 2x4 matrix view.\nA column-major 2x5 matrix view.\nA column-major 2x6 matrix view.\nA column-major matrix view with 2 rows and a number of …\nA column-major 3x3 matrix view.\nA column-major 3x1 matrix view.\nA column-major 3x2 matrix view.\nA column-major 3x4 matrix view.\nA column-major 3x5 matrix view.\nA column-major 3x6 matrix view.\nA column-major matrix view with 3 rows and a number of …\nA column-major 4x4 matrix view.\nA column-major 4x1 matrix view.\nA column-major 4x2 matrix view.\nA column-major 4x3 matrix view.\nA column-major 4x5 matrix view.\nA column-major 4x6 matrix view.\nA column-major matrix view with 4 rows and a number of …\nA column-major 5x5 matrix view.\nA column-major 5x1 matrix view.\nA column-major 5x2 matrix view.\nA column-major 5x3 matrix view.\nA column-major 5x4 matrix view.\nA column-major 5x6 matrix view.\nA column-major matrix view with 5 rows and a number of …\nA column-major 6x6 matrix view.\nA column-major 6x1 matrix view.\nA column-major 6x2 matrix view.\nA column-major 6x3 matrix view.\nA column-major 6x4 matrix view.\nA column-major 6x5 matrix view.\nA column-major matrix view with 6 rows and a number of …\nA mutable matrix view.\nA column-major 1x1 matrix view.\nA column-major 1x2 matrix view.\nA column-major 1x3 matrix view.\nA column-major 1x4 matrix view.\nA column-major 1x5 matrix view.\nA column-major 1x6 matrix view.\nA column-major matrix view with 1 row and a number of …\nA column-major 2x2 matrix view.\nA column-major 2x1 matrix view.\nA column-major 2x3 matrix view.\nA column-major 2x4 matrix view.\nA column-major 2x5 matrix view.\nA column-major 2x6 matrix view.\nA column-major matrix view with 2 rows and a number of …\nA column-major 3x3 matrix view.\nA column-major 3x1 matrix view.\nA column-major 3x2 matrix view.\nA column-major 3x4 matrix view.\nA column-major 3x5 matrix view.\nA column-major 3x6 matrix view.\nA column-major matrix view with 3 rows and a number of …\nA column-major 4x4 matrix view.\nA column-major 4x1 matrix view.\nA column-major 4x2 matrix view.\nA column-major 4x3 matrix view.\nA column-major 4x5 matrix view.\nA column-major 4x6 matrix view.\nA column-major matrix view with 4 rows and a number of …\nA column-major 5x5 matrix view.\nA column-major 5x1 matrix view.\nA column-major 5x2 matrix view.\nA column-major 5x3 matrix view.\nA column-major 5x4 matrix view.\nA column-major 5x6 matrix view.\nA column-major matrix view with 5 rows and a number of …\nA column-major 6x6 matrix view.\nA column-major 6x1 matrix view.\nA column-major 6x2 matrix view.\nA column-major 6x3 matrix view.\nA column-major 6x4 matrix view.\nA column-major 6x5 matrix view.\nA column-major matrix view with 6 rows and a number of …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA trait for abstract matrix norms.\nThe type of the norm.\nTrait implemented by entities scan be be normalized and …\nAn owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …\nAn owned D-dimensional column vector.\nThe reshaped storage type.\nThe owned data storage that can be allocated from <code>S</code>.\nThe owned data storage that can be allocated from <code>S</code>.\nThe row-stride of the owned data storage for a buffer of …\nThe static stride of this storage’s rows.\nThe trait shared by all matrix data storage.\nTrait implemented by matrix data storage that can provide …\nA matrix storage that can be reshaped in-place.\nA dynamically sized row vector.\nAn owned D-dimensional row vector.\nA statically sized D-dimensional row vector.\nA matrix with one row and <code>D</code> columns .\nA stack-allocated, 1-dimensional row vector.\nA stack-allocated, 2-dimensional row vector.\nA stack-allocated, 3-dimensional row vector.\nA stack-allocated, 4-dimensional row vector.\nA stack-allocated, 5-dimensional row vector.\nA stack-allocated, 6-dimensional row vector.\nA statically sized column-major matrix with <code>R</code> rows and <code>C</code> …\nA column-major matrix slice with dimensions known at …\nA column-major matrix slice with dimensions known at …")