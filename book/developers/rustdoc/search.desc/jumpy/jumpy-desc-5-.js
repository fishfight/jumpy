searchState.loadedDescShard("jumpy", 5, "Creates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite reverse right-handed perspective …\nCreates an infinite reverse right-handed perspective …\nCreates an infinite right-handed perspective projection …\nCreates an infinite right-handed perspective projection …\nCreates a left-handed perspective projection matrix with …\nCreates a left-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with […\nCreates a right-handed perspective projection matrix with […\nPlays music, forcibly stopping any current music. Volume …\nPlays music with advanced settings. Volume is scaled by …\nPlays music with custom StaticSoundSettings. Volume is …\nPlay a sound. These are usually short audios that indicate …\nSets the playback rate of the sound.\nGetter for a single player’s network stats using their …\nGetter for the number of players, if offline defaults to 0.\nGetter for the number of players, if offline defaults to …\nGetter for all players’ network stats, including local …\nThe list of points in the path\nRemove an item from the end of the vector and return it, …\nGet the position of the tile at the given index.\nThe physical position to render this viewport to within …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nGet the precomputed hash for this string\nGet the prefix of the ID.\nGet whether or not the button is pressed.\nThe priority of this session relative to other sessions in …\nCameras with a higher priority will be rendered on top of …\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nTransforms the given 3D vector as a point, applying …\nTransforms the given 3D vector as a point, applying …\nSerializable data types for network messages used by the …\nThe pointer to load.\nAppend an item to the vector.\nPush an audio event to the queue for later processing.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nThe number of enabled bits in the input bitset.\nThe number of enabled bits in the input bitset.\nThe system queue that will be run at the end of the stage\nThe event queue.\nGet red in sRGB colorspace.\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nRegister the default assets from <code>bones_framework</code>.\nRegister this schema with the global schema registry.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the remaining time using Duration\nReturns the remaining time in seconds\nGetter for remote player network stats (filtering out …\nRemove and return the element at position <code>index</code>, shifting …\nRemove the component data for the entity if it exists.\nRemove the resource data, returning what was stored in it.\nRemoves the component of <code>Entity</code>. Returns <code>Some(T)</code> if the …\nRemove a resource from the store, if it is present.\nRemove the resource from the cell, leaving the cell empty.\nRemove data for a type from the storage.\nRemove all systems from this stage.\nRemove all systems from all stages, including startup and …\nRemove an animation from the bank\nRemove the component data for the entity if it exists.\nIf there is a previous value, <code>true</code> will be returned.\nWhether or not to repeat the animation\nReplaces the wrapped value with a new one, returning the …\nReplaces the actual value in the option by the value given …\nReplaces the wrapped value with a new one computed from f, …\nA queue to hold all the gamepad rumble requests to be …\nReseeds the <code>SeededCore</code> with a new seed/state.\nReserve capacity for <code>additional</code> more elements to be …\nReserve the minimum capacity for <code>additional</code> more elements …\nResets the stopwatch. The reset doesn’t affect the …\nResets the timer. The reset doesn’t affect the <code>paused</code> …\nProvides an interface for resetting various internal parts …\nProvides an interface for resetting entities, and …\nRemove all systems from all stages, including startup and …\nResizes the vector so that its length is equal to <code>len</code>.\nResizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …\nBorrow a resource from the world.\nBorrow a resource from the world.\nStores the world resources.\nRestart Session Runner. This should reset accumulated …\nRestore the world state.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nSets whether the sound should be played in reverse.\nList of assets that depend on the given assets.\nNew <code>Color</code> from sRGB colorspace.\nNew <code>Color</code> from sRGB colorspace.\nNew <code>Color</code> from sRGB colorspace.\nNew <code>Color</code> from sRGB colorspace.\nCreate an <code>egui::RichText</code> that can be passed to <code>ui.label()</code>.\nThe runtime ID of the handle\nThe right margin.\nGet the core asset pack’s root asset.\nThe root asset for the asset pack.\nThe path to the root asset for the pack.\nThe path to the root asset for the pack.\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nHow often to rotate log file.\nThe rotation of the entity.\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nThe number of rows in the atlas.\nExecute the systems on the given <code>world</code>.\nRun the system.\nExecute the systems on the given <code>world</code>.\nThis is run every time the system is executed\nRun a lua script as a system on the given world.\nRun a system once.\nThe session runner to use for this session.\nSamples a random item from a slice of values.\nSamples a random item from an iterator of values. <code>O(1)</code> if …\nSamples multiple unique items from a slice of values.\nSamples multiple unique items from an iterator of values.\nSamples multiple unique items from a mutable slice of …\nSamples a random <code>&amp;mut</code> item from a slice of values.\nThe sample rate of the audio (in Hz).\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, …\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nThe internal duration between this point and another.\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nWrite the entire collection of objects to storage, …\nSave the data to the storage backend.\nThe scale of the entity.\nThe scale to render the border image at.\nCustom scale for the UI.\nThe scan code of the pressed key.\nGet this type’s <code>Schema</code>.\nGet the schema of the components stored.\nGet the schema of the resource.\nThe schema of the asset being loaded.\nThe schema of this variant.\nThe schema of the field.\nSchemas provided in the asset pack.\nThe registered schemas.\nThe paths to schema definitions to be loaded from this …\nThe paths to schema definitions to be loaded from this …\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nSend a camera trauma event.\nBy default, buttons senses clicks. Change this to a …\nSerialize this value into the given Serde serializer.\nThe asset server.\nThe sessions that make up the game.\nSet an entity on the the bitset.\nSet the tile at the given position, to a certain entity.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSet alpha.\nSet blue in sRGB colorspace.\nSet the current animation if it exists inside of <code>animations</code>…\nSets the duration of the timer.\nSets the volume scale for effects within the range of 0.0 …\nSets the elapsed time of the stopwatch.\nSets the elapsed time of the timer without any other …\nSet green in sRGB colorspace.\nSet the game version config, used when making sure asset …\nSet the <code>AssetIo</code> implementation.\nSets the length of a vector.\nSets the volume scale for main audio within the range of …\nSets the mode of the timer.\nSets the duration for music fade out.\nSets the volume scale for music within the range of 0.0 to …\nSet red in sRGB colorspace.\nSets rumble on a specific gamepad, replacing any existing …\nSets rumble on all enabled gamepads, replacing any …\nSet the session runner for this session.\nSets the duration for audio fade out.\nSet a global runtime state from the EGUI context.\nSet the intensity of the strong motor, clamping it between …\nSets the volume scales for main, music, and effects within …\nSet the intensity of the weak motor, clamping it between …\nSettings for the sound.\nSetup the global tracing subscriber, add hook for tracing …\nHelper to call <code>setup_logging</code> conciseably with reasonable …\n<code>setup_logs</code> is a macro for initializing logging in bones.\nGet the shared resource of a given type out of this <code>Game</code>s …\nGet the shared resource cell of a given type out of this …\nGet the shared resource of a given type out of this <code>Game</code>s …\nCollection of resources that will have a shared instance …\nRender the button\nRender the frame\nShrink the capacity of the vector as much as possible.\nShuffles a slice randomly in O(n) time.\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nSystems that are continously run until they succeed(return …\nGet a single entity and components in the given query if …\nGet a reference to the lua singletons.\nReturns the number of items the array can hold.\nGet the size in pixels of the entire atlas image.\nThe logical size of the window’s client area.\nThe height of the camera in in-game pixels.\nThe physical size of the viewport rectangle to render to …\nThe font size.\nPerforms a spherical linear interpolation between <code>self</code> and …\nPerforms a spherical linear interpolation between <code>self</code> and …\nMakes a new <code>Ref</code> for a sub-slice of the borrowed slice.\nMakes a new <code>RefMut</code> for a sub-slice of the borrowed slice.\nSets the portion of the audio this <code>StaticSoundData</code> …\nThe portion of the sound this <code>StaticSoundData</code> represents.\nCreates a <code>SmallVec</code> containing the arguments.\nCreates an inline <code>SmallVec</code> containing the arguments. This …\nSnapshot the world state.\nGetter for socket.\nMutable getter for socket.\nList of sorted session keys.\nReturns the duration for audio fade out.\nThe lua source for the script.\nThe lua source of the script.\nUtility function that spawns the camera in a default …\nThe speed that the screen is shook.\nReturns <code>true</code> if the data has spilled into a separate …\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nSprite session plugin.\nThe system stages.\nThe stages in the collection, in the order that they will …\nSets where in the sound playback should start.\nSets when the sound should start playing.\nStartup systems. The bool indicates whether the system has …\nThe systems that should run at startup.\nWhether the button was pressed or released.\nStep the simulation once.\nStep the game simulation.\nStops rumble on a specific gamepad.\nStops rumble on all enabled gamepads.\nStops all currently playing sounds.\nStops the currently playing music\nThe asset store.\nGet the intensity of the strong motor.\nSubtracts the <code>rhs</code> quaternion from <code>self</code>.\nSubtracts the <code>rhs</code> quaternion from <code>self</code>.\nPanics\nPanics\nSubtracts two 2x2 matrices.\nSubtracts two 2x2 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 4x4 matrices.\nSubtracts two 4x4 matrices.\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in …\nSwaps the wrapped value of self with the wrapped value of …\nRemove the element at position <code>index</code>, replacing it with …\nTraits adding swizzle methods to all vector types.\nConvert into a <code>System</code>.\nThe collection of systems that are associated to the game …\nThe lua closures, registered by the script, to run in …\nThe list of systems in the stage.\nThe layout of the enum tag.\nTakes the wrapped value, leaving <code>Default::default()</code> in its …\nTakes the value out of the option, leaving an <code>Unset</code> in its …\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nCreate a button with the given theme.\nThe thickness of the line.\nAdvance the stopwatch by <code>delta</code> seconds. If the stopwatch …\nAdvance the timer by <code>delta</code> seconds. Non repeating timer …\nMap tile indices to extra collision metadata. This is …\nGet the position in pixels of the top-left corner of the …\nThe size of each tile in the atlas.\nThe size of each tile in the layer.\nThe vector of tile slots in this layer.\nThe amount of time the current frame has been playing\nReturns the number of times a repeating timer finished …\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\nReturns the rotation axis (normalized) and angle (in …\nReturns the rotation axis (normalized) and angle (in …\nCreates a <code>[f32; 6]</code> array storing data in column major …\nCreates a <code>[f32; 12]</code> array storing data in column major …\nCreates a <code>[f32; 9]</code> array storing data in column major …\nCreates a <code>[f32; 4]</code> array storing data in column major …\nCreates a <code>[f32; 9]</code> array storing data in column major …\nCreates a <code>[f32; 16]</code> array storing data in column major …\nCreates a <code>[f64; 6]</code> array storing data in column major …\nCreates a <code>[f64; 12]</code> array storing data in column major …\nCreates a <code>[f64; 4]</code> array storing data in column major …\nCreates a <code>[f64; 9]</code> array storing data in column major …\nCreates a <code>[f64; 16]</code> array storing data in column major …\nCreates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …\nCreates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …\nCreates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …\nCreates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …\nCreates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …\nCreates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …\nCreates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …\nCreates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …\nReturns the rotation angles for the given euler rotation …\nReturns the rotation angles for the given euler rotation …\nGet the number of assets that must be loaded.\nAcquires a mutable reference to owned data.\nGet an owned String copy of this string.\nClone data to an owned <code>AssetLoc</code>.\nExtracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nReturns the rotation axis scaled by the rotation in …\nReturns the rotation axis scaled by the rotation in …\nConstruct a new <code>SmallVec</code> from a slice.\nThe top margin.\nCalculates the total kilobits per second sent across all …\nConstructs an event at the trace level.\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 2D vector as a point.\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D vector as a point.\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D vector as a point.\nTransforms the given <code>Vec3A</code>, applying shear, scale, …\nTransforms the given <code>Vec3A</code> as 3D point.\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nRotates the given 2D vector.\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the give 3D vector as a direction.\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the give 3D vector as a direction.\nTransforms the given <code>Vec3A</code>, applying shear, scale and …\nTransforms the give <code>Vec3A</code> as 3D vector.\nThe position of the entity in the world.\nTransposes a <code>Ref</code> of an <code>Option</code> into an <code>Option</code> of a <code>Ref</code>. …\nTransposes a <code>RefMut</code> of an <code>Option</code> into an <code>Option</code> of a <code>RefMut</code>…\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nValue from 0-1 that indicates the intensity of the shake. …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nShorten the vector, keeping the first <code>len</code> elements and …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nImmutably borrows the wrapped value, returning <code>None</code> if the …\nMutably borrows the wrapped value, returning an error if …\nImmutably borrows the wrapped value, returning <code>None</code> if the …\nMutably borrows the wrapped value, returning <code>None</code> if the …\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nThe checked version of <code>from_secs_f32</code>.\nThe checked version of <code>from_secs_f64</code>.\nGet a reference to the component storage for the given …\nBorrow a loaded asset.\nTry to get handle of loaded asset from content id <code>Cid</code>.\nGet mutable references s to the component data for …\nGet a mutable reference to the component storage for the …\nBorrow a loaded asset.\nTry to get untyped handle of loaded asset from content id …\nBorrow a loaded asset.\nRe-allocate to set the capacity to …\nInsert component data for the given entity and get the …\nInsert component data for the given entity and get the …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nRemove the component data for the entity if it exists.\nReserve capacity for <code>additional</code> more elements to be …\nReserve the minimum capacity for <code>additional</code> more elements …\nContainer for storing <code>Schema</code> type datas.\nThe Rust <code>TypeId</code> that this <code>Schema</code> was created from, if it …\nReturns the type name of this value’s type.\nReturns the type name of this value’s type.\nReturns the UUID associated with this value’s type.\nReturns the UUID associated with this value’s type.\nCreate a typed <code>Handle&lt;T&gt;</code> from this <code>UntypedHandle</code>.\nReturns a random <code>u128</code> within a given range bound.\nReturns a random <code>u16</code> value.\n<code>u32</code> vector types.\nReturns a random <code>u32</code> value.\n<code>u64</code> vector types.\nReturns a random <code>u64</code> value.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nReturns a random <code>u8</code> value.\nThe Bones Framework UI plugin.\nGet the <code>Ulid</code> of the ID.\nUndo the effect of leaked guards on the borrow state of …\nThe unit the mouse scroll is in.\nHints to the compiler that the branch condition is …\nResumes the clock if paused.\nUnpauses the stopwatch. Resume the effect of ticking on …\nUnpauses the Timer. Resumes the ticking of the timer.\nConvert the handle to an <code>UntypedHandle</code>.\nBorrow the underlying <code>UntypedResources</code> store.\nGet the core asset pack’s root asset as a type-erased …\nReturns the contained <code>Set</code> value, consuming the <code>self</code> value.\nUnwrap all the items in an array.\nReturns the contained <code>Set</code> value or a provided default.\nReturns the contained <code>Set</code> value or a default.\nReturns the contained <code>Set</code> value or computes it from a …\nReturns the contained <code>Set</code> value, consuming the <code>self</code> value, …\nUpdates the internal time measurements.\nUpdate the CID by combining it’s current data with the …\nSystem for updating <code>AnimatedSprite</code>s based on thier …\nUpdate control state from input collector.\nUpdate which buttons have been “just pressed”, when …\nUpdates time with a specified <code>Instant</code>.\nGenerates a random <code>char</code> in the range A-Z.\nReturns a random <code>usize</code> within a given range bound.\nCreate a new Ustr from the given &amp;str.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nThe field’s value.\nThe field’s value.\nThe value of the button, for example, this will be <code>1.0</code> …\nThe value of the axis.\nInfo for the enum variants.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nThe version number of the asset pack.\nThe version of the asset pack.\nThe version of the asset pack.\nThe version of the asset pack.\nAn optional viewport override, allowing you to specify …\nWhether or not this session should be rendered.\nWhether or not this session should be visible.\nSets the volume of the sound.\nConstructs an event at the warn level.\nSubscribe to asset changes.\nTell the asset backend to watch for changes and trigger …\nFilesystem watcher if enabled.\nGet the intensity of the weak motor.\nStochastic Acceptance implementation of Roulette Wheel …\nStochastic Acceptance implementation of Roulette Wheel …\nThe mouse wheel event sent this frame.\nEgui widgets.\nCreate a new storage resource with the given backend …\nWraps external reference into <code>Ref</code>. And associates it with …\nWraps external reference into <code>RefMut</code>. And associates it …\nConstruct an empty vector with enough capacity …\nClone the font and set a new color.\nWrap the error value with additional context that is …\nCreate a <code>SystemStages</code> collection, initialized with a stage …\nCreate a new world that uses the provided entities …\nCreates a new <code>SeededCore</code> with a specific seed value.\nReturns a cheap clone of the <code>StaticSoundData</code> with the …\nCreate a new <code>CameraShake</code> component with the provided …\nThe ECS world for the core.\nIf <code>true</code>, the text will wrap to stay within the max width …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nWrites the columns of <code>self</code> to the first 6 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 12 elements in …\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 4 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 16 elements in …\nWrites the columns of <code>self</code> to the first 6 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 12 elements in …\nWrites the columns of <code>self</code> to the first 4 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 16 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the quaternion to an unaligned slice.\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the quaternion to an unaligned slice.\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nReturns <code>Set</code> if exactly one of <code>self</code>, <code>optb</code> is <code>Set</code>, otherwise …\nReturns the vector part of the quaternion.\nReturns the vector part of the quaternion.\nZips <code>self</code> with another <code>Maybe</code>.\nThe <code>extension</code> is the portion of the extension that comes …\nThe list of file extensions to load this asset from.\nThe loader implementation for the asset.\nThe effects volume scale factor.\nWhether to fade out the sounds or stop them instantly.\nWhether to fade out the sounds or stop them instantly.\nWhether to force restart the music even if it’s the same …\nThe main volume scale factor.\nThe music volume scale factor.\nThe settings for the music.\nThe handle for the music.\nThe handle to the sound to play.\nThe volume to play the sound at.\nThe layout that was passed to the allocator\nAlpha channel. [0.0, 1.0]\nBlue channel. [0.0, 1.0]\nGreen channel. [0.0, 1.0]\nRed channel. [0.0, 1.0]\nThe duration of the rumble in seconds.\nThe duration of the rumble in seconds.\nThe ID of the gamepad to rumble.\nThe ID of the gamepad to rumble.\nThe ID of the gamepad to stop rumbling.\nThe intensity of the rumble.\nThe intensity of the rumble.\nThe alignment of the data.\nThe size of the data.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe schema of the key type.\nThe schema of the value type.\nCurrent frame of simulation step\nCurrent frame of simulation step\nList of disconnected players (their idx)\nLast confirmed frame by all clients. Anything that …\nThe local input delay set for this session\nThe local player’s index\nNetworking stats for each connected player, stored at the …\nSocket\nIterator of a chain of source errors.\nProvides the <code>context</code> method for <code>Result</code>.\nContains the error value\nThe <code>Error</code> type, a wrapper around a dynamic error type.\nEquivalent to Ok::&lt;_, anyhow::Error&gt;(value).\nContains the success value\n<code>Result&lt;T, Error&gt;</code>\nConstruct an ad-hoc error from a string or existing non-…\nGet the backtrace for this Error.\nReturn early with an error.\nAn iterator of the chain of source errors contained by …\nWrap the error value with additional context.\nWrap the error value with additional context.\nAttempt to downcast the error object to a concrete type.\nDowncast this error object by mutable reference.\nDowncast this error object by reference.\nReturn early with an error if a condition is not satisfied.\nConstruct an ad-hoc error from a string or existing non-…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nReturns true if <code>E</code> is the type held by this error object.\nCreate a new error object from a printable error message.\nCreate a new error object from any error type.\nThe lowest level cause of this error — this error’s …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nWrap the error value with additional context that is …\nA resource that can be used to control game audios.\nAn audio event that may be sent to the <code>AudioCenter</code> …\nPlay some music.\nPlay a sound.\nStop all currently playing sounds.\nStop the currently playing music.\nUpdate the volume of all audios using the new scale values.\nInternally used sytem for killing finished audios …\nInternally used sytem for processing audio events in the …\nThe effects volume scale factor.\nWhether to fade out the sounds or stop them instantly.\nWhether to fade out the sounds or stop them instantly.\nWhether to force restart the music even if it’s the same …\nThe main volume scale factor.\nThe music volume scale factor.\nThe settings for the music.\nThe handle for the music.\nThe handle to the sound to play.\nThe volume to play the sound at.\nThe audio file asset loader.\nThe audio manager resource which can be used to play …\nThe audio source asset type, contains no data, but …\nThis is a working Cpal backend.\nKira audio backend that will fall back to a dummy backend …\nThis is a dummy backend since Cpal didn’t work.\nAn asset ref.\nA reference to an asset in an <code>EcsRef</code>\nA component ref.\nA component borrow into an <code>EcsRef</code>.\nA mutable component borrow into an <code>EcsRef</code>.\nA reference to component in an <code>EcsRef</code>.\nA reference to an ECS-compatible value.\nA borrow of an <code>EcsRef</code>.\nAn error that occurs when borrowing an <code>EcsRef</code>.\nA kind of borrow into an <code>EcsRef</code>.\nA mutable borrow of an <code>EcsRef</code>.\nA kind of mutable borrow of an <code>EcsRef</code>.\nThe kind of value reference for <code>EcsRef</code>.\nA free-standing ref, not stored in the ECS.\nA resource ref.\nA type data that can be used to specify a custom metatable …\nBorrow the value pointed to by the <code>EcsRef</code>\nImmutably borrow the data.\nMutably borrow the value pointed to by the <code>EcsRef</code>\nMutably borrow the data.\nThe kind of reference.\nThe entity to get the component data for.\nGenerate the environment table for executing scripts under.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe kind of asset we are referencing.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into a lua value.\nGet the function that may be used to retrieve the …\nThe path to the desired field.\nRegisters lua binding typedatas for bones_framework types.\nGet the <code>SchemaRef</code>.\nGet the borrow as a <code>SchemaRef</code>.\nGet the <code>SchemaRef</code>.\nGet the borrow as a <code>SchemaRefMut</code>.\nThe asset server handle.\nThe component store.\nAn asset ref.\nA reference to an asset in an <code>EcsRef</code>\nA component ref.\nA component borrow into an <code>EcsRef</code>.\nA mutable component borrow into an <code>EcsRef</code>.\nA reference to component in an <code>EcsRef</code>.\nA reference to an ECS-compatible value.\nA borrow of an <code>EcsRef</code>.\nAn error that occurs when borrowing an <code>EcsRef</code>.\nA kind of borrow into an <code>EcsRef</code>.\nA mutable borrow of an <code>EcsRef</code>.\nA kind of mutable borrow of an <code>EcsRef</code>.\nThe kind of value reference for <code>EcsRef</code>.\nA free-standing ref, not stored in the ECS.\nA resource ref.\nA type data that can be used to specify a custom metatable …\nThe kind of reference.\nThe entity to get the component data for.\nThe kind of asset we are referencing.\nThe path to the desired field.\nThe asset server handle.\nThe component store.\nA boolean.\nThe represents a <code>SchemaBox</code> with given type inside.\nType represents an enum, which in the C layout is called a …\nSchema data for an enum.\nA type for an enum tag for <code>EnumSchemaInfo</code>.\n<code>f32</code>\n<code>f64</code>\nTrait implemented for types that can produce an instance …\nTrait implemented for types that have a <code>Schema</code>.\nDerive macro for the HasSchema trait.\n<code>i128</code>\n<code>i16</code>\n<code>i32</code>\n<code>i64</code>\n<code>i8</code>\nType represents a <code>SchemaMap</code>.\nOpaque data that cannot described by a schema.\nA type of primitive.\nThe type represents a primitive value.\nSchema information describing the memory layout of a type.\nA schema describes the data layout of a type, to enable …\nLayout information computed for <code>SchemaData</code>.\nA Rust <code>String</code>. Must be manipulated with Rust string …\nThe type represents a struct.\nA field in a <code>StructSchemaInfo</code>.\nSchema data for a struct.\n<code>u128</code>\nA <code>u16</code>.\n<code>u16</code>\nA <code>u32</code>.\n<code>u32</code>\n<code>u64</code>\nA <code>u8</code>.\n<code>u8</code>\nA wrapper struct that marks it unsafe to both create and …\nInformation about an enum variant for <code>EnumSchemaInfo</code>.\nType represents a <code>SchemaVec</code>, where each item in the vec …\nAllocation and collection utilities.\nGet the enum, if this is a enum.\nGet the primitive, if this is a primitive.\nConverts a reference of <code>T</code> to a <code>SchemaRefMut</code>\nConverts a reference of <code>T</code> to a <code>SchemaRef</code>\nGet the struct, if this is a struct.\nGet the schema of the items in the vector, if this is a …\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nThe function pointer that may be used to clone data with …\nCalculate the layout of the type represented by the schema.\nThe function pointer that may be used to write a default …\nThe function pointer that may be used to drop data with …\nThe function pointer that may be used to compare two …\nIf this is a struct, then the field offsets will contain …\nThe fields in the struct, in the order they are defined.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the data for the type.\nThe full name of the type, including any module specifiers.\nUnsafely get the inner value.\nRecursively checks whether or not the schema contains any …\nThe function pointer that may be used to hash the value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe kind of schema.\nGet the memory layout of the enum tag.\nThe layout of the type.\nThe short name of the type.\nThe name of the enum variant.\nThe name of the field. Will be <code>None</code> if this is a field of …\nCreate a new <code>Unsafe</code> contianing the <code>value</code>.\nThe prelude.\nSchema-aware smart pointers.\nTraits implementing raw function calls for cloning, …\nRegister this schema with the global schema registry.\nGlobal schema registry.\nGet this type’s <code>Schema</code>.\nThe schema of this variant.\nThe schema of the field.\nSerde implementations for <code>Schema</code>.\nThe layout of the enum tag.\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nContainer for storing <code>Schema</code> type datas.\nThe Rust <code>TypeId</code> that this <code>Schema</code> was created from, if it …\nInfo for the enum variants.\nThe alignment of the data.\nThe size of the data.\nThe schema of the key type.\nThe schema of the value type.\nExtension trait for the <code>Layout</code> type that copies useful …\nA low-level memory allocation utility for creating a …\nIterator over items in a <code>ResizableAlloc</code>.\nMutable iterator over items in a <code>ResizableAlloc</code>.\nTyped version of a <code>SchemaMap</code>.\nA typed version of a <code>SchemaVec</code>.\nIterator over <code>SVec</code>.\nIterator over items in an <code>SVec</code>.\nIterator over items in an <code>SVec</code>.\nUntyped schema-aware “HashMap”.\nA type-erased <code>Vec</code>-like collection that for items with the …\nIterator over <code>SchemaVec</code>.\nMutable iterator over <code>SchemaVec</code>.\nError type for <code>TypeDatas</code>\nA <code>TypeMap</code>-like structure, that does not allow removing …\nGet a raw pointer to the allocation.\nGet the capacity of the backing buffer.\nGet the capacity.\nGet the capacity of the vec.\nClears the vector, removing all values.\nClears the vector, removing all values.\nReturns true if the map contains a value for the specified …\nExtends the vector with the contents of an iterator.\nReturns a reference to the first element of the vector, or …\nReturns a mutable reference to the first element of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet an item in the vec.\nGet a reference to an item in the map.\nGet an item from the vec.\nGet a value out of the map for the given key.\nBorrow data from the store, if it exists.\nGet an item in the vec.\nGet a mutable reference to an item in the map.\nGet an item from the vec.\nGet a value out of the map for the given key.\nGet the item with the given index.\nGet an untyped reference to an item in the map.\nBorrow data from the store, if it exists.\nGet an item with the given index.\nGet an untyped reference to an item in the map.\nSafety\nSafety\nGet the hash of this <code>SchemaVec</code>.\nGet the hash of the <code>SVec</code>.\nInsert an entry into the map, returning the previous …\nInsert an item into the map.\nInsert data into the store.\nInsert an untyped item into the map.\nInsert boxed data into the store.\nSafety\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert into an untyped <code>SchemaMap</code>.\nConvert to an untyped <code>SchemaVec</code>.\nConvert into a typed <code>SMap</code>.\nConvert into a typed <code>SVec</code>.\nReturns <code>true</code> if the vector has zero items in it.\nReturns true if the map contains no elements.\nReturns <code>true</code> if there are no items in the vector.\nReturns <code>true</code> if the map is empty.\nIterate over values in the vec\nIterate over entries in the map.\nIterate over the allocation.\nIterate over references to the items in the vec.\nIterate over entries in the map.\nIterate over type datas.\nIterate mutably over values in the vec\nIterate over entries in the map.\nIterate mutably over the allocation.\nIterate over mutable references to the items in the vec.\nIterate over entries in the map.\nGet the schema for the map keys.\nIterate over keys in the map.\nIterate over keys in the map.\nReturns a reference to the last element of the vector, or …\nReturns a mutable reference to the last element of the …\nGet the layout.\nGet the number of items in the vector.\nReturns the number of elements in the map.\nGet the length of the vector.\nGet the number of entries in the map.\nInitialize an empty <code>SchemaVec</code> for items with the given …\nInitialize the <code>SMap</code>.\nCreate a new <code>ResizableAlloc</code> for the given memory layout. …\nCreate a new, empty <code>SVec</code>.\nCreate a new map, with the given key and value schemas.\nto ensure that the following address will satisfy <code>align</code> …\nPop an item off the vec.\nPop an item off of the vector.\nPop the last item off of the end of the vector.\nRemoves and returns the last element of the vector if the …\nPush an item to the vec.\nPush an item onto the vector.\nPush the item into the end of the vector.\nRaw version of the <code>eq()</code> function. Not meant for normal use.\nRaw version of the <code>hash()</code> function. Not meant for normal …\nRemove and return the element at position <code>index</code> within the …\nRemove an item from the map.\nRemove and return the element at position <code>index</code> within the …\nRemove an item.\nUntypededly remove an item.\nSafety\nCreates a layout describing the record for <code>n</code> instances of …\nResize the buffer, re-allocating it’s memory.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate, …\nReverses the order of elements in the vector, in place.\nGet the schema of items in this <code>SchemaVec</code>.\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nShortens the vector, keeping the first <code>len</code> elements and …\nShortens the vector, keeping the first <code>len</code> elements and …\nGet an item in the vec.\nGet a value out of the map for the given key.\nGet an item in the vec.\nGet a value out of the map for the given key.\nGet an untyped reference to an item in the map.\nGet an untyped reference to an item in the map.\nInsert an item into the map.\nInsert an untyped item into the map.\nConvert into a typed <code>SMap</code>.\nTry to convert into a typed <code>SVec</code>.\nPop an item off the vec.\nPush an item to the vec.\nPush the item into the end of the vector.\nRemove an item.\nUntypededly remove an item.\nGet a pointer to the item with the given index without …\nGet the schema for the map values.\nIterate over values in the map.\nIterate over values in the map.\nIterate over values in the map.\nIterate over values in the map.\nCreate a new <code>ResizableAlloc</code> with the given capacity.\nA <code>bool</code>\nA boolean.\nA <code>bool</code>\nThe represents a <code>SchemaBox</code> with given type inside.\nAccess an enum.\nType represents an enum, which in the C layout is called a …\nAccess an enum.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nSchema data for an enum.\nA type for an enum tag for <code>EnumSchemaInfo</code>.\nAn <code>f32</code>\n<code>f32</code>\nAn <code>f32</code>\nAn <code>f64</code>\n<code>f64</code>\nAn <code>f64</code>\nThe index of a field in a struct in a <code>Schema</code>.\nA wrapper type that implements […\nTrait implemented for types that can produce an instance …\nTrait implemented for types that have a <code>Schema</code>.\nDerive macro for the HasSchema trait.\nAn <code>i128</code>\n<code>i128</code>\nAn <code>i128</code>\nAn <code>i16</code>\n<code>i16</code>\nAn <code>i16</code>\nAn <code>i32</code>\n<code>i32</code>\nAn <code>i32</code>\nAn <code>i64</code>\n<code>i64</code>\nAn <code>i64</code>\nAn <code>i8</code>\n<code>i8</code>\nAn <code>i8</code>\nThe index of a field. Works for tuple fields and named …\nAccess a map.\nType represents a <code>SchemaMap</code>.\nAccess a map.\nThe name of a field.\nAn opaque type\nOpaque data that cannot described by a schema.\nAn opaque type\nA type of primitive.\nAccess a struct.\nThe type represents a primitive value.\nAccess a struct.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nThe number of bits in a Ulid’s random portion\nA typed version of <code>SchemaBox</code>.\nGlobal <code>SchemaRegistry</code> used to register <code>SchemaData</code>s and …\nTyped version of a <code>SchemaMap</code>.\nA typed version of a <code>SchemaVec</code>.\nA owning, type-erased <code>Box</code>-like container for types with a …\nSchema information describing the memory layout of a type.\nDerivable schema <code>type_data</code> for types that implement …\nA struct that implements <code>DeserializeSeed</code> and can be used …\nError returned when a field is not found in a schema.\nA unique identifier for a schema registered in the …\nA schema describes the data layout of a type, to enable …\nLayout information computed for <code>SchemaData</code>.\nUntyped schema-aware “HashMap”.\nAccess helper for a <code>SchemaMap</code>.\nMutable <code>SchemaMap</code> access helper.\nError type when attempting to cast between types with …\nAn untyped reference that knows the <code>Schema</code> of the pointee …\nHelper for accessing the inner data of a schema ref at …\nAn untyped mutable reference that knows the <code>Schema</code> of the …\nAccess a schema\nA schema registry that alloates <code>SchemaId</code>s for <code>SchemaData</code>s …\nA struct that implements <code>Serialize</code> and wraps around a …\nA type-erased <code>Vec</code>-like collection that for items with the …\nAccess helper for a <code>SchemaVec</code>.\nMutable <code>SchemaVec</code> access helper.\nA <code>String</code>\nA Rust <code>String</code>. Must be manipulated with Rust string …\nA <code>String</code>\nAccess a struct.\nThe type represents a struct.\nAccess a struct.\nA field in a <code>StructSchemaInfo</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nSchema data for a struct.\nThe number of bits in a Ulid’s time portion\nA <code>u128</code>\n<code>u128</code>\nA <code>u128</code>\nA <code>u16</code>\nA <code>u16</code>.\n<code>u16</code>\nA <code>u16</code>\nA <code>u32</code>\nA <code>u32</code>.\n<code>u32</code>\nA <code>u32</code>\nA <code>u64</code>\n<code>u64</code>\nA <code>u64</code>\nA <code>u8</code>\nA <code>u8</code>.\n<code>u8</code>\nA <code>u8</code>\nA Ulid is a unique 128-bit lexicographically sortable …\nA wrapper struct that marks it unsafe to both create and …\nInformation about an enum variant for <code>EnumSchemaInfo</code>.\nAccess a vec.\nType represents a <code>SchemaVec</code>, where each item in the vec …\nAccess a vec.\nCreates a Crockford Base32 encoded string that represents …\nConverts a reference of <code>T</code> to a <code>SchemaRefMut</code>\nConverts a reference of <code>T</code> to a <code>SchemaRef</code>\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nThe function pointer that may be used to clone data with …\nGets the datetime of when this Ulid was created accurate …\nThe function pointer that may be used to write a default …\nThe function that may be used to deserialize the type.\nThe function pointer that may be used to drop data with …\nThe function pointer that may be used to compare two …\nIf this is a struct, then the field offsets will contain …\nThe fields in the struct, in the order they are defined.\nReturns the argument unchanged.\nCreates a Ulid using the provided bytes array.\nCreates a new Ulid with the given datetime\nCreates a new Ulid with the given datetime and random …\nCreate a Ulid from separated parts.\nCreates a Ulid from a Crockford Base32 encoded string\nReturn the data for the type.\nThe full name of the type, including any module specifiers.\nThe function pointer that may be used to hash the value.\nIncrement the random number, make sure that the ts millis …\nCalls <code>U::from(self)</code>.\nTest if the Ulid is nil\nThe kind of schema.\nThe layout of the type.\nThe name of the field, if set.\nThe name of the field, if set.\nThe short name of the type.\nThe name of the enum variant.\nThe name of the field. Will be <code>None</code> if this is a field of …\nCreates a new Ulid with the current time (UTC)\nThe ‘nil Ulid’.\nGets the random section of this ulid\nRegister this schema with the global schema registry.\nGet this type’s <code>Schema</code>.\nThe schema of this variant.\nThe schema of the field.\nThe registered schemas.\nThe layout of the enum tag.\nGets the timestamp section of this ulid\nReturns the bytes of the Ulid in big-endian order.\nCreates a Crockford Base32 encoded string that represents …\nCreates a Crockford Base32 encoded string that represents …\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nContainer for storing <code>Schema</code> type datas.\nThe Rust <code>TypeId</code> that this <code>Schema</code> was created from, if it …\nThe field’s value.\nThe field’s value.\nInfo for the enum variants.\nCreates a new Ulid using data from the given random number …\nThe alignment of the data.\nThe size of the data.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe schema of the key type.\nThe schema of the value type.\nA <code>bool</code>\nA <code>bool</code>\nAccess an enum.\nAccess an enum.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nAn <code>f32</code>\nAn <code>f32</code>\nAn <code>f64</code>\nAn <code>f64</code>\nThe index of a field in a struct in a <code>Schema</code>.\nA wrapper type that implements […\nAn <code>i128</code>\nAn <code>i128</code>\nAn <code>i16</code>\nAn <code>i16</code>\nAn <code>i32</code>\nAn <code>i32</code>\nAn <code>i64</code>\nAn <code>i64</code>\nAn <code>i8</code>\nAn <code>i8</code>\nThe index of a field. Works for tuple fields and named …\nThe display error message for this error type.\nAccess a map.\nAccess a map.\nThe name of a field.\nAn opaque type\nAn opaque type\nAccess a struct.\nAccess a struct.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nA typed version of <code>SchemaBox</code>.\nA owning, type-erased <code>Box</code>-like container for types with a …\nError returned when a field is not found in a schema.\nAccess helper for a <code>SchemaMap</code>.\nMutable <code>SchemaMap</code> access helper.\nError type when attempting to cast between types with …\nAn untyped reference that knows the <code>Schema</code> of the pointee …\nHelper for accessing the inner data of a schema ref at …\nAn untyped mutable reference that knows the <code>Schema</code> of the …\nAccess a schema\nAccess helper for a <code>SchemaVec</code>.\nMutable <code>SchemaVec</code> access helper.\nA <code>String</code>\nA <code>String</code>\nAccess a struct.\nAccess a struct.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nA <code>u128</code>\nA <code>u128</code>\nA <code>u16</code>\nA <code>u16</code>\nA <code>u32</code>\nA <code>u32</code>\nA <code>u64</code>\nA <code>u64</code>\nA <code>u8</code>\nA <code>u8</code>\nAccess a vec.\nAccess a vec.\nGet a helper to access the inner data.\nGet a mutable access helper to this reference.\nBorrow the schema ref as a <code>SchemaBox</code> if it is one.\nBorrow the schema ref as a <code>SchemaMap</code> if it is one.\nBorrow this box as a <code>SchemaRefMut</code>.\nConvert back to a <code>SchemaRefMut</code>\nGet the raw pointer\nGet a raw pointer to the box data.\nGet the pointer.\nBorrow this <code>SchemaRefMut</code> as a <code>SchemaRef</code>.\nBorrow this <code>SchemaRefMutAccess</code> as a <code>SchemaRefAccess</code>.\nConvert to an immutable <code>PrimitiveRef</code>.\nBorrow this box as a <code>SchemaRef</code>.\nConvert to a <code>SchemaRef</code>.\nBorrow the schema ref as a <code>SchemaVec</code> if it is one.\nCast this pointer to a reference to a type with a matching …\nCast this box to it’s inner type and return it.\nCast this pointer to a mutable reference to a type with a …\nCast this pointer to a mutable reference.\nUnsafely convert this box into an owned T.\nUnsafely cast this pointer to a specifc Rust type.\nCast this pointer to a reference to a type with a matching …\nCast this box to a mutable reference to a type with a …\nCast this pointer to a mutable reference.\nCast this box to a reference to a type with a …\nUnsafely cast this pointer to a specifc Rust type.\nClone this schema ref into a new box.\nDebug format the value stored in the schema box.\nCreate a new <code>SchemaBox</code> for a type with a <code>Schema</code> that has a …\nGet the reference to a field.\nGet field with the given index.\nGet the reference to a field.\nGet field with the given index.\nAccess a field, if it exists.\nGet the field pointed to by the given path.\nGet the field pointed to by the given path.\nGet the field pointed to by the given path.\nGet the field pointed to by the given path.\nIterate over fields in the struct.\nInterate over the fields on the struct.\nDeallocate the memory stored in the box, but don’t run …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>SchemaRefMut</code> from a raw pointer and it’s …\nCreate a new <code>SchemaRef</code> from a raw pointer and it’s …\nCreate a new <code>SchemaBox</code> from raw parts.\nGet the hash of this schema box, if supported.\nGet the hash of this schema box.\nGet the hash of this schema box, if supported.\nGet the <code>StructSchemaInfo</code> for this struct.\nGet the enum schema info.\nGet the <code>StructSchemaInfo</code> for this struct.\nGet the enum schema info.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into an accessor for the inner data.\nBorrow the schema ref as a <code>SchemaBox</code> if it is one.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nGet the reference to a field.\nAccess a field, if it exists.\nGet the field pointed to by the given path.\nConsume to create an iterator over fields in the struct.\nBorrow the schema ref as a <code>SchemaMap</code> if it is one.\nConvert into an <code>SBox</code> if the schema of T matches.\nConvert into a <code>SchemaBox</code>\nBorrow this <code>SchemaRefMutAccess</code> as a <code>SchemaRefAccess</code>.\nConvert back to a <code>SchemaRefMut</code>\nConvert back to a <code>SchemaRefMut</code>\nConvert this to a <code>SchemaRefMut</code>.\nConvert back to a <code>SchemaRefMut</code>\nBorrow the schema ref as a <code>SchemaVec</code> if it is one.\nThe name of the field, if set.\nThe name of the field, if set.\nCreate a new <code>SchemaRefMut</code> from a reference to a type that …\nCreate a new <code>SchemaRefAccess</code> for the given <code>SchemaRef</code>.\nCreate a new <code>SchemaBox</code> from an owned type.\nCreate a new <code>SBox</code>.\nCreate a new <code>SchemaRef</code> from a reference to a type that …\nCreate a new <code>SchemaRefAccess</code> for the given <code>SchemaRef</code>.\nCreate a new <code>SchemaRefAccess</code> for the given <code>SchemaRef</code> that …\nCreate a new <code>SchemaRefAccess</code> for the given <code>SchemaRef</code> that …\nConvert a borrowed <code>SchemaRefMut</code> to an owned <code>SchemaRefMut</code> …\nGet the <code>Schema</code> for the pointer.\nGet the struct’s schema.\nGet the enum’s schema.\nGet the <code>Schema</code> for the pointer.\nGet the <code>Schema</code> for the pointer.\nGet the struct’s schema.\nGet the enum’s schema.\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nCast this pointer to a reference to a type with a matching …\nCast this box to it’s inner type and return it.\nCast this pointer to a mutable reference to a type with a …\nCast this pointer to a mutable reference to a type with a …\nCast this box to a mutable reference to a type with a …\nCast this box to a reference to a type with a …\nGet the hash of this schema box, if supported.\nConvert into an <code>SBox</code> if the schema of T matches.\nAllocates a <code>SchemaBox</code> for the given <code>Schema</code>, but <strong>doesn’t </strong>…\nGet a reference to the enum’s currently selected value.\nGet a reference to the enum’s currently selected value.\nThe field’s value.\nThe field’s value.\nGet the currently-selected variant index.\nGet the currently-selected variant index.\nGet the <code>VariantInfo</code> for the current variant.\nGet the name of the currently selected variant.\nGet the name of the currently selected variant.\nGet the <code>StructSchemaInfo</code> for the current variant.\nClone <code>other</code> and write it’s data to <code>self</code>. Panics if this …\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nTrait implemented automatically for types that implement …\nTrait implemented automatically for types that implement …\nTrait implemented automatically for types that implement …\nTrait implemented automatically for types that implement <code>Eq</code>…\nTrait implemented automatically for types that implement …\nWrite the default value of the type to the pointer.\nGet a callback suitable for [<code>SchemaData</code>].\nWrite the default value of the type to the pointer.\nGet a callback suitable for [<code>SchemaData</code>].\nWrite the default value of the type to the pointer.\nGet a callback suitable for [<code>SchemaData</code>].\nGet the hash of the type.\nGet a callback suitable for [<code>SchemaData</code>].\nGet the hash of the type.\nGet a callback suitable for [<code>SchemaData</code>].\nGlobal <code>SchemaRegistry</code> used to register <code>SchemaData</code>s and …\nA unique identifier for a schema registered in the …\nA schema registry that alloates <code>SchemaId</code>s for <code>SchemaData</code>s …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister a schema with the registry.\nThe registered schemas.\nDerivable schema <code>type_data</code> for types that implement …\nA struct that implements <code>DeserializeSeed</code> and can be used …\nA struct that implements <code>Serialize</code> and wraps around a …\nUse this <code>SchemaDeserialize</code> to deserialize data from the …\nThe function that may be used to deserialize the type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe allocator return an error\nTypes that can be used as the backing store for a <code>SmallVec</code>.\nhas a reference to T\nhas a reference to T\nOverflow <code>usize::MAX</code> or other error during size computation\nError type for APIs with fallible heap allocation\nError creating ID\nDerive macro for deriving <code>Deref</code> on structs with one field.\nDerive macro for deriving <code>DerefMut</code> on structs with one …\nAn iterator that removes the items from a <code>SmallVec</code> and …\nVariant for fast PRNGs, like Wyrand.\nTrait for enabling creating new <code>TurboCore</code> instances from …\nDetermines the kind of PRNG. <code>TurboKind::FAST</code> RNGs are …\nThis trait provides the means to easily generate all …\nA <code>HashMap</code> implementing aHash, a high speed keyed hashing …\nA <code>HashSet</code> implementing aHash, a high speed keyed hashing …\nAn iterator that consumes a <code>SmallVec</code> and yields its items …\nThe ID is in the wrong format.\nThe type of the array’s elements.\nA <code>Ulid</code> with a human-readable ascii prefix.\nError creating a <code>LabeledId</code>.\nErrors that can happen while parsing a <code>LabeledId</code>.\nThis type provides a way to store data to which you either …\nThis type is basically the same as <code>MaybeOwned</code>, but works …\nowns T\nowns T\nThe prefix was not ASCII.\nThe prefix was too long ( greater than 63 chars ).\nVariant for slower PRNGs, like ChaCha8.\nA marker trait to be applied to anything that implements …\nAssociated type for accepting valid Seed values. Must be …\nTrait for implementing Seedable PRNGs, requiring that the …\nA <code>Vec</code>-like container that can store a small number of …\nA fast, non-cryptographic, thread-local random number …\nConvenience trait for constructing a <code>SmallVec</code>\nBase trait for implementing a PRNG. Only one method must be\nEnum for determining the kind of PRNG, whether a fast one, …\nExtension trait for automatically implementing all …\nA Ulid is a unique 128-bit lexicographically sortable …\nThe ULID could not be parsed.\nExtension trait for <code>Ulid</code>.\nA handle representing a string in the global string cache.\nA standard <code>HashMap</code> using <code>Ustr</code> as the key type with a …\nA standard <code>HashSet</code> using <code>Ustr</code> as the key type with a …\nGenerates a random <code>char</code> in ranges a-z and A-Z.\nGenerates a random <code>char</code> in ranges a-z, A-Z and 0-9.\nReturns a random boolean value.\nReturns a boolean value based on a rate. <code>rate</code> represents …\nGenerates a random <code>char</code> in the given range.\nConstructor that) is the same as <code>Ulid::new()</code>, but that …\nAn ergonomic abbreviation for <code>Default::default()</code> to make …\nGenerate a random digit in the given <code>radix</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nFills a mutable buffer with random bytes.\nForks a <code>TurboCore</code> instance by deterministically deriving a …\nReturns an array of constant <code>SIZE</code> containing random <code>u8</code> …\nReturns a random <code>i128</code> value.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nReturns a random <code>isize</code> value.\nReturns a random <code>u128</code> value.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nReturns a random <code>usize</code> value.\nShortens a type name to remove all module paths.\nReturns a random <code>i128</code> within a given range bound.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nReturns a <code>usize</code> value for stable indexing across different …\nReturns a random <code>isize</code> within a given range bound.\nHints to the compiler that the branch condition is likely …\nGenerates a random <code>char</code> in the range a-z.\nPartially shuffles a slice by a given amount and returns …\nThe prelude.\nReseeds the <code>SeededCore</code> with a new seed/state.\nSamples a random item from a slice of values.\nSamples a random item from an iterator of values. <code>O(1)</code> if …\nSamples multiple unique items from a slice of values.\nSamples multiple unique items from an iterator of values.\nSamples multiple unique items from a mutable slice of …\nSamples a random <code>&amp;mut</code> item from a slice of values.\nShuffles a slice randomly in O(n) time.\nReturns the number of items the array can hold.\nCreates a <code>SmallVec</code> containing the arguments.\nCreates an inline <code>SmallVec</code> containing the arguments. This …\nConstruct a new <code>SmallVec</code> from a slice.\nReturns a random <code>u128</code> within a given range bound.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nHints to the compiler that the branch condition is …\nGenerates a random <code>char</code> in the range A-Z.\nReturns a random <code>usize</code> within a given range bound.\nCreate a new Ustr from the given &amp;str.\nStochastic Acceptance implementation of Roulette Wheel …\nStochastic Acceptance implementation of Roulette Wheel …\nCreates a new <code>SeededCore</code> with a specific seed value.\nThe layout that was passed to the allocator\nThe allocator return an error\nTypes that can be used as the backing store for a <code>SmallVec</code>.\nhas a reference to T\nhas a reference to T\nOverflow <code>usize::MAX</code> or other error during size computation\nError type for APIs with fallible heap allocation\nError creating ID\nDerive macro for deriving <code>Deref</code> on structs with one field.\nDerive macro for deriving <code>DerefMut</code> on structs with one …\nAn iterator that removes the items from a <code>SmallVec</code> and …\nVariant for fast PRNGs, like Wyrand.\nTrait for enabling creating new <code>TurboCore</code> instances from …\nDetermines the kind of PRNG. <code>TurboKind::FAST</code> RNGs are …\nThis trait provides the means to easily generate all …\nA <code>HashMap</code> implementing aHash, a high speed keyed hashing …\nA <code>HashSet</code> implementing aHash, a high speed keyed hashing …\nAn iterator that consumes a <code>SmallVec</code> and yields its items …\nThe ID is in the wrong format.\nThe type of the array’s elements.\nA <code>Ulid</code> with a human-readable ascii prefix.\nError creating a <code>LabeledId</code>.\nErrors that can happen while parsing a <code>LabeledId</code>.\nThis type provides a way to store data to which you either …\nThis type is basically the same as <code>MaybeOwned</code>, but works …\nowns T\nowns T\nThe prefix was not ASCII.\nThe prefix was too long ( greater than 63 chars ).\nVariant for slower PRNGs, like ChaCha8.\nA marker trait to be applied to anything that implements …\nAssociated type for accepting valid Seed values. Must be …\nTrait for implementing Seedable PRNGs, requiring that the …\nA <code>Vec</code>-like container that can store a small number of …\nA fast, non-cryptographic, thread-local random number …\nConvenience trait for constructing a <code>SmallVec</code>\nBase trait for implementing a PRNG. Only one method must be\nEnum for determining the kind of PRNG, whether a fast one, …\nExtension trait for automatically implementing all …\nA Ulid is a unique 128-bit lexicographically sortable …\nThe ULID could not be parsed.\nExtension trait for <code>Ulid</code>.\nA handle representing a string in the global string cache.\nA standard <code>HashMap</code> using <code>Ustr</code> as the key type with a …\nA standard <code>HashSet</code> using <code>Ustr</code> as the key type with a …\nGenerates a random <code>char</code> in ranges a-z and A-Z.\nGenerates a random <code>char</code> in ranges a-z, A-Z and 0-9.\nReturns a random boolean value.\nReturns a boolean value based on a rate. <code>rate</code> represents …\nGenerates a random <code>char</code> in the given range.\nConstructor that) is the same as <code>Ulid::new()</code>, but that …\nAn ergonomic abbreviation for <code>Default::default()</code> to make …\nGenerate a random digit in the given <code>radix</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nFills a mutable buffer with random bytes.\nForks a <code>TurboCore</code> instance by deterministically deriving a …\nReturns an array of constant <code>SIZE</code> containing random <code>u8</code> …\nReturns a random <code>i128</code> value.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nReturns a random <code>isize</code> value.\nReturns a random <code>u128</code> value.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nReturns a random <code>usize</code> value.\nShortens a type name to remove all module paths.\nReturns a random <code>i128</code> within a given range bound.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nReturns a <code>usize</code> value for stable indexing across different …\nReturns a random <code>isize</code> within a given range bound.\nHints to the compiler that the branch condition is likely …\nGenerates a random <code>char</code> in the range a-z.\nPartially shuffles a slice by a given amount and returns …\nConvenience re-export of common traits, structs and utils.\nReseeds the <code>SeededCore</code> with a new seed/state.\nA fast but <strong>not</strong> cryptographically secure PRNG based on …\nSamples a random item from a slice of values.\nSamples a random item from an iterator of values. <code>O(1)</code> if …\nSamples multiple unique items from a slice of values.\nSamples multiple unique items from an iterator of values.\nSamples multiple unique items from a mutable slice of …\nSamples a random <code>&amp;mut</code> item from a slice of values.\nShuffles a slice randomly in O(n) time.\nReturns the number of items the array can hold.\nCreates a <code>SmallVec</code> containing the arguments.\nCreates an inline <code>SmallVec</code> containing the arguments. This …\nConstruct a new <code>SmallVec</code> from a slice.\nReturns a random <code>u128</code> within a given range bound.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nHints to the compiler that the branch condition is …\nGenerates a random <code>char</code> in the range A-Z.\nReturns a random <code>usize</code> within a given range bound.\nCreate a new Ustr from the given &amp;str.\nStochastic Acceptance implementation of Roulette Wheel …\nStochastic Acceptance implementation of Roulette Wheel …\nCreates a new <code>SeededCore</code> with a specific seed value.\nThe layout that was passed to the allocator\nMemory allocation APIs\nA module for working with borrowed data.\nThe <code>Box&lt;T&gt;</code> type for heap allocation.\nCollection types.\nUtilities related to FFI bindings.\nUtilities for formatting and printing <code>String</code>s.\nCreates a <code>String</code> using interpolation of runtime …\nSingle-threaded reference-counting pointers. ‘Rc’ …\nUtilities for the slice primitive type.\nUtilities for the <code>str</code> primitive type.\nA UTF-8–encoded, growable string.\nThread-safe reference-counting pointers.\nTypes and Traits for working with asynchronous tasks.\nA contiguous growable array type with heap-allocated …\nCreates a <code>Vec</code> containing the arguments.\nThe <code>AllocError</code> error indicates an allocation failure that …\nAn implementation of <code>Allocator</code> can allocate, grow, shrink, …\nThe global memory allocator.\nA memory allocator that can be registered as the standard …\nLayout of a block of memory.\nThe parameters given to <code>Layout::from_size_align</code> or some …\nThe minimum byte alignment for a memory block of this …\nCreates a layout describing the record that can hold a …\nAllocate memory with the global allocator.\nAllocate memory as described by the given <code>layout</code>.\nAllocate zero-initialized memory with the global allocator.\nBehaves like <code>alloc</code>, but also ensures that the contents are …\nAttempts to allocate a block of memory.\nBehaves like <code>allocate</code>, but also ensures that the returned …\nCreates a layout describing the record for a <code>[T; n]</code>.\nCreates a “by reference” adapter for this instance of …\nCreates a <code>NonNull</code> that is dangling, but well-aligned for …\nDeallocate memory with the global allocator.\nDeallocate the block of memory at the given <code>ptr</code> pointer …\nDeallocates the memory referenced by <code>ptr</code>.\nCreates a layout describing the record for <code>self</code> followed by\nCreates a layout describing the record for <code>self</code> followed by\nProduces layout describing a record that could be used to …\nProduces layout describing a record that could be used to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a <code>Layout</code> from a given <code>size</code> and <code>align</code>, or …\nCreates a layout, bypassing all checks.\nAttempts to extend the memory block.\nBehaves like <code>grow</code>, but also ensures that the new contents …\nSignal a memory allocation error.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a <code>Layout</code> suitable for holding a value of type <code>T</code>.\nCreates a layout by rounding the size of this layout up to …\nReturns the amount of padding we must insert after <code>self</code> to …\nReallocate memory with the global allocator.\nShrink or grow a block of memory to the given <code>new_size</code> in …\nCreates a layout describing the record for <code>n</code> instances of …\nCreates a layout describing the record for <code>n</code> instances of …\nAttempts to shrink the memory block.\nThe minimum size in bytes for a memory block of this …\nA trait for borrowing data.\nA trait for mutably borrowing data.\nBorrowed data.\nA clone-on-write smart pointer.\nOwned data.\nThe resulting type after obtaining ownership.\nA generalization of <code>Clone</code> to borrowed data.\nImmutably borrows from an owned value.\nMutably borrows from an owned value.\nUses borrowed data to replace owned data, usually by …\nCreates an owned Cow&lt;’a, B&gt; with the default value for …\nMoves the string into a <code>Cow::Owned</code>.\nConverts a <code>CStr</code> into a borrowed <code>Cow</code> without copying or …\nCreates a clone-on-write pointer from a reference to <code>Path</code>.\nReturns the argument unchanged.\nCreates a <code>Borrowed</code> variant of <code>Cow</code> from a reference to <code>Vec</code>.\nConverts the string reference into a <code>Cow::Borrowed</code>.\nConverts a <code>String</code> reference into a <code>Borrowed</code> variant. No …\nCreates a clone-on-write pointer from a reference to …\nConverts a <code>CString</code> into an owned <code>Cow</code> without copying or …\nConverts the string reference into a <code>Cow::Borrowed</code>.\nConverts a <code>&amp;</code><code>CString</code> into a borrowed <code>Cow</code> without copying or …\nConverts a string slice into a <code>Borrowed</code> variant. No heap …\nCreates a <code>Borrowed</code> variant of <code>Cow</code> from a reference to an …\nCreates a clone-on-write pointer from an owned instance of …\nConverts a <code>String</code> into an <code>Owned</code> variant. No heap …\nCreates a <code>Borrowed</code> variant of <code>Cow</code> from a slice.\nCreates an <code>Owned</code> variant of <code>Cow</code> from an owned instance of …\nCalls <code>U::from(self)</code>.\nExtracts the owned data.\nReturns true if the data is borrowed, i.e. if <code>to_mut</code> would …\nReturns true if the data is owned, i.e. if <code>to_mut</code> would be …\nSearch by tag name\nAcquires a mutable reference to the owned form of the data.\nCreates owned data from borrowed data, usually by cloning.\nA pointer type that uniquely owns a heap allocation of …\nThinBox.\nReturns a reference to the underlying allocator.\nConverts to <code>Box&lt;[T], A&gt;</code>.\nConverts to <code>Box&lt;T, A&gt;</code>.\nReturns a new box with a <code>clone()</code> of this box’s contents.\nCopies <code>source</code>’s contents into <code>self</code> without creating a …\nCopies <code>source</code>’s contents into <code>self</code> without creating a …\nCreates a <code>Box&lt;T&gt;</code>, with the <code>Default</code> value for T.\nAttempt to downcast the box to a concrete type.\nAttempt to downcast the box to a concrete type.\nAttempt to downcast the box to a concrete type.\nDowncasts the box to a concrete type.\nDowncasts the box to a concrete type.\nDowncasts the box to a concrete type.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nCompute the length of this value in bytes when encoded as …\nReturns the argument unchanged.\nConverts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>Box&lt;CStr&gt;</code>, by copying the …\nConverts a <code>str</code> into a box of dyn <code>Error</code>.\nConverts a <code>Cow&lt;&#39;_, [T]&gt;</code> into a <code>Box&lt;[T]&gt;</code>\nReturns the argument unchanged.\nConvert a vector into a boxed slice.\nConverts a type of <code>Error</code> into a box of dyn <code>Error</code>.\nConverts a <code>&amp;str</code> into a <code>Box&lt;str&gt;</code>\nConverts a <code>T</code> into a <code>Box&lt;T&gt;</code>\nConverts the given <code>String</code> to a boxed <code>str</code> slice that is …\nConverts a <code>Cow&lt;&#39;_, str&gt;</code> into a <code>Box&lt;str&gt;</code>\nCopies the string into a newly allocated Box&lt;OsStr&gt;.\nConverts a type of <code>Error</code> + <code>Send</code> + <code>Sync</code> into a box of dyn …\nConverts a <code>Cow&lt;&#39;a, OsStr&gt;</code> into a Box&lt;OsStr&gt;, by copying …\nConverts an <code>OsString</code> into a Box&lt;OsStr&gt; without copying or …\nCreates a boxed <code>Path</code> from a clone-on-write pointer.\nConverts a <code>PathBuf</code> into a Box&lt;Path&gt;.\nConverts a <code>&amp;CStr</code> into a <code>Box&lt;CStr&gt;</code>, by copying the contents …\nConverts a <code>String</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.\nConverts a <code>Cow</code> into a box of dyn <code>Error</code>.\nConverts a <code>&amp;[T]</code> into a <code>Box&lt;[T]&gt;</code>\nConverts a <code>str</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.\nConverts a <code>[T; N]</code> into a <code>Box&lt;[T]&gt;</code>\nConverts a <code>Cow</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.\nConverts a <code>String</code> into a box of dyn <code>Error</code>.\nConverts a <code>CString</code> into a Box&lt;CStr&gt; without copying or …\nConverts a <code>Box&lt;str&gt;</code> into a <code>Box&lt;[u8]&gt;</code>\nCreates a boxed <code>Path</code> from a reference.\nConstructs a box from a raw pointer.\nConstructs a box from a raw pointer in the given allocator.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a <code>Box&lt;T&gt;</code> into a <code>Box&lt;[T]&gt;</code>\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConsumes the <code>Box</code>, returning the wrapped value.\nConverts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not …\nConsumes the <code>Box</code>, returning a wrapped raw pointer.\nConsumes the <code>Box</code>, returning a wrapped raw pointer and the …\nConsumes and leaks the <code>Box</code>, returning a mutable reference, …\nMoves a type to the heap with its <code>Metadata</code> stored in the …\nAllocates memory on the heap and then places <code>x</code> into it.\nAllocates memory in the given allocator then places <code>x</code> into …\nConstructs a new box with uninitialized contents.\nConstructs a new box with uninitialized contents in the …\nConstructs a new boxed slice with uninitialized contents.\nConstructs a new boxed slice with uninitialized contents …\nMoves a type to the heap with its <code>Metadata</code> stored in the …\nConstructs a new <code>Box</code> with uninitialized contents, with the …\nConstructs a new <code>Box</code> with uninitialized contents, with the …\nConstructs a new boxed slice with uninitialized contents, …\nConstructs a new boxed slice with uninitialized contents …\nRetrieve the underlying buffer for the packet.\nRetrieve the payload for the packet.\nConstructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…\nConstructs a new <code>Pin&lt;Box&lt;T, A&gt;&gt;</code>. If <code>T</code> does not implement …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nAttempts to convert a <code>Vec&lt;T&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.\nAttempts to convert a <code>Box&lt;[T]&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.\nMoves a type to the heap with its <code>Metadata</code> stored in the …\nAllocates memory on the heap then places <code>x</code> into it, …\nAllocates memory in the given allocator then places <code>x</code> into …\nConstructs a new box with uninitialized contents on the …\nConstructs a new box with uninitialized contents in the …\nConstructs a new boxed slice with uninitialized contents. …\nConstructs a new <code>Box</code> with uninitialized contents, with the …\nConstructs a new <code>Box</code> with uninitialized contents, with the …\nConstructs a new boxed slice with uninitialized contents, …\nWrites the value and converts to <code>Box&lt;T, A&gt;</code>.\nUnlike <code>Vec</code>, <code>Box&lt;[Z]&gt;</code> cannot reallocate, so we can be sure …\nThe memory allocator returned an error\nAn ordered map based on a B-Tree.\nAn ordered set based on a B-Tree.\nA priority queue implemented with a binary heap.\nError due to the computed capacity exceeding the collection…\nA doubly-linked list with owned nodes.\nThe error type for <code>try_reserve</code> methods.\nDetails of the allocation that caused a <code>TryReserveError</code>\nA double-ended queue implemented with a growable ring …\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nMoves all elements from <code>other</code> into <code>self</code>, leaving <code>other</code> …\nMoves all elements from <code>other</code> into <code>self</code>, leaving <code>other</code> …\nMoves all elements from <code>other</code> to the end of the list.\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nReturns a pair of slices which contain, in order, the …\nReturns a slice of all values in the underlying vector, in …\nReturns a pair of slices which contain, in order, the …\nProvides a reference to the back element, or <code>None</code> if the …\nProvides a reference to the back element, or <code>None</code> if the …\nProvides a mutable reference to the back element, or <code>None</code> …\nProvides a mutable reference to the back element, or <code>None</code> …\nA priority queue implemented with a binary heap.\nBinary searches this <code>VecDeque</code> for a given element. If the …\nBinary searches this <code>VecDeque</code> with a comparator function.\nBinary searches this <code>VecDeque</code> with a key extraction …\nReturns the intersection of <code>self</code> and <code>rhs</code> as a new …\nReturns the union of <code>self</code> and <code>rhs</code> as a new <code>BTreeSet&lt;T&gt;</code>.\nReturns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …\nAn ordered map based on a B-Tree.\nAn ordered set based on a B-Tree.\nReturns the number of elements the binary heap can hold …\nReturns the number of elements the deque can hold without …\nDrops all items from the binary heap.\nClears the map, removing all elements.\nClears the set, removing all elements.\nRemoves all elements from the <code>LinkedList</code>.\nClears the deque, removing all values.\nOverwrites the contents of <code>self</code> with a clone of the …\nOverwrites the contents of <code>self</code> with a clone of the …\nOverwrites the contents of <code>self</code> with a clone of the …\nReturns <code>true</code> if the set contains an element equal to the …\nReturns <code>true</code> if the <code>LinkedList</code> contains an element equal …\nReturns <code>true</code> if the deque contains an element equal to the …\nReturns <code>true</code> if the map contains a value for the specified …\nProvides a cursor at the back element.\nProvides a cursor with editing operations at the back …\nProvides a cursor at the front element.\nProvides a cursor with editing operations at the front …\nCreates an empty <code>BinaryHeap&lt;T&gt;</code>.\nCreates an empty <code>BTreeMap</code>.\nCreates an empty <code>BTreeSet</code>.\nCreates an empty <code>LinkedList&lt;T&gt;</code>.\nCreates an empty deque.\nVisits the elements representing the difference, i.e., the …\nClears the binary heap, returning an iterator over the …\nRemoves the specified range from the deque in bulk, …\nClears the binary heap, returning an iterator over the …\nGets the given key’s corresponding entry in the map for …\nCreates an iterator that visits all elements (key-value …\nCreates an iterator that visits all elements in ascending …\nCreates an iterator which uses a closure to determine if …\nReturns the contents of the “front” slice as returned …\nReturns a reference to the first element in the set, if …\nReturns the first entry in the map for in-place …\nReturns the first key-value pair in the map. The key in …\nReturns the argument unchanged.\nConverts a <code>Vec&lt;T&gt;</code> into a <code>BinaryHeap&lt;T&gt;</code>.\nReturns the argument unchanged.\nConverts a <code>[(K, V); N]</code> into a <code>BTreeMap&lt;(K, V)&gt;</code>.\nReturns the argument unchanged.\nConverts a <code>[T; N]</code> into a <code>BTreeSet&lt;T&gt;</code>.\nConverts a <code>[T; N]</code> into a <code>LinkedList&lt;T&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTurn a <code>Vec&lt;T&gt;</code> into a <code>VecDeque&lt;T&gt;</code>.\nConverts a <code>[T; N]</code> into a <code>VecDeque&lt;T&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAlways evaluates to <code>TryReserveErrorKind::CapacityOverflow</code>.\nProvides a reference to the front element, or <code>None</code> if the …\nProvides a reference to the front element, or <code>None</code> if the …\nProvides a mutable reference to the front element, or <code>None</code> …\nProvides a mutable reference to the front element, or <code>None</code> …\nReturns a reference to the value corresponding to the key.\nReturns a reference to the element in the set, if any, …\nProvides a reference to the element at the given index.\nReturns the key-value pair corresponding to the supplied …\nReturns a mutable reference to the value corresponding to …\nProvides a mutable reference to the element at the given …\nReturns a reference to the value corresponding to the …\nInserts a key-value pair into the map.\nAdds a value to the set.\nInserts an element at <code>index</code> within the deque, shifting all …\nVisits the elements representing the intersection, i.e., …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator, that is, one that moves each …\nGets an owning iterator over the entries of the map, …\nGets an iterator for moving out the <code>BTreeSet</code>’s contents …\nConsumes the list into an iterator yielding elements by …\nConsumes the deque into a front-to-back iterator yielding …\nReturns an iterator which retrieves elements in heap order.\nCreates a consuming iterator visiting all the keys, in …\nConsumes the <code>BinaryHeap</code> and returns a vector in sorted …\nCreates a consuming iterator visiting all the values, in …\nConsumes the <code>BinaryHeap</code> and returns the underlying vector …\nReturns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …\nChecks if the binary heap is empty.\nReturns <code>true</code> if the map contains no elements.\nReturns <code>true</code> if the set contains no elements.\nReturns <code>true</code> if the <code>LinkedList</code> is empty.\nReturns <code>true</code> if the deque is empty.\nReturns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…\nReturns <code>true</code> if the set is a superset of another, i.e., …\nReturns an iterator visiting all values in the underlying …\nGets an iterator over the entries of the map, sorted by …\nGets an iterator that visits the elements in the <code>BTreeSet</code> …\nProvides a forward iterator.\nReturns a front-to-back iterator.\nGets a mutable iterator over the entries of the map, …\nProvides a forward iterator with mutable references.\nReturns a front-to-back iterator that returns mutable …\nGets an iterator over the keys of the map, in sorted order.\nDetails about the allocation that caused the error\nReturns a reference to the last element in the set, if any.\nReturns the last entry in the map for in-place …\nReturns the last key-value pair in the map. The key in …\nReturns the length of the binary heap.\nReturns the number of elements in the map.\nReturns the number of elements in the set.\nReturns the length of the <code>LinkedList</code>.\nReturns the number of elements in the deque.\nA doubly-linked list with owned nodes.\nReturns a <code>Cursor</code> pointing at the gap before the smallest …\nReturns a <code>CursorMut</code> pointing at the gap before the …\nRearranges the internal storage of this deque so it is one …\nCreates an empty <code>BinaryHeap</code> as a max-heap.\nMakes a new, empty <code>BTreeMap</code>.\nMakes a new, empty <code>BTreeSet</code>.\nCreates an empty <code>LinkedList</code>.\nCreates an empty deque.\nCreates an empty <code>BinaryHeap</code> as a max-heap, using <code>A</code> as …\nMakes a new empty BTreeMap with a reasonable choice for B.\nMakes a new <code>BTreeSet</code> with a reasonable choice of B.\nConstructs an empty <code>LinkedList&lt;T, A&gt;</code>.\nCreates an empty deque.\nReturns the index of the partition point according to the …\nReturns the greatest item in the binary heap, or <code>None</code> if …\nReturns a mutable reference to the greatest item in the …\nRemoves the greatest item from the binary heap and returns …\nRemoves the last element from a list and returns it, or …\nRemoves the last element from the deque and returns it, or …\nRemoves and returns the first element in the map. The key …\nRemoves the first element from the set and returns it, if …\nRemoves the first element and returns it, or <code>None</code> if the …\nRemoves the first element and returns it, or <code>None</code> if the …\nRemoves and returns the last element in the map. The key …\nRemoves the last element from the set and returns it, if …\nPushes an item onto the binary heap.\nAppends an element to the back of a list.\nAppends an element to the back of the deque.\nAdds an element first in the list.\nPrepends an element to the deque.\nConstructs a double-ended iterator over a sub-range of …\nConstructs a double-ended iterator over a sub-range of …\nCreates an iterator that covers the specified range in the …\nConstructs a mutable double-ended iterator over a …\nCreates an iterator that covers the specified mutable …\nFill <code>buf</code> with the contents of the “front” slice as …\nRemoves a key from the map, returning the value at the key …\nIf the set contains an element equal to the value, removes …\nRemoves the element at the given index and returns it.\nRemoves and returns the element at <code>index</code> from the deque. …\nRemoves a key from the map, returning the stored key and …\nAdds a value to the set, replacing the existing element, …\nReserves capacity for at least <code>additional</code> elements more …\nReserves capacity for at least <code>additional</code> more elements to …\nReserves the minimum capacity for at least <code>additional</code> …\nReserves the minimum capacity for at least <code>additional</code> more …\nModifies the deque in-place so that <code>len()</code> is equal to …\nModifies the deque in-place so that <code>len()</code> is equal to …\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRotates the double-ended queue <code>n</code> places to the left.\nRotates the double-ended queue <code>n</code> places to the right.\nDiscards capacity with a lower bound.\nShrinks the capacity of the deque with a lower bound.\nDiscards as much additional capacity as possible.\nShrinks the capacity of the deque as much as possible.\nSplits the collection into two at the given key. Returns …\nSplits the collection into two at the value. Returns a new …\nSplits the list into two at the given index. Returns …\nSplits the deque into two at the given index.\nReturns the difference of <code>self</code> and <code>rhs</code> as a new <code>BTreeSet&lt;T&gt;</code>…\nSwaps elements at indices <code>i</code> and <code>j</code>.\nRemoves an element from anywhere in the deque and returns …\nRemoves an element from anywhere in the deque and returns …\nVisits the elements representing the symmetric difference, …\nRemoves and returns the element in the set, if any, that …\nShortens the deque, keeping the first <code>len</code> elements and …\nTries to insert a key-value pair into the map, and returns …\nTries to reserve capacity for at least <code>additional</code> elements …\nTries to reserve capacity for at least <code>additional</code> more …\nTries to reserve the minimum capacity for at least …\nTries to reserve the minimum capacity for at least …\nCreates an empty deque with space for at least <code>capacity</code> …\nVisits the elements representing the union, i.e., all the …\nReturns a <code>Cursor</code> pointing at the gap after the greatest key\nReturns a <code>CursorMut</code> pointing at the gap after the greatest …\nGets an iterator over the values of the map, in order by …\nGets a mutable iterator over the values of the map, in …\nA double-ended queue (deque) implemented with a growable …\nCreates an empty <code>BinaryHeap</code> with at least the specified …\nCreates an empty deque with space for at least <code>capacity</code> …\nCreates an empty <code>BinaryHeap</code> with at least the specified …\nCreates an empty deque with space for at least <code>capacity</code> …\nThe layout of allocation request that failed\nA priority queue implemented with a binary heap.\nA draining iterator over the elements of a <code>BinaryHeap</code>.\nA draining iterator over the elements of a <code>BinaryHeap</code>.\nAn owning iterator over the elements of a <code>BinaryHeap</code>.\nAn iterator over the elements of a <code>BinaryHeap</code>.\nStructure wrapping a mutable reference to the greatest …\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nCreates an empty <code>binary_heap::IntoIter</code>.\nRemoves heap elements in heap order.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nRemoves the peeked value from the heap and returns it.\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nAn ordered map based on a B-Tree.\nA cursor over a <code>BTreeMap</code>.\nA cursor over a <code>BTreeMap</code> with editing operations.\nA cursor over a <code>BTreeMap</code> with editing operations, and …\nA view into a single entry in a map, which may either be …\nAn iterator produced by calling <code>extract_if</code> on BTreeMap.\nAn owning iterator over the entries of a <code>BTreeMap</code>, sorted …\nAn owning iterator over the keys of a <code>BTreeMap</code>.\nAn owning iterator over the values of a <code>BTreeMap</code>.\nAn iterator over the entries of a <code>BTreeMap</code>.\nA mutable iterator over the entries of a <code>BTreeMap</code>.\nAn iterator over the keys of a <code>BTreeMap</code>.\nAn occupied entry.\nA view into an occupied entry in a <code>BTreeMap</code>. It is part of …\nThe error returned by <code>try_insert</code> when the key already …\nAn iterator over a sub-range of entries in a <code>BTreeMap</code>.\nA mutable iterator over a sub-range of entries in a …\nError type returned by <code>CursorMut::insert_before</code> and …\nA vacant entry.\nA view into a vacant entry in a <code>BTreeMap</code>. It is part of …\nAn iterator over the values of a <code>BTreeMap</code>.\nA mutable iterator over the values of a <code>BTreeMap</code>.\nProvides in-place mutable access to an occupied entry …\nReturns a read-only cursor pointing to the same location …\nReturns a read-only cursor pointing to the same location …\nCreates an empty <code>btree_map::Iter</code>.\nCreates an empty <code>btree_map::IterMut</code>.\nCreates an empty <code>btree_map::IntoIter</code>.\nCreates an empty <code>btree_map::Keys</code>.\nCreates an empty <code>btree_map::Values</code>.\nCreates an empty <code>btree_map::IntoKeys</code>.\nCreates an empty <code>btree_map::IntoValues</code>.\nCreates an empty <code>btree_map::Range</code>.\nThe entry in the map that was already occupied.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to the value in the entry.\nGets a mutable reference to the value in the entry.\nSets the value of the entry with the <code>VacantEntry</code>’s key, …\nSets the value of the entry with the <code>OccupiedEntry</code>’s key,\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nTake ownership of the key.\nConverts the entry into a mutable reference to its value.\nReturns a reference to this entry’s key.\nGets a reference to the key that would be used when …\nGets a reference to the key in the entry.\nAdvances the cursor to the next gap, returning the key and …\nAdvances the cursor to the next gap, returning the key and …\nAdvances the cursor to the next gap, returning the key and …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting, if empty, …\nReturns a reference to the key and value of the next …\nReturns a reference to the key and value of the next …\nReturns a reference to the key and value of the next …\nReturns a reference to the key and value of the previous …\nReturns a reference to the key and value of the previous …\nReturns a reference to the key and value of the previous …\nAdvances the cursor to the previous gap, returning the key …\nAdvances the cursor to the previous gap, returning the key …\nAdvances the cursor to the previous gap, returning the key …\nTakes the value of the entry out of the map, and returns …\nTake ownership of the key and value from the map.\nRemoves the next element from the <code>BTreeMap</code>.\nRemoves the next element from the <code>BTreeMap</code>.\nRemoves the precending element from the <code>BTreeMap</code>.\nRemoves the precending element from the <code>BTreeMap</code>.\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nThe value which was not inserted, because the entry was …\nConverts the cursor into a <code>CursorMutKey</code>, which allows …\nAn ordered set based on a B-Tree.\nA lazy iterator producing elements in the difference of …\nAn iterator produced by calling <code>extract_if</code> on BTreeSet.\nA lazy iterator producing elements in the intersection of …\nAn owning iterator over the items of a <code>BTreeSet</code> in …\nAn iterator over the items of a <code>BTreeSet</code>.\nAn iterator over a sub-range of items in a <code>BTreeSet</code>.\nA lazy iterator producing elements in the symmetric …\nA lazy iterator producing elements in the union of <code>BTreeSet</code>…\nCreates an empty <code>btree_set::Iter</code>.\nCreates an empty <code>btree_set::IntoIter</code>.\nCreates an empty <code>btree_set::Range</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nA cursor over a <code>LinkedList</code>.\nA cursor over a <code>LinkedList</code> with editing operations.\nAn iterator produced by calling <code>extract_if</code> on LinkedList.\nAn owning iterator over the elements of a <code>LinkedList</code>.\nAn iterator over the elements of a <code>LinkedList</code>.\nA mutable iterator over the elements of a <code>LinkedList</code>.\nA doubly-linked list with owned nodes.\nReturns a read-only cursor pointing to the current element.\nProvides a reference to the cursor’s parent list.\nProvides a read-only reference to the cursor’s parent …\nProvides a reference to the back element of the cursor’s …\nProvides a reference to the back element of the cursor’s …\nProvides a mutable reference to back element of the cursor…\nReturns a reference to the element that the cursor is …\nReturns a reference to the element that the cursor is …\nCreates an empty <code>linked_list::Iter</code>.\nCreates an empty <code>linked_list::IntoIter</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nProvides a reference to the front element of the cursor’…")