searchState.loadedDescShard("jumpy", 5, "Returns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns the number of frames in the <code>StaticSoundData</code>.\nThe offset of the first tile from the top-left of the …\nTransforms the <code>Maybe&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping <code>Set(v)</code>…\nTransforms the <code>Maybe&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping <code>Set(v)</code>…\nSet a different border to use when the mouse is clicking …\nSet a different border to use when focusing / hovering …\nMatchmaking\nConvert this <code>Maybe</code> into an <code>Option</code>.\nReturns the option if it contains a value, otherwise …\nReturns the option if it contains a value, otherwise calls …\nCreates a left-handed orthographic projection matrix with …\nCreates a left-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nSets the destination that this sound should be routed to.\nThe ID of the pack, or <code>None</code> if it refers to the core pack.\nThe pack_dir of the pack that the asset is in.\nThe pack_dir of the pack that the asset is in.\nThe unique ID of the asset pack this asset is located in.\nThe directory of the pack that\nMaps the directory names of asset packs to their …\nThe metadata of the pack that could not be loaded.\nThe asset pack this was loaded from, or <code>None</code> if it is from …\nRead the loaded asset packs.\nExtra asset packs. The key is the the name of the asset …\nThe asset packs that have been loaded.\nThe directory to load the asset packs from.\nSet the padding. This will be applied on the inside of the …\nSet the padding. This will be applied on the inside of the …\nThe amount of padding between tiles.\nThe amount of space to pad around the internal edges of …\nPaint the frame into the given rect.\nSets the panning of the sound, where 0 is hard left and 1 …\nCreate <code>Version</code> by parsing from string representation.\nPartial comparison for two <code>Arc</code>s.\nPartially shuffles a slice by a given amount and returns …\nThe path to the asset in it’s pack.\nThe path to the asset in it’s pack.\nThe path to the asset, relative to the root of the asset …\nMaps the asset <code>AssetLoc</code> to it’s handle.\nStops the clock, preventing it from advancing until …\nPauses the stopwatch. Any call to <code>tick</code> while paused will …\nPauses the Timer. Disables the ticking of the timer.\nReturns <code>true</code> if the stopwatch is paused.\nReturns <code>true</code> if the timer is paused.\nReturns the percentage of the timer elapsed time (goes …\nReturns the percentage of the timer remaining time (goes …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nCreates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite reverse right-handed perspective …\nCreates an infinite reverse right-handed perspective …\nCreates an infinite right-handed perspective projection …\nCreates an infinite right-handed perspective projection …\nCreates a left-handed perspective projection matrix with …\nCreates a left-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with […\nCreates a right-handed perspective projection matrix with […\nConstructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…\nConstructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator. …\nPlays music, forcibly stopping any current music. Volume …\nPlays music with advanced settings. Volume is scaled by …\nPlays music with custom StaticSoundSettings. Volume is …\nPlay a sound. These are usually short audios that indicate …\nSets the playback rate of the sound.\nGetter for a single player’s network stats using their …\nGetter for the number of players, if offline defaults to 0.\nGetter for the number of players, if offline defaults to …\nGetter for all players’ network stats, including local …\nThe list of points in the path\nGet the position of the tile at the given index.\nThe physical position to render this viewport to within …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nGet the precomputed hash for this string\nGet the prefix of the ID.\nGet whether or not the button is pressed.\nThe priority of this session relative to other sessions in …\nCameras with a higher priority will be rendered on top of …\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nTransforms the given 3D vector as a point, applying …\nTransforms the given 3D vector as a point, applying …\nSerializable data types for network messages used by the …\nThe pointer to load.\nReturns <code>true</code> if the two <code>Arc</code>s point to the same allocation …\nPush an audio event to the queue for later processing.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nThe number of enabled bits in the input bitset.\nThe number of enabled bits in the input bitset.\nThe system queue that will be run at the end of the stage\nThe event queue.\nGet red in sRGB colorspace.\nGlobal, deterministic RNG generation resource.\nGets the random section of this ulid\nGetter for the random seed.\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nRegister the default assets from <code>bones_framework</code>.\nRegister this schema with the global schema registry.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the remaining time using Duration\nReturns the remaining time in seconds\nGetter for remote player network stats (filtering out …\nRemove the component data for the entity if it exists.\nRemove the resource data, returning what was stored in it.\nRemoves the component of <code>Entity</code>. Returns <code>Some(T)</code> if the …\nRemove a resource from the store, if it is present.\nRemove the resource from the cell, leaving the cell empty.\nRemove data for a type from the storage.\nRemove all systems from this stage.\nRemove all systems from all stages, including startup and …\nRemove an animation from the bank\nRemove the component data for the entity if it exists.\nIf there is a previous value, <code>true</code> will be returned.\nWhether or not to repeat the animation\nReplaces the wrapped value with a new one, returning the …\nReplaces the actual value in the option by the value given …\nReplaces the wrapped value with a new one computed from f, …\nA queue to hold all the gamepad rumble requests to be …\nResets the stopwatch. The reset doesn’t affect the …\nResets the timer. The reset doesn’t affect the <code>paused</code> …\nProvides an interface for resetting various internal parts …\nProvides an interface for resetting entities, and …\nRemove all systems from all stages, including startup and …\nBorrow a resource from the world.\nBorrow a resource from the world.\nStores the world resources.\nRestart Session Runner. This should reset accumulated …\nRestore the world state.\nSets whether the sound should be played in reverse.\nList of assets that depend on the given assets.\nNew <code>Color</code> from sRGB colorspace.\nNew <code>Color</code> from sRGB colorspace.\nNew <code>Color</code> from sRGB colorspace.\nNew <code>Color</code> from sRGB colorspace.\nCreate an <code>egui::RichText</code> that can be passed to <code>ui.label()</code>.\nThe runtime ID of the handle\nThe right margin.\nGet the core asset pack’s root asset.\nThe root asset for the asset pack.\nThe path to the root asset for the pack.\nThe path to the root asset for the pack.\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nHow often to rotate log file.\nThe rotation of the entity.\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nThe number of rows in the atlas.\nExecute the systems on the given <code>world</code>.\nRun the system.\nExecute the systems on the given <code>world</code>.\nThis is run every time the system is executed\nRun a lua script as a system on the given world.\nRun a system once.\nThe session runner to use for this session.\nSamples a random item from a slice of values.\nSamples a random item from an iterator of values. <code>O(1)</code> if …\nSamples multiple unique items from a slice of values.\nSamples multiple unique items from an iterator of values.\nSamples multiple unique items from a mutable slice of …\nSamples a random <code>&amp;mut</code> item from a slice of values.\nThe sample rate of the audio (in Hz).\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, …\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nThe internal duration between this point and another.\nWrite the entire collection of objects to storage, …\nSave the data to the storage backend.\nThe scale of the entity.\nThe scale to render the border image at.\nCustom scale for the UI.\nThe scan code of the pressed key.\nGet this type’s <code>Schema</code>.\nGet the schema of the components stored.\nGet the schema of the resource.\nThe schema of the asset being loaded.\nThe schema of this variant.\nThe schema of the field.\nSchemas provided in the asset pack.\nThe registered schemas.\nThe paths to schema definitions to be loaded from this …\nThe paths to schema definitions to be loaded from this …\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nSend a camera trauma event.\nBy default, buttons senses clicks. Change this to a …\nSerialize this value into the given Serde serializer.\nThe asset server.\nThe sessions that make up the game.\nSet an entity on the the bitset.\nSet the tile at the given position, to a certain entity.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSet alpha.\nSet blue in sRGB colorspace.\nSet the current animation if it exists inside of <code>animations</code>…\nSets the duration of the timer.\nSets the volume scale for effects within the range of 0.0 …\nSets the elapsed time of the stopwatch.\nSets the elapsed time of the timer without any other …\nSet green in sRGB colorspace.\nSet the game version config, used when making sure asset …\nSet the <code>AssetIo</code> implementation.\nSets the volume scale for main audio within the range of …\nSets the mode of the timer.\nSets the duration for music fade out.\nSets the volume scale for music within the range of 0.0 to …\nSet red in sRGB colorspace.\nSets rumble on a specific gamepad, replacing any existing …\nSets rumble on all enabled gamepads, replacing any …\nSet the session runner for this session.\nSets the duration for audio fade out.\nSet a global runtime state from the EGUI context.\nSet the intensity of the strong motor, clamping it between …\nSets the volume scales for main, music, and effects within …\nSet the intensity of the weak motor, clamping it between …\nSettings for the sound.\nSetup the global tracing subscriber, add hook for tracing …\nHelper to call <code>setup_logging</code> conciseably with reasonable …\n<code>setup_logs</code> is a macro for initializing logging in bones.\nGet the shared resource of a given type out of this <code>Game</code>s …\nGet the shared resource cell of a given type out of this …\nGet the shared resource of a given type out of this <code>Game</code>s …\nCollection of resources that will have a shared instance …\nRender the button\nRender the frame\nShuffles a slice randomly in O(n) time.\nShuffle an SVec in place\nShuffle a Vec in place\nShuffle a VecDeque in place\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nSystems that are continously run until they succeed(return …\nGet a single entity and components in the given query if …\nGet a reference to the lua singletons.\nGet the size in pixels of the entire atlas image.\nThe logical size of the window’s client area.\nThe height of the camera in in-game pixels.\nThe physical size of the viewport rectangle to render to …\nThe font size.\nPerforms a spherical linear interpolation between <code>self</code> and …\nPerforms a spherical linear interpolation between <code>self</code> and …\nMakes a new <code>Ref</code> for a sub-slice of the borrowed slice.\nMakes a new <code>RefMut</code> for a sub-slice of the borrowed slice.\nSets the portion of the audio this <code>StaticSoundData</code> …\nThe portion of the sound this <code>StaticSoundData</code> represents.\nSnapshot the world state.\nGetter for socket.\nMutable getter for socket.\nList of sorted session keys.\nReturns the duration for audio fade out.\nThe lua source for the script.\nThe lua source of the script.\nUtility function that spawns the camera in a default …\nThe speed that the screen is shook.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nSprite session plugin.\nThe system stages.\nThe stages in the collection, in the order that they will …\nSets where in the sound playback should start.\nSets when the sound should start playing.\nStartup systems. The bool indicates whether the system has …\nThe systems that should run at startup.\nWhether the button was pressed or released.\nStep the simulation once.\nStep the game simulation.\nStops rumble on a specific gamepad.\nStops rumble on all enabled gamepads.\nStops all currently playing sounds.\nStops the currently playing music\nThe asset store.\nGets the number of strong (<code>Arc</code>) pointers to this …\nGet the intensity of the strong motor.\nSubtracts the <code>rhs</code> quaternion from <code>self</code>.\nSubtracts the <code>rhs</code> quaternion from <code>self</code>.\nPanics\nPanics\nSubtracts two 2x2 matrices.\nSubtracts two 2x2 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 4x4 matrices.\nSubtracts two 4x4 matrices.\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in …\nSwaps the wrapped value of self with the wrapped value of …\nTraits adding swizzle methods to all vector types.\nConvert into a <code>System</code>.\nThe collection of systems that are associated to the game …\nThe lua closures, registered by the script, to run in …\nThe list of systems in the stage.\nThe layout of the enum tag.\nTakes the wrapped value, leaving <code>Default::default()</code> in its …\nTakes the value out of the option, leaving an <code>Unset</code> in its …\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nCreate a button with the given theme.\nThe thickness of the line.\nAdvance the stopwatch by <code>delta</code> seconds. If the stopwatch …\nAdvance the timer by <code>delta</code> seconds. Non repeating timer …\nMap tile indices to extra collision metadata. This is …\nGet the position in pixels of the top-left corner of the …\nThe size of each tile in the atlas.\nThe size of each tile in the layer.\nThe vector of tile slots in this layer.\nThe amount of time the current frame has been playing\nReturns the number of times a repeating timer finished …\nGets the timestamp section of this ulid\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\nReturns the rotation axis (normalized) and angle (in …\nReturns the rotation axis (normalized) and angle (in …\nReturns the bytes of the Ulid in big-endian order.\nCreates a <code>[f32; 6]</code> array storing data in column major …\nCreates a <code>[f32; 12]</code> array storing data in column major …\nCreates a <code>[f32; 9]</code> array storing data in column major …\nCreates a <code>[f32; 4]</code> array storing data in column major …\nCreates a <code>[f32; 9]</code> array storing data in column major …\nCreates a <code>[f32; 16]</code> array storing data in column major …\nCreates a <code>[f64; 6]</code> array storing data in column major …\nCreates a <code>[f64; 12]</code> array storing data in column major …\nCreates a <code>[f64; 4]</code> array storing data in column major …\nCreates a <code>[f64; 9]</code> array storing data in column major …\nCreates a <code>[f64; 16]</code> array storing data in column major …\nCreates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …\nCreates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …\nCreates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …\nCreates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …\nCreates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …\nCreates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …\nCreates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …\nCreates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …\nReturns the rotation angles for the given euler rotation …\nReturns the rotation angles for the given euler rotation …\nGet the number of assets that must be loaded.\nGet an owned String copy of this string.\nClone data to an owned <code>AssetLoc</code>.\nExtracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nReturns the rotation axis scaled by the rotation in …\nReturns the rotation axis scaled by the rotation in …\nCreates a Crockford Base32 encoded string that represents …\nCreates a Crockford Base32 encoded string that represents …\nThe top margin.\nCalculates the total kilobits per second sent across all …\nConstructs an event at the trace level.\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 2D vector as a point.\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D vector as a point.\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D vector as a point.\nTransforms the given <code>Vec3A</code>, applying shear, scale, …\nTransforms the given <code>Vec3A</code> as 3D point.\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nRotates the given 2D vector.\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the give 3D vector as a direction.\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the give 3D vector as a direction.\nTransforms the given <code>Vec3A</code>, applying shear, scale and …\nTransforms the give <code>Vec3A</code> as 3D vector.\nThe position of the entity in the world.\nTransposes a <code>Ref</code> of an <code>Option</code> into an <code>Option</code> of a <code>Ref</code>. …\nTransposes a <code>RefMut</code> of an <code>Option</code> into an <code>Option</code> of a <code>RefMut</code>…\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nValue from 0-1 that indicates the intensity of the shake. …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nImmutably borrows the wrapped value, returning <code>None</code> if the …\nMutably borrows the wrapped value, returning an error if …\nImmutably borrows the wrapped value, returning <code>None</code> if the …\nMutably borrows the wrapped value, returning <code>None</code> if the …\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nThe checked version of <code>from_secs_f32</code>.\nThe checked version of <code>from_secs_f64</code>.\nGet a reference to the component storage for the given …\nBorrow a loaded asset.\nTry to get handle of loaded asset from content id <code>Cid</code>.\nGet mutable references s to the component data for …\nGet a mutable reference to the component storage for the …\nBorrow a loaded asset.\nTry to get untyped handle of loaded asset from content id …\nBorrow a loaded asset.\nInsert component data for the given entity and get the …\nInsert component data for the given entity and get the …\nConstructs a new <code>Arc&lt;T&gt;</code>, returning an error if allocation …\nConstructs a new <code>Arc&lt;T, A&gt;</code> in the provided allocator, …\nConstructs a new <code>Arc</code> with uninitialized contents, …\nConstructs a new <code>Arc</code> with uninitialized contents, in the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nConstructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>, return an error if …\nConstructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator, …\nRemove the component data for the entity if it exists.\nReturns the inner value, if the <code>Arc</code> has exactly one strong …\nContainer for storing <code>Schema</code> type datas.\nThe Rust <code>TypeId</code> that this <code>Schema</code> was created from, if it …\nReturns the type name of this value’s type.\nReturns the UUID associated with this value’s type.\nCreate a typed <code>Handle&lt;T&gt;</code> from this <code>UntypedHandle</code>.\nReturns a random <code>u128</code> within a given range bound.\nReturns a random <code>u16</code> value.\n<code>u32</code> vector types.\nReturns a random <code>u32</code> value.\n<code>u64</code> vector types.\nReturns a random <code>u64</code> value.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nReturns a random <code>u8</code> value.\nThe Bones Framework UI plugin.\nGet the <code>Ulid</code> of the ID.\nUndo the effect of leaked guards on the borrow state of …\nThe unit the mouse scroll is in.\nHints to the compiler that the branch condition is …\nResumes the clock if paused.\nUnpauses the stopwatch. Resume the effect of ticking on …\nUnpauses the Timer. Resumes the ticking of the timer.\nConvert the handle to an <code>UntypedHandle</code>.\nBorrow the underlying <code>UntypedResources</code> store.\nGet the core asset pack’s root asset as a type-erased …\nReturns the contained <code>Set</code> value, consuming the <code>self</code> value.\nUnwrap all the items in an array.\nReturns the contained <code>Set</code> value or a provided default.\nIf we have the only reference to <code>T</code> then unwrap it. …\nReturns the contained <code>Set</code> value or a default.\nReturns the contained <code>Set</code> value or computes it from a …\nReturns the contained <code>Set</code> value, consuming the <code>self</code> value, …\nUpdates the internal time measurements.\nUpdate the CID by combining it’s current data with the …\nSystem for updating <code>AnimatedSprite</code>s based on thier …\nUpdate control state from input collector.\nUpdate which buttons have been “just pressed”, when …\nUpdates time with a specified <code>Instant</code>.\nGenerates a random <code>char</code> in the range A-Z.\nReturns a random <code>usize</code> within a given range bound.\nCreate a new Ustr from the given &amp;str.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nThe field’s value.\nThe field’s value.\nThe value of the button, for example, this will be <code>1.0</code> …\nThe value of the axis.\nInfo for the enum variants.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nThe version number of the asset pack.\nThe version of the asset pack.\nThe version of the asset pack.\nThe version of the asset pack.\nAn optional viewport override, allowing you to specify …\nWhether or not this session should be rendered.\nWhether or not this session should be visible.\nSets the volume of the sound.\nConstructs an event at the warn level.\nSubscribe to asset changes.\nTell the asset backend to watch for changes and trigger …\nFilesystem watcher if enabled.\nGets the number of <code>Weak</code> pointers to this allocation.\nGet the intensity of the weak motor.\nStochastic Acceptance implementation of Roulette Wheel …\nStochastic Acceptance implementation of Roulette Wheel …\nThe mouse wheel event sent this frame.\nEgui widgets.\nCreate a new storage resource with the given backend …\nWraps external reference into <code>Ref</code>. And associates it with …\nWraps external reference into <code>RefMut</code>. And associates it …\nClone the font and set a new color.\nWrap the error value with additional context that is …\nCreate a <code>SystemStages</code> collection, initialized with a stage …\nCreate a new world that uses the provided entities …\nReturns a cheap clone of the <code>StaticSoundData</code> with the …\nCreates a new Ulid using data from the given random number …\nCreate a new <code>CameraShake</code> component with the provided …\nThe ECS world for the core.\nIf <code>true</code>, the text will wrap to stay within the max width …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nWrites the columns of <code>self</code> to the first 6 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 12 elements in …\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 4 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 16 elements in …\nWrites the columns of <code>self</code> to the first 6 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 12 elements in …\nWrites the columns of <code>self</code> to the first 4 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 16 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the quaternion to an unaligned slice.\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the quaternion to an unaligned slice.\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nReturns <code>Set</code> if exactly one of <code>self</code>, <code>optb</code> is <code>Set</code>, otherwise …\nReturns the vector part of the quaternion.\nReturns the vector part of the quaternion.\nZips <code>self</code> with another <code>Maybe</code>.\nThe <code>extension</code> is the portion of the extension that comes …\nThe list of file extensions to load this asset from.\nThe loader implementation for the asset.\nThe effects volume scale factor.\nWhether to fade out the sounds or stop them instantly.\nWhether to fade out the sounds or stop them instantly.\nWhether to force restart the music even if it’s the same …\nThe main volume scale factor.\nThe music volume scale factor.\nThe settings for the music.\nThe handle for the music.\nThe handle to the sound to play.\nThe volume to play the sound at.\nAlpha channel. [0.0, 1.0]\nBlue channel. [0.0, 1.0]\nGreen channel. [0.0, 1.0]\nRed channel. [0.0, 1.0]\nThe duration of the rumble in seconds.\nThe duration of the rumble in seconds.\nThe ID of the gamepad to rumble.\nThe ID of the gamepad to rumble.\nThe ID of the gamepad to stop rumbling.\nThe intensity of the rumble.\nThe intensity of the rumble.\nThe alignment of the data.\nThe size of the data.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe schema of the key type.\nThe schema of the value type.\nCurrent frame of simulation step\nCurrent frame of simulation step\nList of disconnected players (their idx)\nLast confirmed frame by all clients. Anything that …\nThe local input delay set for this session\nThe local player’s index\nNetworking stats for each connected player, stored at the …\nThe random seed for this session\nThe random seed for this session\nSocket\nIterator of a chain of source errors.\nProvides the <code>context</code> method for <code>Result</code>.\nContains the error value\nThe <code>Error</code> type, a wrapper around a dynamic error type.\nEquivalent to Ok::&lt;_, anyhow::Error&gt;(value).\nContains the success value\n<code>Result&lt;T, Error&gt;</code>\nConstruct an ad-hoc error from a string or existing non-…\nGet the backtrace for this Error.\nReturn early with an error.\nAn iterator of the chain of source errors contained by …\nWrap the error value with additional context.\nWrap the error value with additional context.\nAttempt to downcast the error object to a concrete type.\nDowncast this error object by mutable reference.\nDowncast this error object by reference.\nReturn early with an error if a condition is not satisfied.\nConstruct an ad-hoc error from a string or existing non-…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nReturns true if <code>E</code> is the type held by this error object.\nCreate a new error object from a printable error message.\nCreate a new error object from any error type.\nThe lowest level cause of this error — this error’s …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nWrap the error value with additional context that is …\nA resource that can be used to control game audios.\nAn audio event that may be sent to the <code>AudioCenter</code> …\nPlay some music.\nPlay a sound.\nStop all currently playing sounds.\nStop the currently playing music.\nUpdate the volume of all audios using the new scale values.\nInternally used sytem for killing finished audios …\nInternally used sytem for processing audio events in the …\nThe effects volume scale factor.\nWhether to fade out the sounds or stop them instantly.\nWhether to fade out the sounds or stop them instantly.\nWhether to force restart the music even if it’s the same …\nThe main volume scale factor.\nThe music volume scale factor.\nThe settings for the music.\nThe handle for the music.\nThe handle to the sound to play.\nThe volume to play the sound at.\nThe audio file asset loader.\nThe audio manager resource which can be used to play …\nThe audio source asset type, contains no data, but …\nThis is a working Cpal backend.\nKira audio backend that will fall back to a dummy backend …\nThis is a dummy backend since Cpal didn’t work.\nAn asset ref.\nA reference to an asset in an <code>EcsRef</code>\nA component ref.\nA component borrow into an <code>EcsRef</code>.\nA mutable component borrow into an <code>EcsRef</code>.\nA reference to component in an <code>EcsRef</code>.\nA reference to an ECS-compatible value.\nA borrow of an <code>EcsRef</code>.\nAn error that occurs when borrowing an <code>EcsRef</code>.\nA kind of borrow into an <code>EcsRef</code>.\nA mutable borrow of an <code>EcsRef</code>.\nA kind of mutable borrow of an <code>EcsRef</code>.\nThe kind of value reference for <code>EcsRef</code>.\nA free-standing ref, not stored in the ECS.\nA resource ref.\nA type data that can be used to specify a custom metatable …\nBorrow the value pointed to by the <code>EcsRef</code>\nImmutably borrow the data.\nMutably borrow the value pointed to by the <code>EcsRef</code>\nMutably borrow the data.\nThe kind of reference.\nThe entity to get the component data for.\nGenerate the environment table for executing scripts under.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe kind of asset we are referencing.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into a lua value.\nGet the function that may be used to retrieve the …\nThe path to the desired field.\nRegisters lua binding typedatas for bones_framework types.\nGet the <code>SchemaRef</code>.\nGet the borrow as a <code>SchemaRef</code>.\nGet the <code>SchemaRef</code>.\nGet the borrow as a <code>SchemaRefMut</code>.\nThe asset server handle.\nThe component store.\nAn asset ref.\nA reference to an asset in an <code>EcsRef</code>\nA component ref.\nA component borrow into an <code>EcsRef</code>.\nA mutable component borrow into an <code>EcsRef</code>.\nA reference to component in an <code>EcsRef</code>.\nA reference to an ECS-compatible value.\nA borrow of an <code>EcsRef</code>.\nAn error that occurs when borrowing an <code>EcsRef</code>.\nA kind of borrow into an <code>EcsRef</code>.\nA mutable borrow of an <code>EcsRef</code>.\nA kind of mutable borrow of an <code>EcsRef</code>.\nThe kind of value reference for <code>EcsRef</code>.\nA free-standing ref, not stored in the ECS.\nA resource ref.\nA type data that can be used to specify a custom metatable …\nThe kind of reference.\nThe entity to get the component data for.\nThe kind of asset we are referencing.\nThe path to the desired field.\nThe asset server handle.\nThe component store.\nA boolean.\nThe represents a <code>SchemaBox</code> with given type inside.\nType represents an enum, which in the C layout is called a …\nSchema data for an enum.\nA type for an enum tag for <code>EnumSchemaInfo</code>.\n<code>f32</code>\n<code>f64</code>\nTrait implemented for types that can produce an instance …\nTrait implemented for types that have a <code>Schema</code>.\nDerive macro for the HasSchema trait.\n<code>i128</code>\n<code>i16</code>\n<code>i32</code>\n<code>i64</code>\n<code>i8</code>\nType represents a <code>SchemaMap</code>.\nOpaque data that cannot described by a schema.\nA type of primitive.\nThe type represents a primitive value.\nSchema information describing the memory layout of a type.\nA schema describes the data layout of a type, to enable …\nLayout information computed for <code>SchemaData</code>.\nA Rust <code>String</code>. Must be manipulated with Rust string …\nThe type represents a struct.\nA field in a <code>StructSchemaInfo</code>.\nSchema data for a struct.\n<code>u128</code>\nA <code>u16</code>.\n<code>u16</code>\nA <code>u32</code>.\n<code>u32</code>\n<code>u64</code>\nA <code>u8</code>.\n<code>u8</code>\nA wrapper struct that marks it unsafe to both create and …\nInformation about an enum variant for <code>EnumSchemaInfo</code>.\nType represents a <code>SchemaVec</code>, where each item in the vec …\nAllocation and collection utilities.\nGet the enum, if this is a enum.\nGet the primitive, if this is a primitive.\nConverts a reference of <code>T</code> to a <code>SchemaRefMut</code>\nConverts a reference of <code>T</code> to a <code>SchemaRef</code>\nGet the struct, if this is a struct.\nGet the schema of the items in the vector, if this is a …\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nThe function pointer that may be used to clone data with …\nCalculate the layout of the type represented by the schema.\nThe function pointer that may be used to write a default …\nThe function pointer that may be used to drop data with …\nThe function pointer that may be used to compare two …\nIf this is a struct, then the field offsets will contain …\nThe fields in the struct, in the order they are defined.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the data for the type.\nThe full name of the type, including any module specifiers.\nUnsafely get the inner value.\nRecursively checks whether or not the schema contains any …\nThe function pointer that may be used to hash the value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe kind of schema.\nGet the memory layout of the enum tag.\nThe layout of the type.\nThe short name of the type.\nThe name of the enum variant.\nThe name of the field. Will be <code>None</code> if this is a field of …\nCreate a new <code>Unsafe</code> contianing the <code>value</code>.\nThe prelude.\nSchema-aware smart pointers.\nTraits implementing raw function calls for cloning, …\nRegister this schema with the global schema registry.\nGlobal schema registry.\nGet this type’s <code>Schema</code>.\nThe schema of this variant.\nThe schema of the field.\nSerde implementations for <code>Schema</code>.\nThe layout of the enum tag.\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nContainer for storing <code>Schema</code> type datas.\nThe Rust <code>TypeId</code> that this <code>Schema</code> was created from, if it …\nInfo for the enum variants.\nThe alignment of the data.\nThe size of the data.\nThe schema of the key type.\nThe schema of the value type.\nExtension trait for the <code>Layout</code> type that copies useful …\nA low-level memory allocation utility for creating a …\nIterator over items in a <code>ResizableAlloc</code>.\nMutable iterator over items in a <code>ResizableAlloc</code>.\nTyped version of a <code>SchemaMap</code>.\nA typed version of a <code>SchemaVec</code>.\nIterator over <code>SVec</code>.\nIterator over items in an <code>SVec</code>.\nIterator over items in an <code>SVec</code>.\nUntyped schema-aware “HashMap”.\nA type-erased <code>Vec</code>-like collection that for items with the …\nIterator over <code>SchemaVec</code>.\nMutable iterator over <code>SchemaVec</code>.\nError type for <code>TypeDatas</code>\nA <code>TypeMap</code>-like structure, that does not allow removing …\nGet a raw pointer to the allocation.\nGet the capacity of the backing buffer.\nGet the capacity.\nGet the capacity of the vec.\nClears the vector, removing all values.\nClears the vector, removing all values.\nReturns true if the map contains a value for the specified …\nExtends the vector with the contents of an iterator.\nReturns a reference to the first element of the vector, or …\nReturns a mutable reference to the first element of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet an item in the vec.\nGet a reference to an item in the map.\nGet an item from the vec.\nGet a value out of the map for the given key.\nBorrow data from the store, if it exists.\nGet an item in the vec.\nGet a mutable reference to an item in the map.\nGet an item from the vec.\nGet a value out of the map for the given key.\nGet the item with the given index.\nGet an untyped reference to an item in the map.\nBorrow data from the store, if it exists.\nGet an item with the given index.\nGet an untyped reference to an item in the map.\nSafety\nSafety\nGet the hash of this <code>SchemaVec</code>.\nGet the hash of the <code>SVec</code>.\nInsert an entry into the map, returning the previous …\nInsert an item into the map.\nInsert data into the store.\nInsert an untyped item into the map.\nInsert boxed data into the store.\nSafety\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert into an untyped <code>SchemaMap</code>.\nConvert to an untyped <code>SchemaVec</code>.\nConvert into a typed <code>SMap</code>.\nConvert into a typed <code>SVec</code>.\nReturns <code>true</code> if the vector has zero items in it.\nReturns true if the map contains no elements.\nReturns <code>true</code> if there are no items in the vector.\nReturns <code>true</code> if the map is empty.\nIterate over values in the vec\nIterate over entries in the map.\nIterate over the allocation.\nIterate over references to the items in the vec.\nIterate over entries in the map.\nIterate over type datas.\nIterate mutably over values in the vec\nIterate over entries in the map.\nIterate mutably over the allocation.\nIterate over mutable references to the items in the vec.\nIterate over entries in the map.\nGet the schema for the map keys.\nIterate over keys in the map.\nIterate over keys in the map.\nReturns a reference to the last element of the vector, or …\nReturns a mutable reference to the last element of the …\nGet the layout.\nGet the number of items in the vector.\nReturns the number of elements in the map.\nGet the length of the vector.\nGet the number of entries in the map.\nInitialize an empty <code>SchemaVec</code> for items with the given …\nInitialize the <code>SMap</code>.\nCreate a new <code>ResizableAlloc</code> for the given memory layout. …\nCreate a new, empty <code>SVec</code>.\nCreate a new map, with the given key and value schemas.\nto ensure that the following address will satisfy <code>align</code> …\nPop an item off the vec.\nPop an item off of the vector.\nPop the last item off of the end of the vector.\nRemoves and returns the last element of the vector if the …\nPush an item to the vec.\nPush an item onto the vector.\nPush the item into the end of the vector.\nRaw version of the <code>eq()</code> function. Not meant for normal use.\nRaw version of the <code>hash()</code> function. Not meant for normal …\nRemove and return the element at position <code>index</code> within the …\nRemove an item from the map.\nRemove and return the element at position <code>index</code> within the …\nRemove an item.\nUntypededly remove an item.\nSafety\nCreates a layout describing the record for <code>n</code> instances of …\nResize the buffer, re-allocating it’s memory.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate, …\nReverses the order of elements in the vector, in place.\nGet the schema of items in this <code>SchemaVec</code>.\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nShortens the vector, keeping the first <code>len</code> elements and …\nShortens the vector, keeping the first <code>len</code> elements and …\nGet an item in the vec.\nGet a value out of the map for the given key.\nGet an item in the vec.\nGet a value out of the map for the given key.\nGet an untyped reference to an item in the map.\nGet an untyped reference to an item in the map.\nInsert an item into the map.\nInsert an untyped item into the map.\nConvert into a typed <code>SMap</code>.\nTry to convert into a typed <code>SVec</code>.\nPop an item off the vec.\nPush an item to the vec.\nPush the item into the end of the vector.\nRemove an item.\nUntypededly remove an item.\nGet a pointer to the item with the given index without …\nGet the schema for the map values.\nIterate over values in the map.\nIterate over values in the map.\nIterate over values in the map.\nIterate over values in the map.\nCreate a new <code>ResizableAlloc</code> with the given capacity.\nA <code>bool</code>\nA boolean.\nA <code>bool</code>\nThe represents a <code>SchemaBox</code> with given type inside.\nAccess an enum.\nType represents an enum, which in the C layout is called a …\nAccess an enum.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nSchema data for an enum.\nA type for an enum tag for <code>EnumSchemaInfo</code>.\nAn <code>f32</code>\n<code>f32</code>\nAn <code>f32</code>\nAn <code>f64</code>\n<code>f64</code>\nAn <code>f64</code>\nThe index of a field in a struct in a <code>Schema</code>.\nA wrapper type that implements […\nTrait implemented for types that can produce an instance …\nTrait implemented for types that have a <code>Schema</code>.\nDerive macro for the HasSchema trait.\nAn <code>i128</code>\n<code>i128</code>\nAn <code>i128</code>\nAn <code>i16</code>\n<code>i16</code>\nAn <code>i16</code>\nAn <code>i32</code>\n<code>i32</code>\nAn <code>i32</code>\nAn <code>i64</code>\n<code>i64</code>\nAn <code>i64</code>\nAn <code>i8</code>\n<code>i8</code>\nAn <code>i8</code>\nThe index of a field. Works for tuple fields and named …\nAccess a map.\nType represents a <code>SchemaMap</code>.\nAccess a map.\nThe name of a field.\nAn opaque type\nOpaque data that cannot described by a schema.\nAn opaque type\nA type of primitive.\nAccess a struct.\nThe type represents a primitive value.\nAccess a struct.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nA typed version of <code>SchemaBox</code>.\nGlobal <code>SchemaRegistry</code> used to register <code>SchemaData</code>s and …\nTyped version of a <code>SchemaMap</code>.\nA typed version of a <code>SchemaVec</code>.\nA owning, type-erased <code>Box</code>-like container for types with a …\nSchema information describing the memory layout of a type.\nDerivable schema <code>type_data</code> for types that implement …\nA struct that implements <code>DeserializeSeed</code> and can be used …\nError returned when a field is not found in a schema.\nA unique identifier for a schema registered in the …\nA schema describes the data layout of a type, to enable …\nLayout information computed for <code>SchemaData</code>.\nUntyped schema-aware “HashMap”.\nAccess helper for a <code>SchemaMap</code>.\nMutable <code>SchemaMap</code> access helper.\nError type when attempting to cast between types with …\nAn untyped reference that knows the <code>Schema</code> of the pointee …\nHelper for accessing the inner data of a schema ref at …\nAn untyped mutable reference that knows the <code>Schema</code> of the …\nAccess a schema\nA schema registry that alloates <code>SchemaId</code>s for <code>SchemaData</code>s …\nA struct that implements <code>Serialize</code> and wraps around a …\nA type-erased <code>Vec</code>-like collection that for items with the …\nAccess helper for a <code>SchemaVec</code>.\nMutable <code>SchemaVec</code> access helper.\nA <code>String</code>\nA Rust <code>String</code>. Must be manipulated with Rust string …\nA <code>String</code>\nAccess a struct.\nThe type represents a struct.\nAccess a struct.\nA field in a <code>StructSchemaInfo</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nSchema data for a struct.\nA <code>u128</code>\n<code>u128</code>\nA <code>u128</code>\nA <code>u16</code>\nA <code>u16</code>.\n<code>u16</code>\nA <code>u16</code>\nA <code>u32</code>\nA <code>u32</code>.\n<code>u32</code>\nA <code>u32</code>\nA <code>u64</code>\n<code>u64</code>\nA <code>u64</code>\nA <code>u8</code>\nA <code>u8</code>.\n<code>u8</code>\nA <code>u8</code>\nA wrapper struct that marks it unsafe to both create and …\nInformation about an enum variant for <code>EnumSchemaInfo</code>.\nAccess a vec.\nType represents a <code>SchemaVec</code>, where each item in the vec …\nAccess a vec.\nConverts a reference of <code>T</code> to a <code>SchemaRefMut</code>\nConverts a reference of <code>T</code> to a <code>SchemaRef</code>\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nThe function pointer that may be used to clone data with …\nThe function pointer that may be used to write a default …\nThe function that may be used to deserialize the type.\nThe function pointer that may be used to drop data with …\nThe function pointer that may be used to compare two …\nIf this is a struct, then the field offsets will contain …\nThe fields in the struct, in the order they are defined.\nReturn the data for the type.\nThe full name of the type, including any module specifiers.\nThe function pointer that may be used to hash the value.\nThe kind of schema.\nThe layout of the type.\nThe name of the field, if set.\nThe name of the field, if set.\nThe short name of the type.\nThe name of the enum variant.\nThe name of the field. Will be <code>None</code> if this is a field of …\nRegister this schema with the global schema registry.\nGet this type’s <code>Schema</code>.\nThe schema of this variant.\nThe schema of the field.\nThe registered schemas.\nThe layout of the enum tag.\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nContainer for storing <code>Schema</code> type datas.\nThe Rust <code>TypeId</code> that this <code>Schema</code> was created from, if it …\nThe field’s value.\nThe field’s value.\nInfo for the enum variants.\nThe alignment of the data.\nThe size of the data.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe schema of the key type.\nThe schema of the value type.\nA <code>bool</code>\nA <code>bool</code>\nAccess an enum.\nAccess an enum.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nAn <code>f32</code>\nAn <code>f32</code>\nAn <code>f64</code>\nAn <code>f64</code>\nThe index of a field in a struct in a <code>Schema</code>.\nA wrapper type that implements […\nAn <code>i128</code>\nAn <code>i128</code>\nAn <code>i16</code>\nAn <code>i16</code>\nAn <code>i32</code>\nAn <code>i32</code>\nAn <code>i64</code>\nAn <code>i64</code>\nAn <code>i8</code>\nAn <code>i8</code>\nThe index of a field. Works for tuple fields and named …\nThe display error message for this error type.\nAccess a map.\nAccess a map.\nThe name of a field.\nAn opaque type\nAn opaque type\nAccess a struct.\nAccess a struct.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nA typed version of <code>SchemaBox</code>.\nA owning, type-erased <code>Box</code>-like container for types with a …\nError returned when a field is not found in a schema.\nAccess helper for a <code>SchemaMap</code>.\nMutable <code>SchemaMap</code> access helper.\nError type when attempting to cast between types with …\nAn untyped reference that knows the <code>Schema</code> of the pointee …\nHelper for accessing the inner data of a schema ref at …\nAn untyped mutable reference that knows the <code>Schema</code> of the …\nAccess a schema\nAccess helper for a <code>SchemaVec</code>.\nMutable <code>SchemaVec</code> access helper.\nA <code>String</code>\nA <code>String</code>\nAccess a struct.\nAccess a struct.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nA <code>u128</code>\nA <code>u128</code>\nA <code>u16</code>\nA <code>u16</code>\nA <code>u32</code>\nA <code>u32</code>\nA <code>u64</code>\nA <code>u64</code>\nA <code>u8</code>\nA <code>u8</code>\nAccess a vec.\nAccess a vec.\nGet a helper to access the inner data.\nGet a mutable access helper to this reference.\nBorrow the schema ref as a <code>SchemaBox</code> if it is one.\nBorrow the schema ref as a <code>SchemaMap</code> if it is one.\nBorrow this box as a <code>SchemaRefMut</code>.\nConvert back to a <code>SchemaRefMut</code>\nGet the raw pointer\nGet a raw pointer to the box data.\nGet the pointer.\nBorrow this <code>SchemaRefMut</code> as a <code>SchemaRef</code>.\nBorrow this <code>SchemaRefMutAccess</code> as a <code>SchemaRefAccess</code>.\nConvert to an immutable <code>PrimitiveRef</code>.\nBorrow this box as a <code>SchemaRef</code>.\nConvert to a <code>SchemaRef</code>.\nBorrow the schema ref as a <code>SchemaVec</code> if it is one.\nCast this pointer to a reference to a type with a matching …\nCast this box to it’s inner type and return it.\nCast this pointer to a mutable reference to a type with a …\nCast this pointer to a mutable reference.\nUnsafely convert this box into an owned T.\nUnsafely cast this pointer to a specifc Rust type.\nCast this pointer to a reference to a type with a matching …\nCast this box to a mutable reference to a type with a …\nCast this pointer to a mutable reference.\nCast this box to a reference to a type with a …\nUnsafely cast this pointer to a specifc Rust type.\nClone this schema ref into a new box.\nDebug format the value stored in the schema box.\nCreate a new <code>SchemaBox</code> for a type with a <code>Schema</code> that has a …\nGet the reference to a field.\nGet field with the given index.\nGet the reference to a field.\nGet field with the given index.\nAccess a field, if it exists.\nGet the field pointed to by the given path.\nGet the field pointed to by the given path.\nGet the field pointed to by the given path.\nGet the field pointed to by the given path.\nIterate over fields in the struct.\nInterate over the fields on the struct.\nDeallocate the memory stored in the box, but don’t run …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>SchemaRefMut</code> from a raw pointer and it’s …\nCreate a new <code>SchemaRef</code> from a raw pointer and it’s …\nCreate a new <code>SchemaBox</code> from raw parts.\nGet the hash of this schema box, if supported.\nGet the hash of this schema box.\nGet the hash of this schema box, if supported.\nGet the <code>StructSchemaInfo</code> for this struct.\nGet the enum schema info.\nGet the <code>StructSchemaInfo</code> for this struct.\nGet the enum schema info.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into an accessor for the inner data.\nBorrow the schema ref as a <code>SchemaBox</code> if it is one.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nGet the reference to a field.\nAccess a field, if it exists.\nGet the field pointed to by the given path.\nConsume to create an iterator over fields in the struct.\nBorrow the schema ref as a <code>SchemaMap</code> if it is one.\nConvert into an <code>SBox</code> if the schema of T matches.\nConvert into a <code>SchemaBox</code>\nBorrow this <code>SchemaRefMutAccess</code> as a <code>SchemaRefAccess</code>.\nConvert back to a <code>SchemaRefMut</code>\nConvert back to a <code>SchemaRefMut</code>\nConvert this to a <code>SchemaRefMut</code>.\nConvert back to a <code>SchemaRefMut</code>\nBorrow the schema ref as a <code>SchemaVec</code> if it is one.\nThe name of the field, if set.\nThe name of the field, if set.\nCreate a new <code>SchemaRefMut</code> from a reference to a type that …\nCreate a new <code>SchemaRefAccess</code> for the given <code>SchemaRef</code>.\nCreate a new <code>SchemaBox</code> from an owned type.\nCreate a new <code>SBox</code>.\nCreate a new <code>SchemaRef</code> from a reference to a type that …\nCreate a new <code>SchemaRefAccess</code> for the given <code>SchemaRef</code>.\nCreate a new <code>SchemaRefAccess</code> for the given <code>SchemaRef</code> that …\nCreate a new <code>SchemaRefAccess</code> for the given <code>SchemaRef</code> that …\nConvert a borrowed <code>SchemaRefMut</code> to an owned <code>SchemaRefMut</code> …\nGet the <code>Schema</code> for the pointer.\nGet the struct’s schema.\nGet the enum’s schema.\nGet the <code>Schema</code> for the pointer.\nGet the <code>Schema</code> for the pointer.\nGet the struct’s schema.\nGet the enum’s schema.\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nCast this pointer to a reference to a type with a matching …\nCast this box to it’s inner type and return it.\nCast this pointer to a mutable reference to a type with a …\nCast this pointer to a mutable reference to a type with a …\nCast this box to a mutable reference to a type with a …\nCast this box to a reference to a type with a …\nGet the hash of this schema box, if supported.\nConvert into an <code>SBox</code> if the schema of T matches.\nAllocates a <code>SchemaBox</code> for the given <code>Schema</code>, but <strong>doesn’t </strong>…\nGet a reference to the enum’s currently selected value.\nGet a reference to the enum’s currently selected value.\nThe field’s value.\nThe field’s value.\nGet the currently-selected variant index.\nGet the currently-selected variant index.\nGet the <code>VariantInfo</code> for the current variant.\nGet the name of the currently selected variant.\nGet the name of the currently selected variant.\nGet the <code>StructSchemaInfo</code> for the current variant.\nClone <code>other</code> and write it’s data to <code>self</code>. Panics if this …\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nTrait implemented automatically for types that implement …\nTrait implemented automatically for types that implement …\nTrait implemented automatically for types that implement …\nTrait implemented automatically for types that implement <code>Eq</code>…\nTrait implemented automatically for types that implement …\nWrite the default value of the type to the pointer.\nGet a callback suitable for [<code>SchemaData</code>].\nWrite the default value of the type to the pointer.\nGet a callback suitable for [<code>SchemaData</code>].\nWrite the default value of the type to the pointer.\nGet a callback suitable for [<code>SchemaData</code>].\nGet the hash of the type.\nGet a callback suitable for [<code>SchemaData</code>].\nGet the hash of the type.\nGet a callback suitable for [<code>SchemaData</code>].\nGlobal <code>SchemaRegistry</code> used to register <code>SchemaData</code>s and …\nA unique identifier for a schema registered in the …\nA schema registry that alloates <code>SchemaId</code>s for <code>SchemaData</code>s …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister a schema with the registry.\nThe registered schemas.\nDerivable schema <code>type_data</code> for types that implement …\nA struct that implements <code>DeserializeSeed</code> and can be used …\nA struct that implements <code>Serialize</code> and wraps around a …\nUse this <code>SchemaDeserialize</code> to deserialize data from the …\nThe function that may be used to deserialize the type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nError creating ID\nDerive macro for deriving <code>Deref</code> on structs with one field.\nDerive macro for deriving <code>DerefMut</code> on structs with one …\nDetermines the kind of PRNG. <code>TurboKind::FAST</code> RNGs are …\nThis trait provides the means to easily generate all …\nA <code>HashMap</code> implementing aHash, a high speed keyed hashing …\nA <code>HashSet</code> implementing aHash, a high speed keyed hashing …\nThe ID is in the wrong format.\nA <code>Ulid</code> with a human-readable ascii prefix.\nError creating a <code>LabeledId</code>.\nErrors that can happen while parsing a <code>LabeledId</code>.\nThe prefix was not ASCII.\nThe prefix was too long ( greater than 63 chars ).\nA fast, non-cryptographic, thread-local random number …\nExtension trait for automatically implementing all …\nA Ulid is a unique 128-bit lexicographically sortable …\nThe ULID could not be parsed.\nExtension trait for <code>Ulid</code>.\nGenerates a random <code>char</code> in ranges a-z and A-Z.\nGenerates a random <code>char</code> in ranges a-z, A-Z and 0-9.\nReturns a random boolean value.\nReturns a boolean value based on a rate. <code>rate</code> represents …\nGenerates a random <code>char</code> in the given range.\nConstructor that) is the same as <code>Ulid::new()</code>, but that …\nAn ergonomic abbreviation for <code>Default::default()</code> to make …\nGenerate a random digit in the given <code>radix</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nReturns an array of constant <code>SIZE</code> containing random <code>u8</code> …\nReturns a random <code>i128</code> value.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nReturns a random <code>isize</code> value.\nReturns a random <code>u128</code> value.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nReturns a random <code>usize</code> value.\nShortens a type name to remove all module paths.\nReturns a random <code>i128</code> within a given range bound.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nReturns a <code>usize</code> value for stable indexing across different …\nReturns a random <code>isize</code> within a given range bound.\nGenerates a random <code>char</code> in the range a-z.\nPartially shuffles a slice by a given amount and returns …\nThe prelude.\nSamples a random item from a slice of values.\nSamples a random item from an iterator of values. <code>O(1)</code> if …\nSamples multiple unique items from a slice of values.\nSamples multiple unique items from an iterator of values.\nSamples multiple unique items from a mutable slice of …\nSamples a random <code>&amp;mut</code> item from a slice of values.\nShuffles a slice randomly in O(n) time.\nReturns a random <code>u128</code> within a given range bound.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nGenerates a random <code>char</code> in the range A-Z.\nReturns a random <code>usize</code> within a given range bound.\nStochastic Acceptance implementation of Roulette Wheel …\nStochastic Acceptance implementation of Roulette Wheel …\nError creating ID\nDerive macro for deriving <code>Deref</code> on structs with one field.\nDerive macro for deriving <code>DerefMut</code> on structs with one …\nDetermines the kind of PRNG. <code>TurboKind::FAST</code> RNGs are …\nThis trait provides the means to easily generate all …\nA <code>HashMap</code> implementing aHash, a high speed keyed hashing …\nA <code>HashSet</code> implementing aHash, a high speed keyed hashing …\nThe ID is in the wrong format.\nA <code>Ulid</code> with a human-readable ascii prefix.\nError creating a <code>LabeledId</code>.\nErrors that can happen while parsing a <code>LabeledId</code>.\nThe prefix was not ASCII.\nThe prefix was too long ( greater than 63 chars ).\nA fast, non-cryptographic, thread-local random number …\nExtension trait for automatically implementing all …\nA Ulid is a unique 128-bit lexicographically sortable …\nThe ULID could not be parsed.\nExtension trait for <code>Ulid</code>.\nGenerates a random <code>char</code> in ranges a-z and A-Z.\nGenerates a random <code>char</code> in ranges a-z, A-Z and 0-9.\nReturns a random boolean value.\nReturns a boolean value based on a rate. <code>rate</code> represents …\nGenerates a random <code>char</code> in the given range.\nConstructor that) is the same as <code>Ulid::new()</code>, but that …\nAn ergonomic abbreviation for <code>Default::default()</code> to make …\nGenerate a random digit in the given <code>radix</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nReturns an array of constant <code>SIZE</code> containing random <code>u8</code> …\nReturns a random <code>i128</code> value.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nReturns a random <code>isize</code> value.\nReturns a random <code>u128</code> value.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nReturns a random <code>usize</code> value.\nShortens a type name to remove all module paths.\nReturns a random <code>i128</code> within a given range bound.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nReturns a <code>usize</code> value for stable indexing across different …\nReturns a random <code>isize</code> within a given range bound.\nGenerates a random <code>char</code> in the range a-z.\nPartially shuffles a slice by a given amount and returns …\nSamples a random item from a slice of values.\nSamples a random item from an iterator of values. <code>O(1)</code> if …\nSamples multiple unique items from a slice of values.\nSamples multiple unique items from an iterator of values.\nSamples multiple unique items from a mutable slice of …\nSamples a random <code>&amp;mut</code> item from a slice of values.\nShuffles a slice randomly in O(n) time.\nReturns a random <code>u128</code> within a given range bound.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nGenerates a random <code>char</code> in the range A-Z.\nReturns a random <code>usize</code> within a given range bound.\nStochastic Acceptance implementation of Roulette Wheel …\nStochastic Acceptance implementation of Roulette Wheel …\nA 2-dimensional <code>bool</code> vector mask.\nA 3-dimensional <code>bool</code> vector mask.\nA 3-dimensional SIMD vector mask.\nA 4-dimensional <code>bool</code> vector mask.\nA 4-dimensional SIMD vector mask.\nEncapsulates shared borrowing state.\nEncapsulates exclusive borrowing state.\nLock type used by [<code>AtomicCell</code>].\nReturns true if there are too many read refs.\nReturns true if there are too many write refs.\nBorrows can be cloned.\nBorrows can be cloned.\nClones immutable borrow of specified lock. This function …\nClones mutable borrow of specified lock. This function …\nReturns dummy atomic borrow that doesn’t actually locks …\nReturns dummy atomic borrow that doesn’t actually locks …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if specified lock value is borrowed.\nReturns true if specified lock value is borrowed immutably.\nReturns true if specified lock value is borrowed mutably.\nCreate atomic borrow lock. Initially not borrowed.\nReleases immutable borrow of specified lock. This function …\nReleases mutable borrow of specified lock. This function …\nRestore previously leaked <code>AtomicBorrow</code> instance.\nRestore previously leaked <code>AtomicBorrowMut</code> instance.\nAttempts to borrow specified lock immutably.\nAttempts to borrow specified lock mutably.\nAttempts to borrow lock immutably.\nAttempts to borrow lock mutably.\nDashMap is an implementation of a concurrent associative …\nDashSet is a thin wrapper around <code>DashMap</code> using <code>()</code> as the …\nImplementation detail that is exposed due to generic …\nA read-only view into a <code>DashMap</code>. Allows to obtain raw …\nSafety\nSafety\nSafety\nSafety\nSafety\nModify a specific value according to a function.\nModify every value in the map according to a function.\nReturns the number of elements the map can hold without …\nReturns how many keys the set can store without …\nReturns how many key-value pairs the map can store without …\nRemoves all keys in the set.\nRemoves all key-value pairs in the map.\nChecks if the set contains a specific key.\nReturns <code>true</code> if the map contains a value for the specified …\nChecks if the map contains a specific key.\nAdvanced entry API that tries to mimic …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a reference to the value corresponding to the key.\nGet a reference to an entry in the set\nGet an immutable reference to an entry in the map\nReturns the key-value pair corresponding to the supplied …\nGet a mutable reference to an entry in the map\nHash a given item to produce a usize. Uses the provided or …\nHash a given item to produce a usize. Uses the provided or …\nReturns a reference to the map’s <code>BuildHasher</code>.\nInserts a key into the set. Returns true if the key was …\nInserts a key and a value into the map. Returns the old …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this <code>ReadOnlyView</code>, returning the underlying …\nWraps this <code>DashMap</code> into a read-only view. This view allows …\nReturns <code>true</code> if the map contains no elements.\nChecks if the set is empty or not.\nChecks if the map is empty or not.\nAn iterator visiting all key-value pairs in arbitrary …\nCreates an iterator over a DashMap yielding immutable …\nCreates an iterator over a DashMap yielding immutable …\nIterator over a DashMap yielding mutable references.\nAn iterator visiting all keys in arbitrary order. The …\nReturns the number of elements in the map.\nFetches the total number of keys stored in the set.\nFetches the total number of key-value pairs stored in the …\nCreates a new DashSet with a capacity of 0.\nCreates a new DashMap with a capacity of 0.\nRemoves an entry from the map, returning the key if it …\nRemoves an entry from the map, returning the key and value …\nRemoves an entry from the set, returning the key if the …\nRemoves an entry from the map, returning the key and value …\nRetain elements that whose predicates return true and …\nRetain elements that whose predicates return true and …\nRemove excess capacity to reduce memory usage.\nRemove excess capacity to reduce memory usage.\nAdvanced entry API that tries to mimic …\nGet an immutable reference to an entry in the map, if the …\nGet a mutable reference to an entry in the map, if the …\nAdvanced entry API that tries to mimic …\nAn iterator visiting all values in arbitrary order. The …\nScoped access into an item of the map according to a …\nCreates a new DashMap with a specified starting capacity.\nCreates a new DashMap with a specified starting capacity.\nCreates a new DashMap with a specified starting capacity …\nCreates a new DashMap with a specified starting capacity …\nCreates a new DashMap with a specified starting capacity, …\nCreates a new DashMap with a specified capacity and shard …\nCreates a new DashMap with a capacity of 0 and the …\nCreates a new DashMap with a capacity of 0 and the …\nCreates a new DashMap with a specified hasher and shard …\nCreates a new DashMap with a specified shard amount\nIterator over a DashMap yielding immutable references.\nIterator over a DashMap yielding mutable references.\nIterator over a DashMap yielding key value pairs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nApply a function to the stored value if it exists.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the value of the entry, and returns a reference to …\nSets the value of the entry, and returns an OccupiedEntry.\nSets the value of the entry with the VacantEntry’s key, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInto the key of the entry.\nGet the key of the entry.\nReturn a mutable reference to the element if it exists, …\nReturn a mutable reference to the element if it exists, …\nReturn a mutable reference to the element if it exists, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe shard wasn’t locked, and the value wasn’t present …\nThe shard was locked.\nThe value was present in the map, and the lock for the …\nRepresents the result of a non-blocking read from a DashMap…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the shard wasn’t locked, and the value …\nReturns <code>true</code> if the shard was locked.\nReturns <code>true</code> if the value was present in the map, and the …\nIf <code>self</code> is Present, returns the reference to the value in …\nIf <code>self</code> is Present, returns the reference to the value in …\nTrack frame time state synced from bevy frame time …\nState of frame time diagnostic window. Stored in <code>EguiCtx</code> …\nRenders frame time diagnostic window in Egui if window is …\nIf installed, allows opening egui window with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs window open?\nReset min/max values to default\nIndicate whether or not a popup will be shown above or …\nIndicated an alias, e.g. a shortcut\nleft/center/right or top/center/bottom alignment for e.g. …\nTwo-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.\nSomething can be scrolled in any direction (panned).\nAn area on the screen that can be moved by dragging.\nConvenience for <code>Self::Max</code>\nPainted behind all floating windows\nNormal labels. Easily readable, doesn’t take up too much …\nClickable button with text.\nButtons. Maybe slightly bigger than <code>Self::Body</code>.\nLoad the image from some raw bytes.\nOn Mac: ⌘ Command key, elsewhere: Ctrl key\nBackend-specific painting.\nTouch operation has been disrupted by something (various …\nHover a cell in a table\nHorizontal or vertical center.\nA panel that covers the remainder of the screen, i.e. …\nBoolean on/off control with text label.\nCircle with optional outline and fill.\nA <code>Mesh</code> or <code>PaintCallback</code> within a clip rectangle.\nA header which can be collapsed/expanded, revealing a …\nThe response from showing a <code>CollapsingHeader</code>.\nRGBA image.\nThis format is used for space-efficient color …\nA 2D RGBA color image in RAM.\nA drop-down selection menu with a descriptive label.\nIME composition ended with this final result.\nIME composition start.\nA new IME candidate is being suggested.\nYour handle to egui.\nA context menu is available\nThe integration detected a “copy” event (e.g. Cmd+C).\nIndicate that a copy will be made\nRequest an elevated amount of animations and flair for the …\nFor precision work\nA cubic Bézier Curve.\nA mouse cursor icon.\nThe integration detected a “cut” event (e.g. Cmd+X).\nDebug layer, always painted last / on top\nDefault text style - will use <code>TextStyle::Body</code>, unless …\nNormal cursor icon, whatever that is.\nLayout direction, one of <code>LeftToRight</code>, <code>RightToLeft</code>, <code>TopDown</code>…\nA numeric value that you can change by dragging the …\nA file dropped into egui.\nInfinite range that contains everything, from -∞ to …\nInfinite rectangle that contains every point.\nUser lifted the finger or pen from the surface, or slid …\nAn input event generated by the integration.\nControls which events that a focused widget will have …\nFit the image to an exact size.\nThe first extra mouse button on some mice. In web …\nThe second extra mouse button on some mice. In web …\nUsed for the font texture.\nA <code>.ttf</code> or <code>.otf</code> file and a font face index.\nDescribes the font data and the sizes to use.\nFont of unknown size.\nHow to select a sized font.\nDirectly select size and font family\nA single-channel image designed for the font texture.\nA way to select <code>FontId</code>, either by picking one directly or …\nExtra scale and vertical tweak to apply to all text of a …\nPopups, menus etc that should always be painted on top of …\nFit the image to a fraction of the available size.\nAdd a background, frame and/or margin to a rectangular …\nWhat egui emits each frame from <code>crate::Context::run</code>.\nText that has been laid out, ready for painting.\nUse exactly this galley when painting the text.\nThe thing you are hovering can be grabbed\nYou are grabbing the thing you are hovering\nA simple grid layout.\nHeading. Probably larger than <code>Self::Body</code>.\nScale to height.\nQuestion mark\nA file about to be dropped into egui.\nA clickable hyperlink, e.g. to …\nA function that paints the <code>ComboBox</code> icon\negui tracks widgets frame-to-frame using <code>Id</code>s.\n<code>IdMap&lt;V&gt;</code> is a <code>HashMap&lt;Id, V&gt;</code> optimized by knowing that <code>Id</code> …\nA widget which displays an image.\nA clickable image within a frame.\nAn image stored in RAM.\nThis type determines how the image should try to fit …\nThis type determines the constraints on how the size of an …\nThis type tells the <code>Ui</code> how to load an image.\nRequest a standard amount of attention-grabbing actions.\nReturned when we wrap some ui-code and want to return both …\nInput state that egui updates each frame.\nKeyboard keys.\nA key was pressed or released.\nA keyboard shortcut, e.g. <code>Ctrl+Alt+W</code>.\nConvenience for <code>Self::Min</code>\nLinear magnification and minification.\nStatic text.\nAn identifier for a paint layer. Also acts as an …\nThe layout of a <code>Ui</code>, e.g. “vertical &amp; centered”.\nUse this <code>LayoutJob</code> when laying out the text.\nNumber of lines\nA line between two points.\nLinearly interpolate the nearest neighbors, creating a …\nClickable text, that looks like a hyperlink.\ne.g. a hyperlink\nThe Mac ⌘ Command key\nTextures allocated using <code>TextureManager</code>.\nRight or bottom.\nThe data that egui persists between frames.\nTextured triangles in two dimensions.\nA general triangle mesh.\nThe tertiary mouse button is usually the middle mouse …\nNormal moveable windows that you reorder by click\nLeft or top.\nThe virtual keycode for the Minus key.\nNames of different modifier keys.\nState of the modifier keys. These must be fed to egui.\nA font where each character is the same width (<code>w</code> is the …\nSame size as <code>Self::Body</code>, but used when monospace is …\nA raw mouse wheel event as sent by the backend (minus the …\nThe unit associated with the numeric value of a mouse …\nUser moves a touch point along the surface. This event is …\nOmnidirectional move icon (e.g. arrows in all cardinal …\nAll you probably need to know about a multi-touch gesture.\nAlt, Ctrl, Shift, Cmd\nAn invalid <code>Rangef</code> filled with <code>f32::NAN</code>.\nAn invalid <code>Rect</code> filled with <code>f32::NAN</code>.\nNearest magnification and minification.\nSame as <code>Stroke::default</code>.\nThe inverse of <code>Self::EVERYTHING</code>: stretches from positive …\nThe inverse of <code>Self::EVERYTHING</code>: stretches from positive …\nNumber of pointer buttons supported by egui, i.e. the …\nOne of the names in <code>FontDefinitions::families</code>.\nA user-chosen style, found in <code>Style::text_styles</code>.\nShow the nearest pixel value.\nCan’t drop here\nShow no cursor\nPaint nothing. This can be useful as a placeholder.\nForbidden\nEither from the main row or from the numpad.\nEither from the main row or from the numpad.\nEither from the main row or from the numpad.\nEither from the main row or from the numpad.\nEither from the main row or from the numpad.\nEither from the main row or from the numpad.\nEither from the main row or from the numpad.\nEither from the main row or from the numpad.\nEither from the main row or from the numpad.\nEither from the main row or from the numpad.\nExtends <code>f32</code>, <code>Vec2</code> etc with <code>at_least</code> and <code>at_most</code> as aliases …\nWhat URL to open, and how.\nSome global options that you can read and write.\nDifferent layer categories\nFit the image to its original size, scaled by some factor.\nIf you cannot fit any of the above slots.\nNumber of pages\nIf you want to paint some 3D shapes inside an egui region, …\nInformation passed along with <code>PaintCallback</code> (…\nHelper to paint shapes and text to a specific region on a …\nSpecial layer between panels and windows\nThe integration detected a “paste” event (e.g. Cmd+V).\nA series of lines between points. The path can have a …\nThe non-rendering part of what egui emits each frame.\nThe virtual keycode for the Plus/Equals key.\nNumber of ui points (logical pixels)\nMouse button (or similar for touch input)\nA mouse button was pressed or released (or a touch started …\nThe mouse left the screen, or the last/primary touch input …\nThe mouse or touch moved to a new place.\nMouse or touch state.\nPointing hand, used for e.g. web links\nA position on screen.\nThe primary mouse button is usually the left one.\nShows that processing is being done, but that the program …\nA simple progress bar.\nA font where some characters are wider than other (e.g. ‘…\nA quadratic Bézier Curve.\nConvenience for <code>Self::Max</code>\nOne out of several alternatives, either selected or not.\nIncludive range of floats, i.e. <code>min..=max</code>, but more …\nWhat the integrations provides to egui at the start of …\nA rectangular region of space.\nRectangle with optional outline and fill.\nInformation given to the backend about when it is time to …\nReset the attention request and interrupt related …\nA region that can be resized by dragging the bottom right …\nResize a column\nResize something rightwards (e.g. when dragging the …\nHorizontal resize <code>-</code> to make something wider or more narrow …\nDiagonal resize <code>/</code> (right-up to/from left-down)\nResize something up (e.g. when dragging the top edge of …\nResize something up and right (e.g. when dragging the …\nResize something up and left (e.g. when dragging the …\nDiagonal resize <code>\\</code> (left-up to/from right-down)\nResize a row\nResize something downwards (e.g. when dragging the bottom …\nResize something down and right (e.g. when dragging the …\nResize something down and left (e.g. when dragging the …\nVertical resize <code>|</code> (up-down or down-up)\nResize something leftwards (e.g. when dragging the left …\nThe result of adding a widget to a <code>Ui</code>.\n0-1 linear space <code>RGBA</code> color with premultiplied alpha.\nText and optional style choices for it.\nHow rounded the corners of things should be\n⌥ ⌃ ⇧ ⌘ - NOTE: not supported by the default egui …\nScale original size by some factor.\nHow many points (logical pixels) the user scrolled.\nAdd vertical and/or horizontal scrolling to a contained <code>Ui</code>.\nThe secondary mouse button is usually the right one, and …\nOne out of several alternatives, either selected or not. …\nWhat sort of interaction is a widget sensitive to?\nA visual separator. A horizontal or vertical line …\nA paint primitive such as a circle or a piece of text. …\nA panel that covers the entire left or right side of a <code>Ui</code> …\nScale to size.\nGiven as a hint for image loading requests.\nControl a number with a slider.\nSpecifies the orientation of a <code>Slider</code>.\nUsed when small text is needed.\nA spinner widget used to indicate loading.\nUser just placed a touch point on the touch surface\nDescribes the width and color of a line.\nSpecifies the look and feel of egui.\nUse a <code>TextStyle</code> to look up the <code>FontId</code> in <code>Style::text_styles</code>…\nAn ugly color that is planned to be replaced before making …\nConvenience for <code>Self::Min</code>\nText.\nText input, e.g. via keyboard.\nText caret, e.g. “Click here to edit text”\nTrait constraining what types <code>crate::TextEdit</code> may use as …\nA text region that the user can edit the contents of.\nFormatting option for a section of text.\nAlias for a <code>FontId</code> (font of a certain size).\nLoad the image from an existing texture.\nHow the texture texels are filtered.\nUsed to paint images.\nWhat texture to use in a <code>Mesh</code> mesh.\nHow the texture texels are filtered.\nWhat has been allocated and freed during the last period.\nThings floating on top of everything else, like tooltips. …\nA panel that covers the entire top or bottom of a <code>Ui</code> or …\nOn touch screens, report this <em>in addition to</em> …\nthis is a <code>u64</code> as values of this kind can always be …\nUnique identification of a touch occurrence (finger or pen …\nIn what phase a touch event is in.\nThis is what you use to place widgets.\nLoad the image from a URI, e.g. …\nYour own texture, defined in any which way you want. The …\nTypes of attention to request from a user when a native …\nRecursively nest more shapes - sometimes a convenience to …\nA vector has a direction and length. A <code>Vec2</code> is often used …\nVertical text caret, e.g. “Click here to edit vertical …\nControls the visual style (colors etc) of egui.\nNot yet ready, try later.\nAnything implementing Widget can be added to a <code>Ui</code> with …\nDescribes a widget such as a <code>crate::Button</code> or a …\nThis is how you specify text for a widget.\nThe different types of built-in widgets in egui\nHelper so that you can do <code>TextEdit::State::read…</code>\nScale to width.\nBuilder for a floating window which can be dragged, …\nThe native window gained or lost focused (e.g. the user …\nThe zero position, the origin. The top left corner in a …\nA <code>Rect</code> filled with zeroes.\nNo rounding on any corner.\nZoom scale factor this frame (e.g. from ctrl-scroll or …\nEnhance!\nLet’s get a better overview\nFor use in tests; especially doctests.\nFor use in tests; especially doctests.\nAdd a <code>Widget</code> to this <code>Ui</code> at a location dependent on the …\nIt is up to the caller to make sure there is room for this.\nAdd a new bytes loader.\nUniformly colored rectangle.\nAdd a single <code>Widget</code> that is possibly disabled, i.e. greyed …\nAdd a section that is possibly disabled, i.e. greyed out …\nAdd a new image loader.\nRectangle with a texture and color.\nAdd a <code>Widget</code> to this <code>Ui</code> with a given size. The widget will …\nAdd extra space before the next widget.\nAdd a new texture loader.\nAdd a triangle.\nAdd a single <code>Widget</code> that is possibly invisible.\nAdd a section that is possibly invisible, i.e. greyed out …\nReturns an additive version of self\nReturn an additive version of this color (alpha = 0)\nAllocate a rect without interacting with it.\nRepaint after this duration. If zero, repaint as soon as …\nHow imprecise do we expect the mouse/touch input to be? …\nReturns a range of given size within a specified range.\ne.g. center a size within a given frame\nAllocate at least as much space as needed, and interact …\nReturns a <code>Rect</code> with exactly what you asked for.\nConvenience function to get a region to paint on.\nAllocate a specific part of the <code>Ui</code>.\nAllocate space for a widget and check for interaction in …\nReserve this much space and move the cursor. Returns where …\nAllocated the given space and then adds content to that …\nAllocated the given rectangle and then adds content to …\nAllocated the given space and then adds content to that …\nEither of the alt keys are down (option ⌥ on Mac).\nSet anchor and distance.\nSet anchor and distance.\nUsed e.g. to anchor a piece of text to a part of the …\nMeasures the angle of the vector.\nCreate a unit vector with the given CW angle (in radians).\nWhether to display a loading animation when progress <code>&lt; 1</code>. …\nReturns a value in the range [0, 1], to indicate “how on…\nLike <code>Self::animate_bool</code> but allows you to control the …\nSmoothly animate an <code>f32</code> value.\nHow many seconds a typical animation should last.\nWere there any type of click this frame?\nIs any pointer button currently down?\nTrue if any member is NaN.\nTrue if any member is NaN.\nTrue if any member is NaN.\nIs any popup open?\nWas any pointer button pressed (<code>!down -&gt; down</code>) this frame? …\nWas any pointer button released (<code>down -&gt; !down</code>) this frame?\nTrue if there currently are any fingers touching egui.\nAppend all the indices and vertices of <code>other</code> to <code>self</code>.\nAdd on new input.\nAdd on new output.\nAdd on new output.\nAppend all the indices and vertices of <code>other</code> to <code>self</code> …\nAppend to an existing <code>LayoutJob</code>\nObtain the previous rectangle of an area.\nShow an arrow starting at <code>origin</code> and going in the …\nIf <code>true</code>, pressing arrows will act on the widget, and NOT …\nFlip <code>min</code> and <code>max</code> if needed, so that <code>min &lt;= max</code> after.\nA view of the underlying data as <code>&amp;[u8]</code>\nA view of the underlying data as <code>&amp;mut [u8]</code>\nReturns this buffer as a <code>str</code>.\nwidth / height\nWidth / height\nMore readable version of <code>self.max(lower_limit)</code>\nMake sure each corner has a rounding of at least this.\nMore readable version of <code>self.min(upper_limit)</code>\nMake sure each corner has a rounding of at most this.\nSame as <code>ui.next_auto_id().with(id_source)</code>\nFor each axis, should the containing area shrink if the …\nNot resizable, just takes the size of its contents. Also …\nNot manually resizable, just takes the size of its …\nThe available height at the moment, given the current …\nHow much space is still available after panels has been …\nIn case of a wrapping layout, how much space is left on …\nThe available space at the moment, given the current …\nIn case of a wrapping layout, how much space is left on …\nThe available width at the moment, given the current …\nFill-color behind the text.\nPrefer using <code>RichText</code> directly!\nWhen using this font’s metrics to layout a row, shift …\nAn alternative to calling <code>Self::run</code>.\nA solid color to put behind the image. Useful for …\nA solid color to put behind the image. Useful for …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nNone iff collapsed.\nNone iff collapsed.\nCreate a bi-directional (horizontal and vertical) scroll …\nThe id should be globally unique, e.g. …\n<code>max.y</code>\n<code>max.y</code>\nPlace elements vertically, bottom up.\nUsage: <code>if ui.button(&quot;Click me&quot;).clicked() { … }</code>\nWas the button given clicked this frame?\nWas the button given double clicked this frame?\nIs this button currently down?\nShow a background behind buttons.\nWas the button given pressed this frame?\nWas the button given released this frame?\nWas the button given triple clicked this frame?\n<code>width x height x bytes_per_pixel</code>\nSet by the <code>eframe</code> web backend.\nCan be used to cache computations from one frame to …\nCalculate a bounding rectangle.\nReturns the size the image will occupy in the final UI.\nCalculate the final on-screen size in points.\nPaint something custom (e.g. 3D stuff).\nA canvas to draw on.\nThe center of the range\nThis will make the next added widget centered and …\nFor when you want to add a single widget to a layout, and …\nWhat the underlying data changed?\nSets the limit for the amount of characters can be entered\nReads the given character range.\nIf the given <code>Id</code> has been used previously the same frame at …\nShow a checkbox.\nCreate a new <code>Ui</code> at a specific region.\nCreate a new <code>Ui</code> at a specific region with a specific id.\nEquivalent to <code>x.clamp(min, max)</code>\nReturn the given points clamped to be inside the rectangle …\nClamp incoming and outgoing values to this range.\nIf set to <code>true</code>, all incoming and outgoing values will be …\nRestore to default state, but without freeing memory.\nClears all characters in this buffer\nClear memory of any animations.\nSense clicks and hover, but not drags.\nbuttons, sliders, windows, …\nSense both clicks, drags and hover (e.g. a slider or …\nReturns true if this widget was clicked this frame by the …\nReturns true if this widget was clicked this frame by the …\n<code>true</code> if there was a click <em>outside</em> this widget this frame.\nScreen-space rectangle for clipping what we paint in this …\nEverything painted in this <code>Painter</code> will be clipped against …\nClip rectangle in points.\nClip / scissor rectangle. Only show the part of the <code>Mesh</code> …\nThe “scissor” or “clip” rectangle. This is what …\nAllow child widgets to be just on the border and still …\nWhen <code>true</code> (default), overflowing text will be clipped.\nClose the menu we are in (including submenus), if any.\nClose the open popup, if any.\nA line that closes back to the start point again.\nShow text as monospace with a gray background.\nMonospace label with different background color.\nPrefer using <code>RichText</code> directly!\nBackground color behind code-styled monospaced labels.\nA <code>TextEdit</code> for code editing.\nBuild a <code>TextEdit</code> focused on code editing. By default it …\nCan the window be collapsed by clicking on its title?\nA <code>CollapsingHeader</code> that starts out collapsed.\nShow a background behind collapsing headers.\nOverride text color.\nOverride text color if, and only if, this is a <code>RichText</code>.\nSets the spinner’s color.\nText color\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShow colored text.\nTemporarily split a <code>Ui</code> into several columns.\nOn Windows and Linux, set this to the same value as <code>ctrl</code>. …\ntrue if only <code>Self::ctrl</code> or only <code>Self::mac_cmd</code> is pressed.\nWhat goes between the names\nConstrains this window to the screen bounds.\nConstrains this area to the screen bounds.\nConstraint the movement of the window to the given …\nConstraint the movement of the window to the given …\nCheck for a key press. If found, <code>true</code> is returned and the …\nCheck if the given shortcut has been pressed.\nContainers are pieces of the UI which wraps other pieces …\nWhether another set of modifiers is contained in this set …\nResponse to secondary clicks (right-clicks) by showing the …\nA convex polygon with a fill and optional stroke.\nIf set, put this text in the system clipboard. Ignore if …\nCopy the given text to the system clipboard.\nIf the pointer button is down, will it register as a click …\nCount presses of a key. If non-zero, the presses are …\nHow to align things on the cross axis. For vertical …\nJustify the cross axis? For vertical layouts justify mean …\nEither of the control keys are down. When checking for …\nGet a reference to the parent <code>Context</code>.\nGet a reference to the parent <code>Context</code>.\nUsed for optionally showing a tooltip and checking for …\nThe current frame number.\nSet current position of the window. If the window is …\nPositions the window but you can still move it.\nThe contents of some editable text (for <code>TextEdit</code> fields).\nWhere the next widget will be put.\nWhen <code>true</code> (default), the cursor will initially be placed …\nCursor at the given position within the galley\nSet the cursor to this icon.\nSet custom formatter defining how numbers are converted …\nSet custom formatter defining how numbers are converted …\nSet custom parser defining how the text input is parsed …\nSet custom parser defining how the text input is parsed …\nDefault dark theme.\nA dark canvas to draw on.\nIf true, the visuals are overall dark with light text. If …\nTurn a line into dashes.\nTurn a line into dashes. If you need to create many dashed …\nRead-only access to the shared <code>IdTypeMap</code>, which stores …\nRead-only access to <code>IdTypeMap</code>, which stores superficial …\nThis map stores some superficial state for all widgets …\nRead-write access to the shared <code>IdTypeMap</code>, which stores …\nRead-write access to <code>IdTypeMap</code>, which stores superficial …\nOptions to help debug why egui behaves strangely.\nWhether or not to debug widget layout on hover.\nShows where the next widget is going to be placed\nPaint on top of everything else\ntext with a background\nSpecifies the default fonts if the feature <code>default_fonts</code> …\nThe default is linear for both magnification and …\nThe epaint font texture.\nThe initial height of the <code>SidePanel</code>. Defaults to …\nSet initial height of the window.\nPreferred / suggested height. Actual height will depend on …\nBy default, the <code>CollapsingHeader</code> is collapsed. Call …\nSet initial collapsed state of the window\nSet initial position of the window.\nSet initial position and size of the window.\nSet initial size of the window.\nThe initial wrapping width of the <code>SidePanel</code>.\nSet initial width of the window.\nPreferred / suggested width. Actual width will depend on …\nDeletes a range of text <code>char_range</code> from this buffer.\nHow much the pointer moved compared to last frame, in …\nThis can be used by a text-to-speech system to describe …\nThe desired height of the bar. Will use the default …\nSet the number of rows to show by default. The default for …\nThe desired width of the bar. Will use all horizontal …\nSet to 0.0 to keep as small as possible. Set to …\nThe distance from the rect to the position, squared.\nThe distance from the rect to the position.\nThe dot-product of two vectors.\nTurn a line into equally spaced dots.\nReturns true if this widget was double-clicked this frame …\nReturns true if this widget was double-clicked this frame …\nSense drags and hover, but not clicks.\nsliders, windows, scroll bars, scroll areas, …\nModify an angle. The given angle should be in radians, but …\nModify an angle. The given angle should be in radians, but …\nIf dragged, how many points were we dragged and in what …\nThe widget was being dragged, but now it has been released.\nThe widget was being dragged by the button, but now it has …\nDid a drag on this widgets begin this frame?\nDid a drag on this widgets by the button begin this frame?\nEnable/disable scrolling on the window by dragging with …\nCan the user drag the scroll area to scroll?\nWhen dragging the value, how fast does it move?\nThe style to use for <code>DragValue</code> text.\nThe widgets is being dragged.\nDragged files dropped into egui.\nAn assert that is only active when <code>egui</code> is compiled with …\nSet to true the text was truncated due to …\nNo fonts.\nControl the scrolling behavior.\nIf you set this to <code>false</code>, the <code>CollapsingHeader</code> will be …\nIf <code>false</code> the window will be grayed out and non-interactive.\nIf false, no content responds to click and widgets will be …\nWas the widget enabled? If false, there was no interaction …\nWhether the widget is enabled.\nCursor to one-past last character.\nCall at the end of each frame.\nMove to the next row in a grid layout or wrapping layout. …\nA good color for error text (e.g. red).\nIf <code>true</code>, pressing escape will act on the widget, and NOT …\nIn-order events received this frame.\nEvents that may be useful to e.g. a screen reader.\nIn-order events received this frame\nThis can be used by a text-to-speech system to describe …\nA <code>Rect</code> that contains every point above a certain y …\nA <code>Rect</code> that contains every point below a certain y …\nIf true, all windows, menus, tooltips etc are to be …\nA <code>Rect</code> that contains every point to the left of the given …\nA <code>Rect</code> that contains every point to the right of the given …\nEnforce this exact height.\nEnforce this exact width.\nAn example color image, useful for tests.\nExpand by this much on each side, keeping the center\nExpand by this much in each direction, keeping the center\nExpand by this much in each direction, keeping the center\nExpand the <code>min_rect</code> and <code>max_rect</code> of this ui to include a …\nEnsure we are big enough to contain the given x-coordinate.\nEnsure we are big enough to contain the given y-coordinate.\nShow tooltips explaining <code>DragValue</code>:s etc when hovered.\nAdd many shapes at once.\nExpand to include the given x coordinate\nExpand to include the given y coordinate\nExtra spacing between letters, in points.\nExtra spacing between letters, in points.\nVery dark or light color (for corresponding theme). Used …\nWhen fading out things, we fade the colors towards this.\nSomething just barely different from the background color. …\nSet the <code>TextStyle</code> unless it has already been set\nSet the <code>TextStyle</code> unless it has already been set\nWhich fonts (names) to use for each <code>FontFamily</code>.\nSelect the font family.\nWhat font family to use.\nOverride background fill color. Note that this will …\nThe fill color of the bar.\nGet all events that matches the given filter.\nDetermines how the image should shrink/expand/stretch/etc. …\nFit the image to an exact size.\nFit the image to a fraction of the available space.\nFit the image to its original size with some scaling.\nSet an exact number of decimals to display. Values will …\nSet an exact number of decimals to display.\nSets the window position and prevents it from being …\nPositions the window and prevents it from being moved\nSets the window pos and size and prevents it from being …\nSets the window size and prevents it from being resized by …\nWhich widget has keyboard focus?\nthis widgets want focus. Anything interactive + labels …\nSenses no clicks or drags, but can be focused with the …\nThe native window has the keyboard focus (i.e. is …\nThe native window has the keyboard focus (i.e. is …\nPick a <code>FontId</code> or <code>TextStyle</code>.\nSelect the font and size. This overrides the value from …\nThe content of a <code>.ttf</code> or <code>.otf</code> file.\nList of font names and their definitions.\nRead the font height of the selected text style.\nRead-only access to <code>Fonts</code>.\nRead-only access to <code>Fonts</code>.\nRead-only access to the shared <code>Fonts</code>.\nRead-write access to <code>Fonts</code>.\nCurrent force of the touch (average of the forces of the …\nRelease all memory and textures related to images used in …\nRelease all memory and textures related to the given image …\nFormat the given shortcut in a human-readable way (e.g. …\nChange the background color, margins, etc.\nChange the background color, margins, etc.\nChange the background color, margins, etc.\nTurn off the frame\nDefault is <code>true</code>. If set to <code>false</code> there will be no frame …\nChange the background color, margins, etc.\nTurn off the frame\nThe current frame number.\nTextures to free after painting.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.")