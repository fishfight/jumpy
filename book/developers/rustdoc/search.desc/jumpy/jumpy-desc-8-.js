searchState.loadedDescShard("jumpy", 8, "Calls <code>U::from(self)</code>.\nModify an existing <code>Shape</code>.\nTranslate each <code>Shape</code> and clip rectangle by this much, …\nRepresents a byte buffer.\nRepresents a loader capable of loading raw unstructured …\nRepresents bytes which are currently being loaded.\nMaps URI:s to <code>Bytes</code>, e.g. found with <code>include_bytes!</code>.\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nScale to height.\nAn <code>ImageLoader</code> decodes raw bytes into a <code>ColorImage</code>.\nRepresents an image which is currently being loaded.\nRepresents a failed attempt at loading an image.\nThe loaders of bytes, images, and textures.\nRuntime error: Loading was attempted, but failed (e.g. “…\nProgrammer error: There are no image loaders installed.\nProgrammer error: Failed to find the bytes for this image …\nProgrammer error: Failed to parse the bytes as an image …\nProgrammer error: no matching <code>TextureLoader</code>. Because of …\nA specific loader does not support this scheme, protocol …\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nBytes are being loaded.\nImage is loading.\nTexture is loading.\nBytes are loaded.\nImage is loaded.\nTexture is loaded.\nScale original size by some factor.\nScale to size.\nGiven as a hint for image loading requests.\nA texture with a known size.\nA <code>TextureLoader</code> uploads a <code>ColorImage</code> to the GPU, returning …\nRepresents a texture is currently being loaded.\nScale to width.\nIf the loader caches any data, this should return the size …\nIf the loader caches any data, this should return the size …\nIf the loader caches any data, this should return the size …\nImplementations may use this to perform work at the end of …\nImplementations may use this to perform work at the end of …\nImplementations may use this to perform work at the end of …\nForget the given <code>uri</code>.\nForget the given <code>uri</code>.\nForget the given <code>uri</code>.\nForget all URIs ever given to this loader.\nForget all URIs ever given to this loader.\nForget all URIs ever given to this loader.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFetch the id and size from a <code>TextureHandle</code>.\nUsed to get a unique ID when implementing one of the …\nUnique ID of this loader.\nUnique ID of this loader.\nUnique ID of this loader.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTry loading the bytes from the given uri.\nTry loading the image from the given uri.\nTry loading the texture from the given uri.\nCreate a <code>SizedTexture</code> from a texture <code>id</code> with a specific …\nFile contents, e.g. the contents of a <code>.png</code>.\nMime type of the content, e.g. <code>image/png</code>.\nSet if known (e.g. from a HTTP header, or by parsing the …\nSet if known (e.g. from a HTTP header, or by parsing the …\nSet if known (e.g. from a HTTP header, or by parsing the …\nSet if known (e.g. from a HTTP header, or by parsing the …\nThe menu bar goes well in a <code>TopBottomPanel::top</code>, but can …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a top level menu in a menu bar. This would be …\nConstruct a top level menu with an image in a menu bar. …\nAndroid OS.\nApple iPhone OS.\nMacOS.\nLinux or Unix other than Android.\nAn <code>enum</code> of common operating systems.\nUnknown OS - could be wasm\nWindows.\nReturns the argument unchanged.\nUses the compile-time <code>target_arch</code> to identify the OS.\nHelper: try to guess from the user-agent of a browser.\nCalls <code>U::from(self)</code>.\nIndicated an alias, e.g. a shortcut\nSomething can be scrolled in any direction (panned).\nHover a cell in a table\nA widget was clicked.\nA context menu is available\nIndicate that a copy will be made\nRequest an elevated amount of animations and flair for the …\nFor precision work\nA mouse cursor icon.\nNormal cursor icon, whatever that is.\nA widget was double-clicked.\nA widget gained keyboard focus (by tab key).\nWhat egui emits each frame from <code>crate::Context::run</code>.\nThe thing you are hovering can be grabbed\nYou are grabbing the thing you are hovering\nQuestion mark\nRequest a standard amount of attention-grabbing actions.\nOmnidirectional move icon (e.g. arrows in all cardinal …\nCan’t drop here\nShow no cursor\nForbidden\nWhat URL to open, and how.\nThings that happened during this frame that the …\nThe non-rendering part of what egui emits each frame.\nPointing hand, used for e.g. web links\nShows that processing is being done, but that the program …\nReset the attention request and interrupt related …\nResize a column\nResize something rightwards (e.g. when dragging the …\nHorizontal resize <code>-</code> to make something wider or more narrow …\nDiagonal resize <code>/</code> (right-up to/from left-down)\nResize something up (e.g. when dragging the top edge of …\nResize something up and right (e.g. when dragging the …\nResize something up and left (e.g. when dragging the …\nDiagonal resize <code>\\</code> (left-up to/from right-down)\nResize a row\nResize something downwards (e.g. when dragging the bottom …\nResize something down and right (e.g. when dragging the …\nResize something down and left (e.g. when dragging the …\nVertical resize <code>|</code> (up-down or down-up)\nResize something leftwards (e.g. when dragging the left …\nText caret, e.g. “Click here to edit text”\nText selection was updated.\nA widget was triple-clicked.\nTypes of attention to request from a user when a native …\nA widget’s value changed.\nVertical text caret, e.g. “Click here to edit vertical …\nNot yet ready, try later.\nDescribes a widget such as a <code>crate::Button</code> or a …\nEnhance!\nLet’s get a better overview\nIf set, put this text in the system clipboard. Ignore if …\nThe contents of some editable text (for <code>TextEdit</code> fields).\nSet the cursor to this icon.\nWhether the widget is enabled.\nEvents that may be useful to e.g. a screen reader.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe text on labels, buttons, checkboxes etc.\nIs there a mutable <code>TextEdit</code> under the cursor? Use by <code>eframe</code>…\nIf <code>true</code>, open the url in a new tab. If <code>false</code> open it in …\nIf set, open this url.\nNon-rendering related output.\nThe previous text value.\nIf <code>Duration::is_zero()</code>, egui is requesting immediate …\nThe current value of checkboxes and radio buttons.\nWhat to paint.\nScreen-space position of text edit cursor (used for IME).\nSelected range of characters in <code>Self::current_text_value</code>.\nTexture changes since last frame (including the font …\nThe type of widget this is.\nThe current value of sliders etc.\nThe word <code>git</code>.\nThe Github logo.\nThe Android logo.\nThe Apple logo.\nTux, the Linux penguin.\nThe Windows logo.\nThe Twitter bird.\nNormal labels. Easily readable, doesn’t take up too much …\nButtons. Maybe slightly bigger than <code>Self::Body</code>.\nOptions for help debug egui by adding extra visualization\nDefault text style - will use <code>TextStyle::Body</code>, unless …\nDirectly select size and font family\nA way to select <code>FontId</code>, either by picking one directly or …\nHeading. Probably larger than <code>Self::Body</code>.\nHow and when interaction happens.\nSame size as <code>Self::Body</code>, but used when monospace is …\nA user-chosen style, found in <code>Style::text_styles</code>.\nSelected text, selected elements etc\nUsed when small text is needed.\nControls the sizes and distances between widgets.\nSpecifies the look and feel of egui.\nUse a <code>TextStyle</code> to look up the <code>FontId</code> in <code>Style::text_styles</code>…\nAlias for a <code>FontId</code> (font of a certain size).\nControls the visual style (colors etc) of egui.\nbg = background, fg = foreground.\nThe visuals of widgets for different states of interaction.\nThe style of an interactive widget as you are clicking or …\nHow many seconds a typical animation should last.\nBackground color of widgets that must have a background …\nFor surrounding rectangle of things that need it, like …\nShow a background behind buttons.\nButton size is text size plus this on each side\nAllow child widgets to be just on the border and still …\nBackground color behind code-styled monospaced labels.\nShow a background behind collapsing headers.\nHeight of a combo-box before showing scroll bars.\nDefault (minimum) width of a <code>ComboBox</code>.\nIf true, the visuals are overall dark with light text. If …\nOptions to help debug why egui behaves strangely.\nAlways show callstack to ui on hover.\nShow callstack for the current widget on hover if all …\nThe default text styles of the default egui theme.\nThe style to use for <code>DragValue</code> text.\nA good color for error text (e.g. red).\nMake the frame this much larger.\nShow tooltips explaining <code>DragValue</code>:s etc when hovered.\nVery dark or light color (for corresponding theme). Used …\nSomething just barely different from the background color. …\nStroke and text color of the interactive part of a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf we show the hover ui, include where the next widget is …\nThe style of an interactive widget while you hover it, or …\nThe color used for <code>Hyperlink</code>,\nReturns small icon rectangle and big icon rectangle\nCheckboxes, radio button and collapsing headers have an …\nCheckboxes, radio button and collapsing headers have an …\nCheckboxes, radio button and collapsing headers have an …\nShow a spinner when loading an image.\nThe style of an interactive widget, such as a button, at …\nIndent collapsing regions etc by this much.\nEnd indented regions with a horizontal line\nDraw a vertical lien left of indented region, in e.g. …\nShould the cursor change when the user hovers over an …\nMinimum size of a <code>DragValue</code>, color picker button, and …\nHow and when interaction happens.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHorizontal and vertical spacing between widgets.\nHorizontal and vertical margins within a menu frame.\nThe style of a widget that you cannot interact with.\nThe style of a button that has an open menu beneath it …\nIf set this will change the font family and size for all …\nOverride default text color for all text.\nIf set this will change the default <code>TextStyle</code> for all …\nPanel background color\nMouse must be this close to the corner of a window to …\nMouse must be this close to the side of a window to resize\nButton frames etc.\nMargin between contents and scroll bar.\nMargin between scroll bar and the outer container (e.g. …\nMake sure the scroll handle is at least this big\nShow what widget blocks the interaction of another widget.\nShow which widgets make their parent higher\nShow which widgets make their parent wider\nShow an overlay on all interactive widgets.\nIf <code>false</code>, tooltips will show up anytime you hover …\nShow trailing color behind the circle of a <code>Slider</code>. Default …\nDefault width of a <code>Slider</code>.\nSizes and distances between widgets\nWhether or not Grids and Tables should be striped by …\nThe color and width of the text cursor\nshow where the text cursor would be if you clicked\nDefault width of a <code>TextEdit</code>.\nThe <code>FontFamily</code> and size you want to use for a specific …\nDelay in seconds before showing tooltips after the mouse …\nWidth of a tooltip (<code>on_hover_ui</code>, <code>on_hover_text</code> etc).\nColors etc.\nA good color for warning text (e.g. orange).\nBackground color of widgets that can <em>optionally</em> have a …\nVisual styles of widgets\nHorizontal and vertical margins within a window frame.\nIf set, labels buttons wtc will use this to determine …\nCharacter cursor\nA selected text range (could be a range of length zero).\nA <code>.ttf</code> or <code>.otf</code> file and a font face index.\nDescribes the font data and the sizes to use.\nFont of unknown size.\nThe collection of fonts used by <code>epaint</code>.\nText that has been laid out, ready for painting.\nDescribes the task of laying out text.\nA font where each character is the same width (<code>w</code> is the …\nOne of the names in <code>FontDefinitions::families</code>.\nA font where some characters are wider than other (e.g. ‘…\nOne <code>\\t</code> character is this many spaces wide.\nFormatting option for a section of text.\nControls the text wrapping and elision of a <code>LayoutJob</code>.\nIf <code>true</code>: Allow breaking between any characters. If <code>false</code> …\nIf <code>true</code>, all <code>\\n</code> characters will result in a new <em>paragraph</em>, …\nRange into the galley text\nText color\nSet to true the text was truncated due to …\nExtra spacing between letters, in points.\nWhich fonts (names) to use for each <code>FontFamily</code>.\nThe first row must be at least this high. This is in case …\nThe content of a <code>.ttf</code> or <code>.otf</code> file.\nList of font names and their definitions.\nReturns the argument unchanged.\nHow to horizontally align the text (<code>Align::LEFT</code>, …\nCharacter offset (NOT byte offset!).\nWhich font face in the file to use. When in doubt, use <code>0</code>.\nCalls <code>U::from(self)</code>.\nThe job that this galley is the result of. Contains the …\nJustify text so that word-wrapped rows fill the whole …\nCan be used for first row indentation.\nExplicit line height of the text in points.\nMaximum amount of rows the text galley should have.\nWrap text so that no row is wider than this.\nTight bounding box around all the meshes in all the rows. …\nTotal number of indices in all the row meshes.\nTotal number of vertices in all the row meshes.\nThe empty range.\nCharacter to use to represent elided text.\nThe number of physical pixels for each logical point. …\nIf this cursors sits right at the border of a wrapped row …\nWhen selecting with a mouse, this is where the mouse was …\nBounding rect.\nRows of text, from top to bottom.\nWhen selecting with a mouse, this is where the mouse was …\nThe different section, which can have different fonts, …\nreturns the two ends ordered\nThe complete text of this job, referenced by <code>LayoutSection</code>.\nExtra scale and vertical tweak to apply to all text of …\nIf you use a small font and <code>Align::TOP</code> you can get the …\nControls the text wrapping and elision.\nThis struct tracks recent values of some time series.\nStores values identified by an <code>Id</code> AND a the …\nComputing the same thing each frame can be expensive, so …\nCount the number of values are stored with the given type.\nCount how many values are stored but not yet deserialized.\nReturns the argument unchanged.\nRead a value, optionally deserializing it if available.\nRead a value without trying to deserialize a persisted …\nHash the given value with a predictable hasher.\nHash the given value with the given hasher.\nInsert a value that will be persisted next time you start …\nInsert a value that will not be persisted.\nCalls <code>U::from(self)</code>.\nThe maximum number of bytes that will be used to store the …\nRemove the state of this type an id.\nNote all state of the given type.\nSee <code>Self::max_bytes_per_type</code>.\nSomething that does an expensive computation that we want …\nCaches the results of a computation for one frame. If it …\nMust be called once per frame to clear the cache.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet from cache (if the same key was used last frame) or …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of values currently in the cache.\nCall once per frame to evict cache.\nCall once per frame to evict cache.\nStores values identified by an <code>Id</code> AND a the …\nLike <code>std::any::TypeId</code>, but can be serialized and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAutomatic undo system.\nAdd an undo point if, and only if, there has been a change …\nIf the state is changing so often that we never get to …\nCall this as often as you want (e.g. every frame) and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nDo we have an undo point different from the given state?\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true if the state is currently changing\nMaximum number of undos. If your state is resource …\nWhen that state hasn’t changed for this many seconds, …\nUse exactly this galley when painting the text.\nUse this <code>LayoutJob</code> when laying out the text.\nText and optional style choices for it.\nThis is how you specify text for a widget.\nText that has been laid out and ready to be painted.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPaint with this specific color.\nUse the colors in the original <code>WidgetText</code> if any, else …\nUse the colors in the original <code>WidgetText</code> if any, else …\nSize of the laid out text.\nThe full, non-elided text of the input job.\nClickable button with text.\nLoad the image from some raw bytes.\nBoolean on/off control with text label.\nA numeric value that you can change by dragging the …\nFit the image to an exact size.\nFit the image to a fraction of the available size.\nA clickable hyperlink, e.g. to …\nA widget which displays an image.\nA clickable image within a frame.\nThis type determines how the image should try to fit …\nThis type determines the constraints on how the size of an …\nThis type tells the <code>Ui</code> how to load an image.\nStatic text.\nClickable text, that looks like a hyperlink.\nFit the image to its original size, scaled by some factor.\nA simple progress bar.\nOne out of several alternatives, either selected or not.\nOne out of several alternatives, either selected or not. …\nA visual separator. A horizontal or vertical line …\nControl a number with a slider.\nSpecifies the orientation of a <code>Slider</code>.\nA spinner widget used to indicate loading.\nTrait constraining what types <code>crate::TextEdit</code> may use as …\nA text region that the user can edit the contents of.\nLoad the image from an existing texture.\nLoad the image from a URI, e.g. …\nAnything implementing Widget can be added to a <code>Ui</code> with …\nHelper so that you can do <code>TextEdit::State::read…</code>\nReturns this buffer as a <code>str</code>.\nA solid color to put behind the image. Useful for …\nReads the given character range.\nClears all characters in this buffer\nColor picker widgets.\nDeletes a range of text <code>char_range</code> from this buffer.\nDetermines how the image should shrink/expand/stretch/etc. …\nShow larger buttons for switching between light and dark …\nShow a small button to switch to/from dark/light mode …\nInserts text <code>text</code> into this buffer at character index …\nCan this text be edited?\nWhether or not the final size should maintain the original …\nDetermines the maximum size of the image.\nReplaces all contents of this string with <code>text</code>\nShow a button to reset a value to its default. The button …\nShow a button to reset a value to its default. The button …\nRotate the image about an origin by some angle\nRound the corners of the image.\nClears all characters in this buffer and returns a string …\nMultiply image color with this. Default is WHITE (no tint).\nAllocate space, interact, paint, and return a <code>Response</code>.\nSelect UV range. Default is (0,0) in top-left, (1,1) …\nThe unique identifier for this image, e.g. …\nWhat options to show for alpha\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a color picker where the user can change the given …\nReturns <code>true</code> on change.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nShow a color with background checkers to demonstrate …\nShow a color with background checkers to demonstrate …\nA selected text range (could be a range of length zero).\nA selected text range (could be a range of length zero).\nTrait constraining what types <code>crate::TextEdit</code> may use as …\nA text region that the user can edit the contents of.\nThe output from a <code>TextEdit</code>.\nThe text edit state stored between frames.\nThe range of selected character indices.\nReturns this buffer as a <code>str</code>.\nThe the currently selected range of characters.\nReads the given character range.\nClears all characters in this buffer\nWhere the text cursor is.\nDeletes a range of text <code>char_range</code> from this buffer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHow the text was displayed.\nInserts text <code>text</code> into this buffer at character index …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if the selected range contains no characters.\nCan this text be edited?\nThe empty range.\nWhen selecting with a mouse, this is where the mouse was …\nWhen selecting with a mouse, this is where the mouse was …\nWhen selecting with a mouse, this is where the mouse was …\nReplaces all contents of this string with <code>text</code>\nThe interaction response.\nWhen selecting with a mouse, this is where the mouse was …\nWhen selecting with a mouse, this is where the mouse was …\nWhen selecting with a mouse, this is where the mouse was …\nSets the currently selected range of characters.\nIf there is a selection, None is returned. If the two ends …\nreturns the two ends ordered\nThe state we stored after the run.\nClears all characters in this buffer and returns a string …\nThe text was clipped to this rectangle when painted.\nWhere the text in <code>Self::galley</code> ended up on the screen.\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nFluent messages can use arguments in order to …\n<code>FluentAttribute</code> is a component of a compound <code>FluentMessage</code>.\nSpecialized <code>FluentBundle</code> over non-concurrent …\nCore error type for Fluent runtime system.\n<code>FluentMessage</code> is a basic translation unit of the Fluent …\nA resource containing a list of localization messages.\nThe <code>FluentValue</code> enum represents values which can be …\nAn error which occurs when <code>FluentBundle::add_resource</code> adds …\nConverts the <code>FluentValue</code> to a string.\nAn iterator over <code>FluentAttribute</code> elements.\n<code>FluentBundle</code> is a collection of localization messages in …\nReturns an iterator over <code>entries</code> of the <code>FluentResource</code>.\nA helper macro to simplify creation of FluentArgs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the <code>FluentValue</code> at the <code>key</code> if it exists.\nRetrieve a single <code>FluentAttribute</code> element.\nReturns an <code>Entry</code> at the given index out of the …\nRetrieves an id of an attribute.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the <code>FluentValue</code> to a string.\nIterate over a tuple of the key an <code>FluentValue</code>.\nChecks to see if two <code>FluentValues</code> match each other by …\nCreates a new empty argument map.\nSets the key value pair.\nReturns a reference to the source string that was used to …\nA fallible constructor of a new <code>FluentResource</code>.\nAttempts to parse the string representation of a <code>value</code> …\n<code>types</code> module contains types necessary for Fluent runtime …\nRetrieves an value of an attribute.\nRetrieves an option of a <code>ast::Pattern</code>.\nPre-allocates capacity for arguments.\nWrite out a string version of the <code>FluentValue</code> to <code>W</code>.\nA collection of localization messages for a single locale, …\nMakes the provided rust function available to messages …\nAdds a resource to the bundle, returning an empty <code>Result&lt;T&gt;</code>…\nAdds a resource to the bundle, returning an empty <code>Result&lt;T&gt;</code>…\nFormats a pattern which comes from a <code>FluentMessage</code>.\nReturns the argument unchanged.\nRetrieves a <code>FluentMessage</code> from a bundle.\nReturns true if this bundle contains a message with the …\nCalls <code>U::from(self)</code>.\nConstructs a FluentBundle. The first element in <code>locales</code> …\nA constructor analogous to <code>FluentBundle::new</code> but operating …\nThis method allows to specify a function that will be …\nThis method allows to specify a function that will be …\nWhen formatting patterns, <code>FluentBundle</code> inserts Unicode …\nWrites a formatted pattern which comes from a <code>FluentMessage</code>…\nSpecialized <code>FluentBundle</code> over concurrent <code>IntlLangMemoizer</code>.\nCustom types can implement the <code>FluentType</code> trait in order …\nThe <code>FluentValue</code> enum represents values which can be …\nConvert the custom type into a string value, for instance …\nConvert the custom type into a string value, for instance …\nCreate a clone of the underlying type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis function parses Accept-Language string into a list of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLanguage Negotiation is a process in which locales from …\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nDense input for network replication.\nExtension of <code>InputCollector</code> exposing dense control for …\nDefine input types used by game for use in networking.\nTrait allowing for creating and applying <code>DenseInput</code> from …\nRequired for use of <code>PlayerControls</code> in networking.\nGet dense control for player.\nGet dense control\nGet <code>DenseInput</code> for control.\nUpdate control of player from dense input.\nUpdate control from <code>DenseInput</code>.\nType of the arguments that are used to construct the …\nType of any errors that can occur during the construction …\nThe <code>IntlLangMemoizer</code> can memoize multiple constructed …\n<code>IntlMemoizer</code> is designed to handle lazily-initialized …\nThe trait that needs to be implemented for each intl …\nContains thread-safe variants.\nConstruct a formatter. This maps the <code>Self::Args</code> type to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a <code>IntlLangMemoizer</code> for a given language. If one does …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>IntlLangMemoizer</code> that is unique to a specific …\n<code>with_try_get</code> means <code>with</code> an internationalization formatter, …\nA thread-safe version of the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new <code>IntlLangMemoizer</code> that is unique to a specific …\nLazily initialize and run a formatter. See …\nAll samples are multiplied by the specified factor.\nThe action should occur when a clock reaches a specific …\nThe volume is adjusted by the given number of decibels.\nThe action should occur a certain amount of time from now.\nAn emitter in a spatial scene.\nA stereo audio sample.\nThe action should occur immediately.\nRoute audio to the main mixer track.\nThe minimum decibel value at which a sound is considered …\nWhere a source of audio should be routed to.\nAn error that is returned when a resource cannot be added …\nDescribes when an action should occur.\nA mixer track.\nA change in volume of a sound.\nA <code>Frame</code> with both the left and right samples set to <code>0.0</code>.\nReturns the volume as an amplitude.\nReturns the volume as a difference in the number of …\nReturns the frame mixed down to mono.\nPrecise timing for audio events.\nHelpers for sending commands from the gameplay thread to …\nCreates a set of command writers and readers and a …\nModifies audio signals.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a frame with both the left and right channels set …\nGiven a previous frame, a current frame, the two next …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe sample for the left channel.\nThe main entrypoint for controlling audio from gameplay …\nGlobal values that parameters (like volume and playback …\nCreates a frame with the given left and right values.\nPans a frame to the left or right.\nThe sample for the right channel.\nSources of audio.\nPositions audio in 3D space.\nOrganizes and applies effects to audio.\nSmooth interpolation between values.\nControls a clock.\nA unique identifier for a clock.\nThe rate that a clock ticks at.\nAn instant in time associated with a clock.\nThe clock ticks every x seconds.\nThe clock ticks x times per minute.\nThe clock ticks x times per second.\nReturns the <code>ClockSpeed</code> as a number of seconds between each …\nReturns the <code>ClockSpeed</code> as a number of ticks per minute.\nReturns the <code>ClockSpeed</code> as a number of ticks per second.\nThe clock this time is associated with.\nContains types for reporting information about clocks.\nThe amount of time since the last tick as a fraction of a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>ClockTime</code> for a clock with the specified number …\nCreates a <code>ClockTime</code> for a clock with the specified number …\nReturns the unique identifier for the clock.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPauses the clock.\nSets the speed of the clock.\nStarts or resumes the clock.\nStops and resets the clock.\nReturns <code>true</code> if the clock is currently ticking and <code>false</code> …\nThe elapsed time in whole ticks.\nReturns the current time of the clock.\nInformation about the current state of a clock.\nProvides information about any clock that currently exists.\nThe thing should start later because the appropriate clock …\nBuilds a <code>ClockInfoProvider</code> that provides fake clock info.\nThe thing will never start because the clock it depends on …\nThe thing should start now.\nWhen something should start given the current state of the …\nAdds a new fake clock to the builder and returns the …\nConsumes the builder and returns a <code>ClockInfoProvider</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets information about the clock with the given ID if it …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>MockClockInfoProviderBuilder</code> with room for …\nWhether the clock is currently running.\nThe current time of the clock.\nReturns whether something with the given start time should …\nReads values that were written to a <code>CommandWriter</code>.\nWrites values that can be sent to a <code>CommandReader</code>.\nA command that holds a target <code>Value</code> and a <code>Tween</code>.\nCreates a command writer/reader pair.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the latest value that was written to the …\nThe new value to set something to.\nThe tween to use to smoothly transition the value.\nWrites a new value, overwriting any previous values.\nReceives input audio from a mixer track and outputs …\nConfigures an effect.\nAllows the user to control the effect from gameplay code.\nCreates the effect and a handle to the effect.\nReduces (or increases) the dynamic range of audio.\nAdds echoes to a sound.\nMakes a sound harsher and noisier.\nAdjusts the volume of a frequency range of a sound.\nRemoves frequencies from a sound.\nCalled when the effect is first sent to the renderer.\nCalled when the sample rate of the renderer is changed.\nCalled whenever a new batch of audio samples is requested …\nAdjusts the panning of audio.\nTransforms an input <code>Frame</code>.\nAdds reverberations to a sound. Useful for simulating room …\nAdjusts the volume of audio.\nConfigures a compressor.\nControls a compressor.\nSets how much time it takes for the volume attenuation to …\nHow much time it takes for the volume attenuation to ramp …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the amount to change the volume after processing (in …\nThe amount to change the volume after processing (in dB).\nSets how much dry (unprocessed) signal should be blended …\nHow much dry (unprocessed) signal should be blended with …\nCreates a new <code>CompressorBuilder</code> with the default settings.\nSets how much the signal will be compressed.\nHow much the signal will be compressed.\nSets how much time it takes for the volume attenuation to …\nHow much time it takes for the volume attenuation to relax …\nSets how much time it takes for the volume attenuation to …\nSets the amount to change the volume after processing (in …\nSets how much dry (unprocessed) signal should be blended …\nSets how much the signal will be compressed.\nSets how much time it takes for the volume attenuation to …\nSets the volume above which volume will start to be …\nSets the volume above which volume will start to be …\nThe volume above which volume will start to be decreased …\nConfigures a delay effect.\nControls a delay effect.\nAdds an effect to the feedback loop.\nSets the amount of audio the delay can store.\nSets the delay time (in seconds).\nSets the amount of feedback.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets how much dry (unprocessed) signal should be blended …\nCreates a new <code>DelayBuilder</code> with the default settings.\nSets the delay time (in seconds).\nSets the amount of feedback.\nSets how much dry (unprocessed) signal should be blended …\nConfigures a distortion effect.\nControls a distortion effect.\nDifferent types of distortion.\nThe signal will be clamped to the -1.0 to 1.0 range.\nThe signal will be kept in the -1.0 to 1.0 range, and the …\nSets the factor to multiply the signal by before applying …\nThe factor to multiply the signal by before applying the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the kind of distortion to use.\nThe kind of distortion to use.\nSets how much dry (unprocessed) signal should be blended …\nHow much dry (unprocessed) signal should be blended with …\nCreates a new <code>DistortionBuilder</code> with the default settings.\nSets how much distortion should be applied.\nSets the kind of distortion to use.\nSets how much dry (unprocessed) signal should be blended …\nFrequencies around the user-defined frequency are adjusted.\nConfigures an EQ filter.\nControls an EQ filter.\nThe shape of the frequency adjustment curve.\nFrequencies around and higher than the user-defined …\nFrequencies around and lower than the user-defined …\nThe “center” or “corner” of the frequency range to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe volume adjustment for frequencies in the specified …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe shape of the frequency adjustment curve.\nCreates a new <code>EqFilterBuilder</code>.\nThe width of the frequency range to adjust.\nSets the “center” or “corner” of the frequency …\nSets the volume adjustment for frequencies in the …\nSets the shape of the frequency adjustment curve.\nSets the width of the frequency range to adjust.\nRemoves frequencies above and below the cutoff frequency.\nConfigures a filter effect.\nControls a filter effect.\nThe frequencies that the filter will remove.\nRemoves frequencies below the cutoff frequency.\nRemoves frequencies above the cutoff frequency.\nRemoves frequencies around the cutoff frequency.\nSets the cutoff frequency of the filter (in hertz).\nThe cutoff frequency of the filter (in hertz).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets how much dry (unprocessed) signal should be blended …\nHow much dry (unprocessed) signal should be blended with …\nSets the frequencies that the filter will remove.\nThe frequencies that the filter will remove.\nCreates a new <code>FilterBuilder</code> with the default settings.\nSets the resonance of the filter.\nThe resonance of the filter.\nSets the cutoff frequency of the filter (in hertz).\nSets how much dry (unprocessed) signal should be blended …\nSets the frequencies that the filter will remove.\nSets the resonance of the filter.\nConfigures a panning control effect.\nControls a panning control effect.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the panning adjustment to apply to input audio.\nConfigures a reverb effect.\nControls a reverb effect.\nSets how quickly high frequencies disappear from the …\nHow quickly high frequencies disappear from the …\nSets how much the room reverberates. A higher value will …\nHow much the room reverberates. A higher value will result …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets how much dry (unprocessed) signal should be blended …\nHow much dry (unprocessed) signal should be blended with …\nCreates a new <code>ReverbBuilder</code> with the default settings.\nSets how quickly high frequencies disappear from the …\nSets how much the room reverberates. A higher value will …\nSets how much dry (unprocessed) signal should be blended …\nSets the stereo width of the reverb effect (0.0 being …\nSets the stereo width of the reverb effect (0.0 being …\nThe stereo width of the reverb effect (0.0 being fully …\nConfigures a volume control effect.\nControls a volume control effect.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>VolumeControlBuilder</code>.\nSets the volume adjustment to apply to input audio.\nControls audio from gameplay code.\nSettings for an <code>AudioManager</code>.\nSpecifies how many of each resource type an audio context …\nThe default backend used by <code>AudioManager</code>s.\nCreates a clock.\nCreates a modulator.\nCreates a spatial scene.\nCreates a mixer sub-track.\nCommunication between Kira and a low-level audio API.\nReturns a mutable reference to this manager’s backend.\nConfigures the backend.\nSpecifies how many of each resource type an audio context …\nReturns the number of clocks that can exist at a time.\nThe maximum number of clocks that can exist at a time.\nThe number of commands that be sent to the renderer at a …\nErrors that can occur when using an <code>AudioManager</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a handle to the main mixer track.\nConfigures the main mixer track.\nReturns the number of modulators that can exist at a time.\nThe maximum number of modulators that can exist at a time.\nCreates a new <code>AudioManager</code>.\nReturns the number of clocks that currently exist.\nReturns the number of modulators that currently exist.\nReturns the number of sounds that are currently loaded.\nReturns the number of spatial scenes that currently exist.\nReturns the number of mixer sub-tracks that currently …\nPlays a sound.\nReturns the number of sounds that can be loaded at a time.\nThe maximum number of sounds that can be playing at a time.\nReturns the number of spatial scenes that can exist at a …\nThe maximum number of spatial scenes that can exist at a …\nReturns the number of mixer sub-tracks that can exist at a …\nThe maximum number of mixer sub-tracks that can exist at a …\nConnects a <code>Renderer</code> to a lower level audio API.\nThe default backend used by <code>AudioManager</code>s.\nErrors that can occur when using this backend.\nProduces <code>Frame</code>s of audio data to be consumed by a …\nSettings for this backend.\nPlays audio using cpal.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUseful for testing and benchmarking.\nCalled by the backend when the sample rate of the audio …\nCalled by the backend when it’s time to process a new …\nProduces the next <code>Frame</code> of audio.\nStarts the backend and returns itself and the initial …\nSends the renderer to the backend to start audio playback.\nAn error occurred when building the audio stream.\nA backend that uses cpal to connect a <code>Renderer</code> to the …\nSettings for the <code>cpal</code> backend.\nAn error occurred when getting the default output …\nErrors that can occur when using the cpal backend.\nA default audio output device could not be determined.\nAn error occurred when starting the audio stream.\nThe buffer size used by the device. If it is set to …\nThe output audio device to use. If <code>None</code>, the default output\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA backend that does not connect to any lower-level audio …\nSettings for the mock backend.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls the <code>on_start_processing</code> callback of the <code>Renderer</code>.\nCalls the <code>process</code> callback of the <code>Renderer</code>.\nThe sample rate that the <code>Renderer</code> should run at.\nChanges the sample rate of the <code>Renderer</code>.\nAn error occurred when initializing the sound.\nErrors that can occur when playing a sound.\nCould not play a sound because the maximum number of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAllows the user to control the modulator from gameplay …\nProduces a stream of values that a parameter can be linked …\nConfigures a modulator.\nA unique identifier for a modulator.\nCreates the modulator and a handle to the modulator.\nWhether the modulator can be removed from the audio …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOscillates back and forth.\nCalled whenever a new batch of audio samples is requested …\nSmoothly transitions values to other values.\nUpdates the modulator.\nReturns the current output of the modulator.\nContains types for reporting values of modulators.\nConfigures an LFO modulator.\nControls an LFO modulator.\nThe value jumps back and forth between two values.\nThe value moves gradually in one direction, then abruptly …\nThe value moves back and forth smoothly.\nThe value moves back and forth at a constant speed.\nDescribes an oscillation pattern.\nSets how much the value oscillates.\nHow much the value oscillates.\nSets how quickly the value oscillates.\nHow quickly the value oscillates.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the unique identifier for the modulator.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>LfoBuilder</code> with the default settings.\nSets a constant value that the modulator is offset by.\nThe constant value the modulator is offset by.\nSets how much the value oscillates.\nSets how quickly the value oscillates.\nSets a constant value that the modulator is offset by.\nSets the phase of the LFO (in radians).\nSets the oscillation pattern.\nSets the phase the LFO should start at (in radians).\nThe phase the LFO should start at (in radians).\nSets the oscillation pattern.\nThe oscillation pattern.\nThe ratio between how much time the oscillator spends on …\nConfigures a tweener.\nControls a tweener.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the unique identifier for the modulator.\nThe initial value of the tweener.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStarts a transition from the current value to a target …\nBuilds a <code>ModulatorValueProvider</code> that provides fake …\nProvides values of any modulator that currently exists.\nAdds a new fake modulator to the builder and returns the …\nConsumes the builder and returns a <code>ModulatorValueProvider</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the value of the modulator with the given ID if it …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>MockModulatorValueProviderBuilder</code> with room …\nA user-defined time in seconds.\nThe end of the audio data.\nThe ending time of a region of audio.\nErrors that can occur when starting the sound.\nThe sound is played at a speed factor of the original …\nErrors that can occur when loading or streaming an audio …\nThe type that can be used to control the sound once it has …\nA trait for types that can be converted into an …\nAn error occurred while reading the file from the …\nCould not determine the default audio track in the file.\nPlayback is paused.\nThe sound is fading out, and when the fade-out is …\nA point in time in a piece of audio.\nHow quickly a sound is played.\nThe playback state of a sound.\nThe sound is playing normally.\nA portion of audio.\nThe time in samples (individual audio data points).\nThe time in seconds.\nThe sound is played faster or slower so that the pitch of …\nAn actively playing sound.\nA source of audio that is loaded, but not yet playing.\nThe sound has stopped and can no longer be resumed.\nThe sound is fading out, and when the fade-out is …\nAn error occurred when parsing the file.\nCould not determine the duration of the audio.\nCould not determine the sample rate of the audio.\nThe audio uses an unsupported channel configuration. Only …\nReturns the playback rate as a factor of the original …\nReturns the number of semitones of pitch difference this …\nThe (exclusive) ending time of the region.\nReturns <code>true</code> if the sound is finished and can be unloaded.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the type into an <code>Option&lt;Region&gt;</code>.\nConverts the loaded sound into a live, playing sound and a …\nCalled whenever a new batch of audio samples is requested …\nReturns the destination that this sound’s audio should …\nProduces the next <code>Frame</code> of audio.\nThe starting time of the region (in seconds).\nPlayable chunks of audio that are loaded into memory all …\nDecodes data gradually from an audio file.\nA piece of audio loaded into memory all at once.\nControls a static sound.\nSettings for a static sound.\nSets the tween used to fade in the sound from silence.\nAn optional fade-in from silence.\nThe raw samples that make up the audio.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the portion of the sound that should be looped.\nThe portion of the sound that should be looped.\nCreates a new <code>StaticSoundSettings</code> with the default …\nSets the destination that this sound should be routed to.\nThe destination that this sound should be routed to.\nSets the panning of the sound, where 0 is hard left and 1 …\nThe panning of the sound, where 0 is hard left and 1 is …\nFades out the sound to silence with the given tween and …\nSets the playback rate of the sound.\nThe playback rate of the sound.\nReturns the current playback position of the sound (in …\nResumes playback and fades in the sound from silence with …\nResumes playback at the given start time and fades in the …\nSets whether the sound should be played in reverse.\nWhether the sound should be played in reverse.\nThe sample rate of the audio (in Hz).\nMoves the playback position by the specified amount of …\nSets the playback position to the specified time in …\nSets the portion of the sound that will play in a loop.\nSets the panning of the sound, where <code>0.0</code> is hard left, <code>0.5</code> …\nSets the playback rate of the sound.\nSets the volume of the sound.\nSettings for the sound.\nThe portion of the sound this <code>StaticSoundData</code> represents.\nSets where in the sound playback should start.\nWhere in the sound playback should start.\nSets when the sound should start playing.\nWhen the sound should start playing.\nReturns the current playback state of the sound.\nFades out the sound to silence with the given tween and …\nSets the volume of the sound.\nThe volume of the sound.\nDecodes chunks of audio.\nErrors that can occur when decoding audio.\nA streaming sound that is not playing yet.\nControls a streaming sound.\nSettings for a streaming sound.\nDecodes the next chunk of audio.\nReturns the duration of the audio.\nSets the tween used to fade in the instance from silence.\nSets the tween used to fade in the instance from silence.\nAn optional fade-in from silence.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>StreamingSoundData</code> for a cursor wrapping audio …\nCreates a <code>StreamingSoundData</code> for a <code>Decoder</code>.\nCreates a <code>StreamingSoundData</code> for an audio file.\nCreates a <code>StreamingSoundData</code> for a type that implements …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the portion of the sound that should be looped.\nSets the portion of the sound that should be looped.\nThe portion of the sound that should be looped.\nCreates a new <code>StreamingSoundSettings</code> with the default …\nReturns the total number of samples of audio.\nReturns the number of frames in the <code>StreamingSoundData</code>.\nSets the destination that this sound should be routed to.\nSets the destination that this sound should be routed to.\nThe destination that this sound should be routed to.\nSets the panning of the sound, where 0 is hard left and 1 …\nSets the panning of the sound, where 0 is hard left and 1 …\nThe panning of the sound, where 0 is hard left and 1 is …\nFades out the sound to silence with the given tween and …\nSets the playback rate of the sound.\nSets the playback rate of the sound.\nThe playback rate of the sound.\nReturns an error that occurred while decoding audio, if …\nReturns the current playback position of the sound (in …\nResumes playback and fades in the sound from silence with …\nResumes playback at the given start time and fades in the …\nReturns the sample rate of the audio (in Hz).\nSeeks to an audio sample.\nMoves the playback position by the specified amount of …\nSets the playback position to the specified time in …\nSets the portion of the sound that will play in a loop.\nSets the panning of the sound, where <code>0.0</code> is hard left, <code>0.5</code> …\nSets the playback rate of the sound.\nSets the volume of the sound.\nSettings for the streaming sound.\nSets the portion of the audio this <code>StreamingSoundData</code> …\nThe portion of the sound this <code>StreamingSoundData</code> …\nSets where in the sound playback should start.\nSets where in the sound playback should start.\nWhere in the sound playback should start.\nSets when the sound should start playing.\nSets when the sound should start playing.\nWhen the sound should start playing.\nReturns the current playback state of the sound.\nFades out the sound to silence with the given tween and …\nSets the volume of the sound.\nSets the volume of the sound.\nThe volume of the sound.\nReturns the <code>StreamingSoundData</code> with the specified settings.\nProduces audio in a 3D space.\nReceives audio in a 3D space.\nA 3D space that audio travels through.\nThe distances from a listener at which an emitter is …\nControls a emitter.\nA unique identifier for an emitter.\nSettings for an emitter.\nSets how the emitter’s volume will change with distance.\nHow the emitter’s volume will change with distance.\nSets the distances from a listener at which the emitter is …\nThe distances from a listener at which the emitter is …\nSets whether the emitter’s output should be panned left …\nWhether the emitter’s output should be panned left or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the unique identifier for the emitter.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe distance from a listener at which an emitter becomes …\nThe distance from a listener at which an emitter outputs …\nCreates a new <code>EmitterSettings</code> with the default settings.\nSets whether the emitter should be kept alive until all …\nWhether the emitter should be kept alive until all sounds …\nReturns the ID of the spatial scene this emitter belongs …\nSets the position that audio is produced from.\nControls a listener.\nSettings for a listener.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>ListenerSettings</code> with the default settings.\nSets the rotation of the listener.\nSets the location of the listener in the spatial scene.\nSets the mixer track that the listener’s received audio …\nThe mixer track that the listener’s received audio …\nControls a spatial scene.\nA unique identifier for a spatial scene.\nSettings for a spatial scene.\nAdds an emitter to the scene.\nAdds a listener to the scene.\nSets the maximum number of emitters that can be in the …\nThe maximum number of emitters that can be in the scene at …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the unique identifier for the spatial scene.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the maximum number of listeners that can be in the …\nThe maximum number of listeners that can be in the scene …\nCreates a new <code>SpatialSceneSettings</code> with the default …\nReturns the number of emitters in the scene.\nReturns the number of listeners in the scene.\nThe main mixer track.\nAn error that’s returned when trying to change the …\nA sub-track.\nA unique identifier for a mixer sub-track.\nConfigures a mixer track.\nControls a mixer track.\nA unique identifier for a track.\nDefines how the output of a mixer sub-track will be fed …\nAdds an already built effect into this track.\nAdds an effect to the track.\nCreates a new <code>TrackRoutes</code> with no routes pre-configured.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the unique identifier for the mixer track.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>TrackBuilder</code> with the default settings.\nCreates a new <code>TrackRoutes</code> with the default settings.\nCreates a new <code>TrackRoutes</code> with a single route to the …\nSets how the output of this track should be routed to …\nSets the volume of this track’s route to another track.\nSets the (post-effects) volume of the mixer track.\nSets the volume of the track.\nAdd an already-built effect and return the <code>TrackBuilder</code>.\nAdds an effect to the track and returns the <code>TrackBuilder</code>.\nSets how much of the current track’s signal will be sent …\nRemoves the route to the specified track.\nCurves the motion of a <code>Tween</code>.\nA fixed value.\nThe value of a <code>modulator</code>.\nCauses the <code>Tween</code> to start slow, speed up, and then slow …\nCauses the <code>Tween</code> to start slow, speed up, and then slow …\nCauses the <code>Tween</code> to start slow and speed up. A higher …\nCauses the <code>Tween</code> to start slow and speed up. A higher …\nMaintains a constant speed for the duration of the <code>Tween</code>.\nA transformation from a modulator’s value to a parameter …\nCauses the <code>Tween</code> to start fast and slow down. A higher …\nCauses the <code>Tween</code> to start fast and slow down. A higher …\nManages and updates a value that can be smoothly …\nDescribes a smooth transition between values.\nA trait for types that can be smoothly interpolated.\nA value that a parameter can be linked to.\nWhether values should be prevented from being less than …\nWhether values should be prevented from being greater than …\nThe duration of the motion.\nThe curve of the motion.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Value::FromModulator</code> from a modulator ID or …\nA range of values from a modulator.\nReturns an linearly interpolated value between <code>a</code> and <code>b</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTransforms an input value to an output value using this …\nCreates a new <code>Parameter</code> with an initial <code>Value</code>.\nThe corresponding range of values of the parameter.\nReads a <code>ValueChangeCommand</code> from a <code>CommandReader</code>, and if …\nStarts a transition from the current value to the target …\nWhen the motion starts.\nConverts a <code>Value&lt;T&gt;</code> to a <code>Value&lt;T2&gt;</code>.\nConverts a <code>ModulatorMapping&lt;T&gt;</code> to a <code>ModulatorMapping&lt;T2&gt;</code>.\nUpdates any in-progress transitions and keeps the value …\nReturns the current actual value of the parameter.\nThe modulator to link to.\nHow the modulator’s value should be converted to the …\nGame is starting\nJoin server\nThe type of the <code>LAN_MATCHMAKER</code> channel.\nA request that may be sent to the <code>LAN_MATCHMAKER</code>.\nA response that may come from the <code>LAN_MATCHMAKER</code>.\nServer player count\nService discover info and ping.\nServer started\nReceiver for LAN service discovery channel.\nStart matchmaker server\nStop joining match\nStop matchmaking server\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nJoin a server hosted by someone else.\nLeave a joined server.\nThe ping in milliseconds\nGet the current host info or create a new one. When there…\nUpdate server pings and turn on service discovery.\nmutli-cast dns service discover info.\nHost a server.\nStop hosting a server.\nWait for a joined game to start.\nWait for players to join a hosted server.\nNode Addr\nmatch player count\nGame player count\nLocal player index\nLan socket to game\nOnline matchmaker channel\nChannel to exchagne messages with matchmaking server\nOnline matchmaker request\nOnline matchmaker response\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSearch for game with <code>matchmaking_server</code> and <code>player_count</code>\nStop searching for game\nUpdate state of game matchmaking, update <code>search_state</code>, …\nCall the given function with the arguments in the stack. …\nExecution state passed to callbacks when they are run by …\nThe entry-point for the Lua VM.\nA counter for tracking the amount of time spent in …\nThere is an active thread in the <code>ThreadMode::Normal</code> state …\nThread has an active Lua, Callback, or Sequence frame.\nSequence pending, <code>Sequence::poll</code> will be called on the …\nLua has errored or returned (or yielded) values that must …\nThe thread has an error or has returned (or yielded) …\nSequence finished, the values in the stack will be …\nThe <code>Executor</code> is currently inside its own <code>Executor::step</code> …\nA callback or sequence that this thread owns is currently …\nThere are no threads being run and the <code>Executor</code> must be …\nNo frames are on the thread and there are no available …\nThe main thread has yielded and is waiting on being …\nThread has yielded and is waiting on being resumed.\nThe thread is waiting on another thread to finish.\nYield the values in the stack inside a coroutine. If …\nAdd to or subtract from the current remaining fuel.\nSubtract from the current remaining fuel.\nCreate a new <code>Lua</code> instance with the core stdlib loaded.\nThe curently executing Thread.\nCreate a new <code>Lua</code> instance with no parts of the stdlib …\nEnter the garbage collection arena and perform some …\nCalled if a sub-function errors to handle the error, or if …\nRun the given executor to completion and then take return …\nThe curently running Executor.\nThis operation always returns a Number, even when called …\nCalls <code>ctx.registry().fetch(f)</code>.\n“Fetch” the real value for a handle that has been …\nRun the given executor to completion.\nThis operation always returns a Number, even when called …\nThis operation returns an Integer only if both arguments …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe fuel parameter passed to <code>Executor::step</code>.\nCreate a new <code>Lua</code> instance with all of the stdlib loaded.\nFinish the current collection cycle completely, calls …\nCalls <code>ctx.globals().get(ctx, key)</code>.\nCalls <code>ctx.interned_strings().intern(&amp;ctx, s)</code>.\nCalls <code>ctx.interned_strings().intern_static(&amp;ctx, s)</code>.\nMarks that the calling <code>Executor</code> should immediately stop …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate over the key-value pairs of the table.\nReturns a ‘border’ for this table.\nCompile a top-level closure from source, using the globals …\nLoad the core parts of the stdlib that do not allow …\nLoad the parts of the stdlib that allow I/O.\nCompile a top-level closure from source, using the given …\nComputes the Lua modulus (<code>%</code>) operator. This is unlike Rust…\nCreate a top-level closure, prototype must not have any …\nCreates a new <code>Executor</code> with a stopped main thread.\nReturns the next value after this key in the table order.\nCalled when a <code>Sequence</code> is first run with the stack …\nRefills fuel up to a given maximum and also clears the …\nReset this <code>Executor</code> entirely and begins running the given …\nIf this thread is in any other mode than <code>Running</code>, reset …\nReset this <code>Executor</code> entirely and begins running the given …\nIf the thread is in <code>Suspended</code> mode, resume it.\nIf the thread is in <code>Suspended</code> mode, cause an error …\nCreates a new <code>Executor</code> that begins running the given …\nCalls <code>ctx.globals().set(ctx, key, value)</code>.\nReturns true if we have positive fuel remaining <em>and</em> we …\nCalls <code>ctx.registry().singleton::&lt;S&gt;(ctx)</code>.\nCreate an instance of a type that exists at most once per …\nCreates a new <code>Executor</code> with a new <code>Thread</code> running the given …\nIf this thread is <code>Stopped</code>, start a new function with the …\nIf this thread is <code>Stopped</code>, start a new suspended function.\nCalls <code>ctx.registry().stash(ctx, s)</code>.\n“Stash” a value with a <code>&#39;gc</code> branding lifetime, creating …\nRuns the VM for a period of time controlled by the <code>fuel</code> …\nReset this <code>Executor</code> entirely, leaving it with a stopped …\nIf the thread is in the <code>Result</code> mode, take the returned (or …\nLua <code>nil</code> and <code>false</code> are false, anything else is true.\nInterprets Numbers, Integers, and Strings as an Integer, …\nInterprets Numbers, Integers, and Strings as an Integer, …\nInterprets Numbers, Integers, and Strings as a Number, if …\nInterprets Numbers, Integers, and Strings as a Number, if …\nSize of all memory used by this Lua context.\nA version of <code>Lua::enter</code> that expects failure and also …\nIf the function we are returning to is Lua, returns …\nA <code>Gc</code> pointer to any type <code>T: Collect + &#39;gc</code> which allows …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCall the given function with the arguments in the stack. …\nSequence pending, <code>Sequence::poll</code> will be called on the …\nSequence finished, the values in the stack will be …\nYield the values in the stack inside a coroutine. If …\nCalled if a sub-function errors to handle the error, or if …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalled when a <code>Sequence</code> is first run with the stack …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA 0-indexed line number of the current source input.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaps OpCodes to source code line numbers.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNumerals are only lexed as integers in the range […\nA 0-indexed line number of the current source input.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCurrent line number of the source file.\nReads the next token, or None if the end of the source has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWrapper for a <code>Constant</code> that implements Hash and Eq, and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA counter for tracking the amount of time spent in …\nReads a Lua script from a <code>R: Read</code> and wraps it in a …\nTakes an <code>R: BufRead</code> and:\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCall the given function with arguments placed after it, …\nConcatenate the given arguments into a string\nUsed to set up for a generic for loop:\nUsed to iterate a generic for loop:\nUsed for calling methods on tables: R(base + 1) = R(table) …\nUsed to iterate a numeric for loop:\nUsed to set up for a numeric for loop:\nSet elements of a table as a list.\nEffectively, call the given function with the arguments …\nTest the register as a boolean, if its boolean value …\nTest the value at the <code>value</code> register as a boolean, if its …\nPlaces the contents of the “varargs” at the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA set of shared, immutable <code>String</code> values that are …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExecution state passed to callbacks when they are run by …\nThe entry-point for the Lua VM.\nThere is an active thread in the <code>ThreadMode::Normal</code> state …\nThread has an active Lua, Callback, or Sequence frame.\nLua has errored or returned (or yielded) values that must …\nThe thread has an error or has returned (or yielded) …\nThe <code>Executor</code> is currently inside its own <code>Executor::step</code> …\nA callback or sequence that this thread owns is currently …\nThere are no threads being run and the <code>Executor</code> must be …\nNo frames are on the thread and there are no available …\nThe main thread has yielded and is waiting on being …\nThread has yielded and is waiting on being resumed.\nThe thread is waiting on another thread to finish.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA 16 bit index into the constant table\nAn 8 bit index into the constant table\nA one byte Option value that can either be Some(0-254) or …\nAn index into the prototype table\nAn index that points to a register in the stack relative …\nAn index into the upvalue table\nCount of arguments or return values which can either be a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA newtype around <code>Vec2</code> that implements <code>From&lt;u16&gt;</code> and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the active locale for the system or application.\nReturns the preferred locales for the system or …\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nEnum representing available character direction …\nLeft To Right\n<code>LanguageIdentifier</code> is a core struct representing a Unicode …\nEnum with errors that can be returned by …\nA parser error.\nRight To Left\nTop To Bottom\nAn unknown error - currently covers all-but parser errors.\nThis is a best-effort operation that performs all …\nReturns character direction of the <code>LanguageIdentifier</code>.\nClears variant subtags of the <code>LanguageIdentifier</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA constructor which takes a utf8 slice, parses it and …\nA constructor which takes optional subtags as <code>AsRef&lt;[u8]&gt;</code>, …\nUnchecked\nTests if a variant subtag is present in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>LanguageIdentifier</code> and produces raw internal …\nCompares a <code>LanguageIdentifier</code> to another …\nSets variant subtags of the <code>LanguageIdentifier</code>.\nReturns a vector of variants subtags of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSafety\nSafety\nSafety\nSafety\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMetadata describing a border image.\nA button rendered with a <code>BorderImageMeta</code>\nA 9-patch style bordered frame.\nThe border images to use for a <code>ButtonThemeMeta</code> when the …\nMetadata describing a themed button.\nA margin specification.\nThe size of the border on each side.\nThe border images to use for different button states.\nThe bottom margin.\nWhen the button is clicked on.\nThe default button state.\nWhen the button is hovered for focused on.\nThe font family, size, and color to use for the button.\nThe image for the border.\nThe size of the border image in pixels.\nThe left margin.\nThe amount of space to pad around the internal edges of …\nThe right margin.\nThe scale to render the border image at.\nThe top margin.\nReturns the argument unchanged.\nInstalls profiler ui plugins\nCalls <code>U::from(self)</code>.\nNotify profilers we are at frame boundary\nInstall the profiler UI to profiler session.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOptionally provide map_pool to restart game with. If not …\nBinds inputs to player actions\nGlobal settings, stored and accessed through <code>Storage</code>.\nReturn an iterator for PlayerControlSetting for all …\nThe scaling factor for sound effects.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhether to display the game fullscreen.\nSettings plugin\nControls for game remotes\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nControls for keyboard player 1\nControls for keyboard player 2\nStartup system to load the game settings or use the …\nThe main scaling factor for all game audios. This is done …\nThe address of the matchmaking server to connect to for …\nThe scaling factor for music.\nThe player controller bindings\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSystem for rendering player image in UI\nWhich page of the menu we are on\nshadow-rs mod\nReturns the argument unchanged.\nReturns the argument unchanged.\nSystem to render the home menu.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndicates the client is waiting for the map to be …\nThe name of the Git branch that this project was built …\nOperating system and architecture on which the project was …\nThe debug configuration with which the project was built. …\nThe target for this build. This is possibly distinct from …\nThe architecture of the target for this build. This is the …\nThe project build time, formatted in modified ISO 8601 …\nThe project build time, formatted according to RFC 2822 …\nThe project build time, formatted according to RFC 3339 …\nThe directory of the Cargo.toml manifest file of the …\nThe dependency tree of the project, as output by <code>cargo tree</code>…\nThe cargo version which which the project was built, as …\nA long version string describing the project. The version …\nThe author of the Git commit that this project was built …\nThe time of the Git commit that this project was built …\nThe name of the Git branch that this project was built …\nThe name of the Git branch that this project was built …\nThe e-mail address of the author of the Git commit that …\nThe full commit hash of the Git commit that this project …\nWhether the Git working tree was clean at the time of …\nThe Git working tree status as a list of files with their …\nThe name of the last Git tag on the branch that this …\nThe project’s description, as determined by the …\nThe project’s full version string, as determined by the …\nThe project’s semver major version, as determined by the …\nThe project’s semver minor version, as determined by the …\nThe project’s semver patch version, as determined by the …\nThe project’s semver pre-release version, as determined …\nThe project name, as determined by the Cargo.toml manifest.\nThe Rustup toolchain with which the project was built. …\nRust version with which the project was built. The version …\nThe short hash of the Git commit that this project was …\nThe name of the Git tag that this project was built from. …\nA long version string describing the project. The version …\nPrints all built-in <code>shadow-rs</code> build constants to standard …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNetwork message that may be sent when selecting a map.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSend a MapSelectMessage over network if local player has …\nNetwork message that may be sent during player selection.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCache of available hats from the game and packs.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCache of available players from the game and packs.\nWhich settings tab we are on\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe kind of input binding to listen for.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNetwork message that may be sent when selecting a map.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper for pausing session depending on if online or …\nThe width of each player panel\nIf Player won the match or is tied for win\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReset menu state")