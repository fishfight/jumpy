searchState.loadedDescShard("jumpy", 2, "Predicts the next position of this rigid-body, by …\nThe maximal distance separating two objects that will …\nThe angular inertia along the principal inertia axes and …\nProjects a point on <code>self</code>.\nProjects a point on the boundary of <code>self</code> and returns the …\nProjects a point on <code>self</code>.\nProjects a point on <code>self</code>, with a maximum projection …\nProjects a point on <code>self</code>, with a maximum projection …\nPerform a point projection assuming a solid interior based …\nProjects a point on <code>self</code>, unless the projection lies …\nProjects a point on <code>self</code> transformed by <code>m</code>, unless the …\nProjects a point on <code>self</code> transformed by <code>m</code>.\nFind the projection of a point on the closest collider.\nProjects a point on the boundary of <code>self</code> transformed by <code>m</code> …\nFind the projection of a point on the closest collider.\nProjects a point on <code>self</code> transformed by <code>m</code>.\nProjects a point on <code>self</code> transformed by <code>m</code>, with a maximum …\nProjects a point on <code>self</code> transformed by <code>m</code>, unless the …\nUpdate colliders positions after rigid-bodies moved.\nThe approximate kinetic energy of this rigid-body.\nGets the acceleration structure of the composite shape.\nThe acceleration structure used by this triangle-mesh.\nThe acceleration structure used by this compound shape.\nThe query dispatcher used by this narrow-phase to select …\nThe query dispatcher used by this query pipeline for …\nThe radius of the ball.\nThe radius of the capsule.\nThe range of connected components. …\nThe underlying raw graph structure of this interaction …\nRecompute the mass-properties of this rigid-bodies based …\nRecompute the mass-properties of this rigid-bodies based …\nThe relative dominance of the bodies involved in this …\nRemoves the specified flags in-place.\nRemoves a joint from this set.\nRemoves an multibody_joint from this set.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves a rigid-body, and all its attached colliders and …\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemove a collider from this set and update its parent …\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nDeletes all the impulse_joints attached to the given …\nRemoves all the multibody joints attached to a rigid-body.\nRemoves all the multibody_joints from the multibody the …\nWas at least one of the colliders involved in the …\nRender the scene.\nCreates a new debug-render pipeline that renders everything\nRender only the colliders from the scene.\nRender contact.\nRender only the joints from the scene.\nRender only the rigid-bodies from the scene.\nResets to zero all the constant (linear) forces manually …\nResets to zero all the constant torques manually applied …\nThe restitution coefficient of this collider.\nSets the restitution coefficient of the collider this …\nThe restitution coefficient of this collider.\nThe effective restitution coefficient at this contact …\nThe restitution coefficient of the collider to be built.\nThe combine rule used by this collider to combine its …\nSets the rule to be used to combine two restitution …\nThe rule applied to combine the restitution coefficients …\nThe rule used to combine two restitution coefficients.\nLocks or unlocks rotations of this rigid-body along each …\nLocks or unlocks rotations of this rigid-body along each …\nOnly allow translations of this rigid-body around specific …\nReverse the orientation of the triangle mesh.\nReverse the orientation of this polyline by swapping the …\nThe handle of the first body involved in the potential …\nThe handle of the first body involved in the potential …\nThe first rigid-body involved in this contact manifold.\nThe handle of the first body involved in the potential …\nThe handle of the first body involved in the potential …\nThe second rigid-body involved in this contact manifold.\nThe length of the local coordinate axes rendered for a …\nThe handle of the rigid-body of this link.\nReturns the link of this multibody attached to the given …\nThe first link of this multibody.\nThe <code>Aabb</code> of this heightfield.\nMutable reference to the first link of this multibody.\nThe rotational part of this rigid-body’s position.\nSets the initial orientation of the rigid-body to be …\nThe rotational part of this collider’s position.\nSets the initial orientation of the collider to be created.\nThe pure rotational part of this isometry.\nInitializes a compound shape obtained from the …\nInitializes a collider builder with a compound shape …\nInitializes a compound shape obtained from the …\nInitializes a collider builder with a compound shape …\nCreates a new shared shape with rounded corners that is the\nInitializes a new collider builder with a round 2D convex …\nCreates a new shared shape with round corners that is a …\nCreates a new collider builder that is a round convex …\nInitialize a round cuboid shape defined by its …\nInitialize a new collider builder with a round cuboid …\nInitializes a triangle shape with round corners.\nInitializes a collider builder with a triangle shape with …\nThe scale factor applied to this heightfield.\nReturns a scaled version of this triangle mesh.\nComputes a scaled version of this half-space.\nComputes a scaled version of this polyline.\nComputes a scaled version of this convex polygon.\nReturns a scaled version of this heightfield.\nGet the <code>i</code>-th segment of this mesh.\nInitialize a segment shape from its endpoints.\nInitializes a collider builder with a segment shape.\nThe endpoints of the capsule’s principal axis.\nThe i-th segment of the heightfield if it has not been …\nTransforms  the feature-id of a segment to the feature-id …\nAn iterator through all the segments of this mesh.\nIterator through all the segments of this heightfield.\nWas at least one of the colliders involved in the …\nSets whether or not the collider built by this builder is …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nSets the collision types enabled for this collider.\nSets the events enabled for this collider.\nSets the physics hooks enabled for this collider.\nSets the rigid-body’s additional mass.\nSets the rigid-body’s additional mass-properties.\nSet the additional number of solver iterations run for …\nSets the angular damping coefficient of this rigid-body.\nThe angular velocity of this rigid-body.\nSets the type of this rigid-body.\nSets the collision groups of this collider.\nSets the total force magnitude beyond which a contact …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets whether contacts between the attached rigid-bodies …\nSets the uniform density of this collider.\nThe dominance group of this rigid-body.\nSets the time-stepping length.\nSet whether this joint is enabled or not.\nSets whether this rigid-body is enabled or not.\nSets whether or not this collider is enabled.\nLocks or unlocks rotations of this rigid-body along each …\nLocks or unlocks rotations of this rigid-body along each …\nSets the flags of this triangle mesh, controlling its …\nSets the friction coefficient of this collider.\nSets the combine rule used by this collider to combine its …\nSets the gravity scale facter for this rigid-body.\nSets the internal index associated to this collider by the …\nSets the inverse time-stepping length (i.e. the frequency).\nSets the joint limits along the specified axis.\nSets the <code>[min,max]</code> limit distances attached bodies can …\nSets the <code>[min,max]</code> limit angle attached bodies can …\nSets the linear damping coefficient of this rigid-body.\nThe linear velocity of this rigid-body.\nSets the joint’s anchor, expressed in the local-space of …\nSets anchor of this joint, expressed in the first …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets anchor of this joint, expressed in the second …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the joint’s anchor, expressed in the local-space of …\nSets the principal (local X) axis of this joint, expressed …\nSets the principal axis of the joint, expressed in the …\nSets the principal (local X) axis of this joint, expressed …\nSets the principal axis of the joint, expressed in the …\nSets the joint’s frame, expressed in the first …\nSets the joint’s frame, expressed in the first …\nSets joint’s frame, expressed in the second …\nSets the joint’s frame, expressed in the second …\nSets the axes along which this rigid-body cannot translate …\nChanges the mass on these mass-properties.\nSets the mass of this collider.\nSets the mass properties of this collider.\nSets the maximum allowed distance between the attached …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nConfigure both the target angle and target velocity of the …\nSets the maximum force the motor can deliver along the …\nSets the maximum force the motor can deliver.\nSets the maximum force the motor can deliver.\nSets the maximum force the motor can deliver.\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSet the spring-like model used by the motor to reach the …\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target angle this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nSets the target velocity this motor needs to reach.\nIf this rigid body is kinematic, sets its future position …\nIf this rigid body is kinematic, sets its future …\nIf this rigid body is kinematic, sets its future …\nSets the parent of the given collider.\nSets the position and <code>next_kinematic_position</code> of this …\nSets the position of this collider.\nSets the position of this collider with respect to its …\nSets the restitution coefficient of this collider.\nSets the combine rule used by this collider to combine its …\nSets the rotational part of this rigid-body’s position.\nSets the rotational part of this collider’s position.\nSets the rotational part of this collider’s rotaiton …\nSets the scale factor applied to this heightfield.\nMark the i-th segment of this heightfield as removed or …\nSets whether or not this is a sensor collider.\nSets the shape of this collider.\nSets the solver groups of this collider.\nSet the spring model used by this joint to reach the …\nSets the translational part of this rigid-body’s …\nSets the translational part of this collider’s position.\nSets the translational part of this collider’s …\nThe geometric shape of this collider.\nThe shape of the collider to be built.\nA mutable reference to the geometric shape of this …\nGets the type tag of this shape.\nThe shapes of this compound shape.\nRetrieve the SharedShape. Also see the <code>shape()</code> function\nPut this rigid-body to sleep.\nPut this rigid body to sleep.\nIf a rigid-body is sleeping, its attached entities will …\nSets whether or not the rigid-body is to be created asleep.\nIs this body sleeping?\nWhether or not the rigid-body is to be created asleep.\nThe solver contacts that can be modified.\nThe contacts that will be seen by the constraints solver …\nFlags used to control some aspects of the constraints …\nThe solver groups used by this collider.\nSets the solver groups used by this collider.\nThe groups controlling the pairs of collider that have …\nThe solver groups for the collider being built.\nSet the spring used by this joint to reach the desired …\nThe left-most x-coordinate of this heightfield.\nIs this a <code>Started</code> collision event?\nThe way the time-of-impact computation algorithm …\nExecutes one step of the collision detection.\nExecutes one timestep of the physics simulation.\nThe stiffness coefficient of the motor’s spring-like …\nIs this a <code>Stopped</code> collision event?\nThe style used to compute the line colors for each element …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nThe number of subdivision used to approximate the curved …\nThe first subshape involved in this contact manifold.\nThe second subshape involved in this contact manifold.\nIf the first shape involved is a composite shape, this …\nIf the second shape involved is a composite shape, this …\nGet the ID of the feature with a normal that maximizes the …\nSame as <code>self.support_point</code> except that <code>dir</code> is normalized.\nSwaps the two collider handles in <code>self</code>.\nConfigures the integration parameters to match the new “…\nConfigures the integration parameters to match the old PGS …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nThe friction impulse along the vector orthonormal to the …\nThe desired tangent relative velocity at the contact point.\nThe target position of the motor.\nThe target velocity of the motor.\nTest whether contact should be computed between two …\nCheck if interactions should be allowed based on the …\nTests if the given collider should be taken into account …\nApplies the filters described by <code>self</code> to a collider to …\nTighten this bounding volume.\nCreates a new, tightened version, of this bounding volume.\nSince how much time can this body sleep?\nThe amount of time the rigid-body must remain below the …\nDiscretize the boundary of this round cuboid as a …\nDiscretize the boundary of this round convex polygon as a …\nRasterize this heightfield as a (potentially …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nThe time of impact of the ray with the object. The exact …\nThe time at which the objects touch.\nReturns the topology information of this trimesh, if it …\nAccumulation of external torques (only for dynamic bodies).\nThe sum of all the forces between the two colliders.\nThe sum of the magnitudes of each force between the two …\nThe sum of all the impulses applied by contacts on this …\nThe sum of the magnitudes of the contacts on this contact …\nTransform each element of the mass properties.\nTransforms the vertices of <code>self</code> by the given position <code>pos</code>.\nTransforms in-place the vertices of this triangle mesh.\nReturn <code>self</code> rotated by <code>rotation</code>.\nThe translational part of this rigid-body’s position.\nSets the initial translation of the rigid-body to be …\nThe translational part of this collider’s position.\nSets the initial translation of the collider to be created.\nThe pure translational part of this isometry.\nGet the <code>i</code>-th triangle of this mesh.\nInitializes a triangle shape.\nInitializes a collider builder with a triangle shape.\nAn iterator through all the triangles of this mesh.\nInitializes a triangle mesh shape defined by its vertex …\nInitializes a collider builder with a triangle mesh shape …\nInitializes a triangle mesh shape defined by its vertex …\nInitializes a collider builder with a triangle mesh shape …\nThis half-edge twin on the adjacent triangle.\nThe range of segment ids that may intersect the given …\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nThe width of a single cell of this heightfield, without …\nInitializes and generate the velocity constraints …\nInitializes and generate the velocity constraints …\nUnpacks this feature id into an explicit enum.\nRetrieves the value of the identifier if <code>self</code> is a face.\nRevries the value of the identifier if <code>self</code> is a vertex.\nUpdates the broad-phase.\nUpdates the broad-phase, taking into account the new …\nUpdate the acceleration structure on the query pipeline.\nHelper function to update <code>self</code> to emulate a …\nUpdates the set of bodies that needs CCD to be resolved.\nUpdate the query pipeline incrementally, avoiding a …\nUpdate the positions of all the colliders attached to this …\nUpdate the acceleration structure on the query pipeline.\nUpdate the world-space mass properties of <code>self</code>, taking …\nAn arbitrary user-defined 128-bit integer associated to …\nAn arbitrary user-defined 128-bit integer associated to …\nSets an arbitrary user-defined 128-bit integer associated …\nUser-defined data attached to the manifold.\nUser-defined data associated to this joint.\nUser-defined data associated to this rigid-body.\nAn arbitrary user-defined 128-bit integer associated to …\nA user-defined piece of data.\nUser-defined data associated to this collider.\nThe user-data of the collider being built.\nRetrieves the constant force(s) that the user has added to …\nForces applied by the user.\nRetrieves the constant torque(s) that the user has added …\nTorque applied by the user.\nThe translation coordinates, i.e., how much is added to a …\nConstruct a fixed-size column vector directly from data.\nThe velocity of the given world-space point on this …\nThe velocity of the given world-space point on this …\nInitialize and generate velocity constraints to enforce, …\nConverts a vertex feature id into a packed feature id.\nThe first vertex of this edge.\nThe vertex buffer of this mesh.\nThe vertex buffer of this mesh.\nThe vertices of this half-edge representation.\nUp to two vertices forming this polygonal feature.\nThe feature IDs of this polygon’s vertices.\nThe volume (or surface in 2D) of this collider.\nForces the specified rigid-body to wake up if it is …\nWakes up this rigid-body.\nWakes up this rigid body if it is sleeping.\nSets the interaction mask of this filter.\nCreates a new triangle mesh from a vertex buffer and an …\nSets the group this filter is part of.\nInitializes a CCD solver with a custom <code>QueryDispatcher</code> …\nCreates a new empty narrow-phase with a custom query …\nInitializes an empty query pipeline with a custom …\nThe local-space closest point on the first shape at the …\nThe local-space closest point on the second shape at the …\nThe world-space center of mass of the rigid-body.\nThe world-space center of mass of the rigid-body.\nThe world-space inverse angular inertia tensor of the …\nVelocities set to zero.\nConstructs a pair of artificial handles that are not …\nThe time used to integrate the rigid-body’s velocity and …\nThe edge shared between the two triangles.\nThe first triangle, with an orientation opposite to the …\nThe second triangle, with an orientation opposite to the …\nTrait implemented by rotations that can be used inside of …\nA 2D affine transformation. Stored as a homogeneous 3x3 …\nA 3D affine transformation. Stored as a homogeneous 4x4 …\nA array-based statically sized matrix data storage.\nThe bidiagonalization of a general matrix.\nThe column-stride of the owned data storage for a buffer …\nThe static stride of this storage’s columns.\nThe Cholesky decomposition of a …\nTrait <strong>alias</strong> for <code>Add</code> and <code>AddAssign</code> with result of type <code>Self</code>.\nTrait <strong>alias</strong> for <code>Div</code> and <code>DivAssign</code> with result of type <code>Self</code>.\nTrait <strong>alias</strong> for <code>Mul</code> and <code>MulAssign</code> with result of type <code>Self</code>.\nTrait <strong>alias</strong> for <code>Sub</code> and <code>SubAssign</code> with result of type <code>Self</code>.\nThe QR decomposition (with column pivoting) of a general …\nA complex number in Cartesian form.\nTrait shared by all complex fields and its subfields (like …\nA dynamically sized column-major matrix.\nA column-major matrix slice dynamic numbers of rows and …\nA column-major matrix slice dynamic numbers of rows and …\nA column-major matrix view dynamic numbers of rows and …\nA column-major matrix view dynamic numbers of rows and …\nA dynamically sized column vector.\nA column vector slice dynamic numbers of rows and columns.\nA column vector slice dynamic numbers of rows and columns.\nA column vector view dynamic numbers of rows and columns.\nA column vector view dynamic numbers of rows and columns.\nAn allocator based on <code>ArrayStorage</code> and <code>VecStorage</code> for …\nTrait implemented by any type that can be used as a …\nTrait implemented exclusively by type-level integers.\nA range with a size that may be known at compile-time.\nA dual quaternion.\nDim of dynamically-sized algebraic entities.\nThe type of the elements of each lane of this SIMD value.\nEuclidean norm.\nTrait implemented by fields, i.e., complex numbers and …\nLU decomposition with full row and column pivoting.\nHessenberg decomposition of a general matrix.\nA constant <code>Complex</code> <em>i</em>, the imaginary unit.\nMarker trait indicating that a storage is stored …\nTrait implemented by <code>Dyn</code>.\nTrait implemented by <code>Dyn</code> and type-level integers different …\nA direct isometry, i.e., a rotation followed by a …\nA 2-dimensional direct isometry using a unit complex …\nA 3-dimensional direct isometry using a unit quaternion …\nA 2-dimensional direct isometry using a rotation matrix …\nA 3-dimensional direct isometry using a rotation matrix …\nLU decomposition with partial (row) pivoting.\nLp norm.\nThe most generic column-major matrix (and vector) type.\nA stack-allocated, column-major, 1x1 square matrix.\nA stack-allocated, column-major, 1x2 matrix.\nA stack-allocated, column-major, 1x3 matrix.\nA stack-allocated, column-major, 1x4 matrix.\nA stack-allocated, column-major, 1x5 matrix.\nA stack-allocated, column-major, 1x6 matrix.\nA heap-allocated, column-major, matrix with 1 rows and a …\nA stack-allocated, column-major, 2x2 square matrix.\nA stack-allocated, column-major, 2x1 matrix.\nA stack-allocated, column-major, 2x3 matrix.\nA stack-allocated, column-major, 2x4 matrix.\nA stack-allocated, column-major, 2x5 matrix.\nA stack-allocated, column-major, 2x6 matrix.\nA heap-allocated, column-major, matrix with 2 rows and a …\nA stack-allocated, column-major, 3x3 square matrix.\nA stack-allocated, column-major, 3x1 matrix.\nA stack-allocated, column-major, 3x2 matrix.\nA stack-allocated, column-major, 3x4 matrix.\nA stack-allocated, column-major, 3x5 matrix.\nA stack-allocated, column-major, 3x6 matrix.\nA heap-allocated, column-major, matrix with 3 rows and a …\nA stack-allocated, column-major, 4x4 square matrix.\nA stack-allocated, column-major, 4x1 matrix.\nA stack-allocated, column-major, 4x2 matrix.\nA stack-allocated, column-major, 4x3 matrix.\nA stack-allocated, column-major, 4x5 matrix.\nA stack-allocated, column-major, 4x6 matrix.\nA heap-allocated, column-major, matrix with 4 rows and a …\nA stack-allocated, column-major, 5x5 square matrix.\nA stack-allocated, column-major, 5x1 matrix.\nA stack-allocated, column-major, 5x2 matrix.\nA stack-allocated, column-major, 5x3 matrix.\nA stack-allocated, column-major, 5x4 matrix.\nA stack-allocated, column-major, 5x6 matrix.\nA heap-allocated, column-major, matrix with 5 rows and a …\nA stack-allocated, column-major, 6x6 square matrix.\nA stack-allocated, column-major, 6x1 matrix.\nA stack-allocated, column-major, 6x2 matrix.\nA stack-allocated, column-major, 6x3 matrix.\nA stack-allocated, column-major, 6x4 matrix.\nA stack-allocated, column-major, 6x5 matrix.\nA heap-allocated, column-major, matrix with 6 rows and a …\nThe type of the result of a matrix cross product.\nAn owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …\nAn owned matrix column-major matrix with <code>D</code> columns.\nA matrix slice.\nA column-major 1x1 matrix slice.\nA column-major 1x2 matrix slice.\nA column-major 1x3 matrix slice.\nA column-major 1x4 matrix slice.\nA column-major 1x5 matrix slice.\nA column-major 1x6 matrix slice.\nA column-major matrix slice with 1 row and a number of …\nA column-major 2x2 matrix slice.\nA column-major 2x1 matrix slice.\nA column-major 2x3 matrix slice.\nA column-major 2x4 matrix slice.\nA column-major 2x5 matrix slice.\nA column-major 2x6 matrix slice.\nA column-major matrix slice with 2 rows and a number of …\nA column-major 3x3 matrix slice.\nA column-major 3x1 matrix slice.\nA column-major 3x2 matrix slice.\nA column-major 3x4 matrix slice.\nA column-major 3x5 matrix slice.\nA column-major 3x6 matrix slice.\nA column-major matrix slice with 3 rows and a number of …\nA column-major 4x4 matrix slice.\nA column-major 4x1 matrix slice.\nA column-major 4x2 matrix slice.\nA column-major 4x3 matrix slice.\nA column-major 4x5 matrix slice.\nA column-major 4x6 matrix slice.\nA column-major matrix slice with 4 rows and a number of …\nA column-major 5x5 matrix slice.\nA column-major 5x1 matrix slice.\nA column-major 5x2 matrix slice.\nA column-major 5x3 matrix slice.\nA column-major 5x4 matrix slice.\nA column-major 5x6 matrix slice.\nA column-major matrix slice with 5 rows and a number of …\nA column-major 6x6 matrix slice.\nA column-major 6x1 matrix slice.\nA column-major 6x2 matrix slice.\nA column-major 6x3 matrix slice.\nA column-major 6x4 matrix slice.\nA column-major 6x5 matrix slice.\nA column-major matrix slice with 6 rows and a number of …\nA mutable matrix slice.\nA column-major 1x1 matrix slice.\nA column-major 1x2 matrix slice.\nA column-major 1x3 matrix slice.\nA column-major 1x4 matrix slice.\nA column-major 1x5 matrix slice.\nA column-major 1x6 matrix slice.\nA column-major matrix slice with 1 row and a number of …\nA column-major 2x2 matrix slice.\nA column-major 2x1 matrix slice.\nA column-major 2x3 matrix slice.\nA column-major 2x4 matrix slice.\nA column-major 2x5 matrix slice.\nA column-major 2x6 matrix slice.\nA column-major matrix slice with 2 rows and a number of …\nA column-major 3x3 matrix slice.\nA column-major 3x1 matrix slice.\nA column-major 3x2 matrix slice.\nA column-major 3x4 matrix slice.\nA column-major 3x5 matrix slice.\nA column-major 3x6 matrix slice.\nA column-major matrix slice with 3 rows and a number of …\nA column-major 4x4 matrix slice.\nA column-major 4x1 matrix slice.\nA column-major 4x2 matrix slice.\nA column-major 4x3 matrix slice.\nA column-major 4x5 matrix slice.\nA column-major 4x6 matrix slice.\nA column-major matrix slice with 4 rows and a number of …\nA column-major 5x5 matrix slice.\nA column-major 5x1 matrix slice.\nA column-major 5x2 matrix slice.\nA column-major 5x3 matrix slice.\nA column-major 5x4 matrix slice.\nA column-major 5x6 matrix slice.\nA column-major matrix slice with 5 rows and a number of …\nA column-major 6x6 matrix slice.\nA column-major 6x1 matrix slice.\nA column-major 6x2 matrix slice.\nA column-major 6x3 matrix slice.\nA column-major 6x4 matrix slice.\nA column-major 6x5 matrix slice.\nA column-major matrix slice with 6 rows and a number of …\nA column-major matrix slice with <code>R</code> rows and <code>C</code> columns.\nA column-major matrix slice with <code>D</code> rows and columns.\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nA column-major matrix slice with a number of rows chosen …\nThe type of the result of a matrix sum.\nRenamed to <code>VecStorage</code>.\nA matrix view.\nA column-major 1x1 matrix view.\nA column-major 1x2 matrix view.\nA column-major 1x3 matrix view.\nA column-major 1x4 matrix view.\nA column-major 1x5 matrix view.\nA column-major 1x6 matrix view.\nA column-major matrix view with 1 row and a number of …\nA column-major 2x2 matrix view.\nA column-major 2x1 matrix view.\nA column-major 2x3 matrix view.\nA column-major 2x4 matrix view.\nA column-major 2x5 matrix view.\nA column-major 2x6 matrix view.\nA column-major matrix view with 2 rows and a number of …\nA column-major 3x3 matrix view.\nA column-major 3x1 matrix view.\nA column-major 3x2 matrix view.\nA column-major 3x4 matrix view.\nA column-major 3x5 matrix view.\nA column-major 3x6 matrix view.\nA column-major matrix view with 3 rows and a number of …\nA column-major 4x4 matrix view.\nA column-major 4x1 matrix view.\nA column-major 4x2 matrix view.\nA column-major 4x3 matrix view.\nA column-major 4x5 matrix view.\nA column-major 4x6 matrix view.\nA column-major matrix view with 4 rows and a number of …\nA column-major 5x5 matrix view.\nA column-major 5x1 matrix view.\nA column-major 5x2 matrix view.\nA column-major 5x3 matrix view.\nA column-major 5x4 matrix view.\nA column-major 5x6 matrix view.\nA column-major matrix view with 5 rows and a number of …\nA column-major 6x6 matrix view.\nA column-major 6x1 matrix view.\nA column-major 6x2 matrix view.\nA column-major 6x3 matrix view.\nA column-major 6x4 matrix view.\nA column-major 6x5 matrix view.\nA column-major matrix view with 6 rows and a number of …\nA mutable matrix view.\nA column-major 1x1 matrix view.\nA column-major 1x2 matrix view.\nA column-major 1x3 matrix view.\nA column-major 1x4 matrix view.\nA column-major 1x5 matrix view.\nA column-major 1x6 matrix view.\nA column-major matrix view with 1 row and a number of …\nA column-major 2x2 matrix view.\nA column-major 2x1 matrix view.\nA column-major 2x3 matrix view.\nA column-major 2x4 matrix view.\nA column-major 2x5 matrix view.\nA column-major 2x6 matrix view.\nA column-major matrix view with 2 rows and a number of …\nA column-major 3x3 matrix view.\nA column-major 3x1 matrix view.\nA column-major 3x2 matrix view.\nA column-major 3x4 matrix view.\nA column-major 3x5 matrix view.\nA column-major 3x6 matrix view.\nA column-major matrix view with 3 rows and a number of …\nA column-major 4x4 matrix view.\nA column-major 4x1 matrix view.\nA column-major 4x2 matrix view.\nA column-major 4x3 matrix view.\nA column-major 4x5 matrix view.\nA column-major 4x6 matrix view.\nA column-major matrix view with 4 rows and a number of …\nA column-major 5x5 matrix view.\nA column-major 5x1 matrix view.\nA column-major 5x2 matrix view.\nA column-major 5x3 matrix view.\nA column-major 5x4 matrix view.\nA column-major 5x6 matrix view.\nA column-major matrix view with 5 rows and a number of …\nA column-major 6x6 matrix view.\nA column-major 6x1 matrix view.\nA column-major 6x2 matrix view.\nA column-major 6x3 matrix view.\nA column-major 6x4 matrix view.\nA column-major 6x5 matrix view.\nA column-major matrix view with 6 rows and a number of …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA column-major matrix view with a number of rows chosen at …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA heap-allocated, column-major, matrix with a dynamic …\nA trait for abstract matrix norms.\nThe type of the norm.\nTrait implemented by entities scan be be normalized and …\nAn owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …\nA constant <code>Complex</code> 1.\nA point in an euclidean space.\nAn owned D-dimensional column vector.\nA 3D orthographic projection stored as a homogeneous 4x4 …\nThe reshaped storage type.\nThe owned data storage that can be allocated from <code>S</code>.\nThe owned data storage that can be allocated from <code>S</code>.\nA sequence of row or column permutations.\nA 3D perspective projection stored as a homogeneous 4x4 …\nA point with <code>D</code> elements.\nA statically sized 1-dimensional column point.\nA statically sized 2-dimensional column point.\nA statically sized 3-dimensional column point.\nA statically sized 4-dimensional column point.\nA statically sized 5-dimensional column point.\nA statically sized 6-dimensional column point.\nAn invertible 2D general transformation. Stored as a …\nAn invertible 3D general transformation. Stored as a …\nThe QR decomposition of a general matrix.\nA quaternion. See the type alias …\nThe row-stride of the owned data storage for a buffer of …\nThe static stride of this storage’s rows.\nThe trait shared by all matrix data storage.\nTrait implemented by matrix data storage that can provide …\nTrait shared by all reals.\nA reflection wrt. a plane.\nA 1-dimensional reflection.\nA 2-dimensional reflection.\nA 3-dimensional reflection.\nA 4-dimensional reflection.\nA 5-dimensional reflection.\nA 6-dimensional reflection.\nThe transform category that results from the …\nA matrix storage that can be reshaped in-place.\nA rotation matrix.\nA 2-dimensional rotation matrix.\nA 3-dimensional rotation matrix.\nA dynamically sized row vector.\nAn owned D-dimensional row vector.\nA statically sized D-dimensional row vector.\nA matrix with one row and <code>D</code> columns .\nA stack-allocated, 1-dimensional row vector.\nA stack-allocated, 2-dimensional row vector.\nA stack-allocated, 3-dimensional row vector.\nA stack-allocated, 4-dimensional row vector.\nA stack-allocated, 5-dimensional row vector.\nA stack-allocated, 6-dimensional row vector.\nA statically sized column-major matrix with <code>R</code> rows and <code>C</code> …\nA column-major matrix slice with dimensions known at …\nA column-major matrix slice with dimensions known at …\nA column-major matrix view with dimensions known at …\nA column-major matrix view with dimensions known at …\nSingular Value Decomposition of a general matrix.\nA statically sized D-dimensional column vector.\nA column vector slice with dimensions known at …\nA column vector slice with dimensions known at …\nA column vector view with dimensions known at compile-time.\nA column vector view with dimensions known at compile-time.\nThe data storage for the sum of two matrices with …\nThe basic scalar type for all structures of <code>nalgebra</code>.\nA scale which supports non-uniform scaling.\nA 1-dimensional scale.\nA 2-dimensional scale.\nA 3-dimensional scale.\nA 4-dimensional scale.\nA 5-dimensional scale.\nA 6-dimensional scale.\nSchur decomposition of a square matrix.\nLane-wise generalization of <code>bool</code> for SIMD booleans.\nType of the result of comparing two SIMD values like <code>self</code>.\nLane-wise generalisation of <code>ComplexField</code> for SIMD complex …\nLane-wise generalization of the standard <code>PartialOrd</code> for …\nLanewise generalization of <code>RealField</code> for SIMD reals.\nType of the coefficients of a complex number.\nBase trait for every SIMD types.\nA similarity, i.e., an uniform scaling, followed by a …\nA 2-dimensional similarity.\nA 3-dimensional similarity.\nA 2-dimensional similarity using a rotation matrix for its …\nA 3-dimensional similarity using a rotation matrix for its …\nType of the range size. May be a type-level integer.\nA range with a size that may be known at compile-time.\nA matrix data storage for a matrix view. Only contains an …\nA mutable matrix data storage for mutable matrix view. …\nA square matrix.\nTrait shared by all matrix data storage that don’t …\nTrait shared by all mutable matrix data storage that …\nIndicates that <code>Self</code> is a more specific <code>Transform</code> category …\nIndicates that <code>Self</code> is a more general <code>Transform</code> category …\nEigendecomposition of a symmetric matrix.\nTridiagonalization of a symmetric matrix.\nTag representing an affine <code>Transform</code>. Its bottom-row is …\nTrait implemented by phantom types identifying the …\nTraits that gives the <code>Transform</code> category that is …\nTag representing the most general (not necessarily …\nTag representing the most general inversible <code>Transform</code> …\nA transformation matrix in homogeneous coordinates.\nA 2D general transformation that may not be invertible. …\nA 3D general transformation that may not be inversible. …\nA translation.\nA 1-dimensional translation.\nA 2-dimensional translation.\nA 3-dimensional translation.\nA 4-dimensional translation.\nA 5-dimensional translation.\nA 6-dimensional translation.\nThe constant dimension 0 .\nThe constant dimension 1.\nThe constant dimension 10 .\nThe constant dimension 100 .\nThe constant dimension 101 .\nThe constant dimension 102 .\nThe constant dimension 103 .\nThe constant dimension 104 .\nThe constant dimension 105 .\nThe constant dimension 106 .\nThe constant dimension 107 .\nThe constant dimension 108 .\nThe constant dimension 109 .\nThe constant dimension 11 .\nThe constant dimension 110 .\nThe constant dimension 111 .\nThe constant dimension 112 .\nThe constant dimension 113 .\nThe constant dimension 114 .\nThe constant dimension 115 .\nThe constant dimension 116 .\nThe constant dimension 117 .\nThe constant dimension 118 .\nThe constant dimension 119 .\nThe constant dimension 12 .\nThe constant dimension 120 .\nThe constant dimension 121 .\nThe constant dimension 122 .\nThe constant dimension 123 .\nThe constant dimension 124 .\nThe constant dimension 125 .\nThe constant dimension 126 .\nThe constant dimension 127 .\nThe constant dimension 13 .\nThe constant dimension 14 .\nThe constant dimension 15 .\nThe constant dimension 16 .\nThe constant dimension 17 .\nThe constant dimension 18 .\nThe constant dimension 19 .\nThe constant dimension 2 .\nThe constant dimension 20 .\nThe constant dimension 21 .\nThe constant dimension 22 .\nThe constant dimension 23 .\nThe constant dimension 24 .\nThe constant dimension 25 .\nThe constant dimension 26 .\nThe constant dimension 27 .\nThe constant dimension 28 .\nThe constant dimension 29 .\nThe constant dimension 3 .\nThe constant dimension 30 .\nThe constant dimension 31 .\nThe constant dimension 32 .\nThe constant dimension 33 .\nThe constant dimension 34 .\nThe constant dimension 35 .\nThe constant dimension 36 .\nThe constant dimension 37 .\nThe constant dimension 38 .\nThe constant dimension 39 .\nThe constant dimension 4 .\nThe constant dimension 40 .\nThe constant dimension 41 .\nThe constant dimension 42 .\nThe constant dimension 43 .\nThe constant dimension 44 .\nThe constant dimension 45 .\nThe constant dimension 46 .\nThe constant dimension 47 .\nThe constant dimension 48 .\nThe constant dimension 49 .\nThe constant dimension 5 .\nThe constant dimension 50 .\nThe constant dimension 51 .\nThe constant dimension 52 .\nThe constant dimension 53 .\nThe constant dimension 54 .\nThe constant dimension 55 .\nThe constant dimension 56 .\nThe constant dimension 57 .\nThe constant dimension 58 .\nThe constant dimension 59 .\nThe constant dimension 6 .\nThe constant dimension 60 .\nThe constant dimension 61 .\nThe constant dimension 62 .\nThe constant dimension 63 .\nThe constant dimension 64 .\nThe constant dimension 65 .\nThe constant dimension 66 .\nThe constant dimension 67 .\nThe constant dimension 68 .\nThe constant dimension 69 .\nThe constant dimension 7 .\nThe constant dimension 70 .\nThe constant dimension 71 .\nThe constant dimension 72 .\nThe constant dimension 73 .\nThe constant dimension 74 .\nThe constant dimension 75 .\nThe constant dimension 76 .\nThe constant dimension 77 .\nThe constant dimension 78 .\nThe constant dimension 79 .\nThe constant dimension 8 .\nThe constant dimension 80 .\nThe constant dimension 81 .\nThe constant dimension 82 .\nThe constant dimension 83 .\nThe constant dimension 84 .\nThe constant dimension 85 .\nThe constant dimension 86 .\nThe constant dimension 87 .\nThe constant dimension 88 .\nThe constant dimension 89 .\nThe constant dimension 9 .\nThe constant dimension 90 .\nThe constant dimension 91 .\nThe constant dimension 92 .\nThe constant dimension 93 .\nThe constant dimension 94 .\nThe constant dimension 95 .\nThe constant dimension 96 .\nThe constant dimension 97 .\nThe constant dimension 98 .\nThe constant dimension 99 .\nUDU factorization.\nL-infinite norm aka. Chebytchev norm aka. uniform norm …\nAn owned matrix with uninitialized data.\nAn owned matrix with uninitialized data.\nA wrapper that ensures the underlying algebraic entity has …\nA 2D rotation represented as a complex number with …\nA unit dual quaternion. May be used to represent a …\nA unit quaternions. May be used to represent a rotation.\nA stack-allocated, 1-dimensional unit vector.\nA stack-allocated, 2-dimensional unit vector.\nA stack-allocated, 3-dimensional unit vector.\nA stack-allocated, 4-dimensional unit vector.\nA stack-allocated, 5-dimensional unit vector.\nA stack-allocated, 6-dimensional unit vector.\nA Vec-based matrix data storage. It may be …\nA matrix with one column and <code>D</code> rows.\nA stack-allocated, 1-dimensional column vector.\nA stack-allocated, 2-dimensional column vector.\nA stack-allocated, 3-dimensional column vector.\nA stack-allocated, 4-dimensional column vector.\nA stack-allocated, 5-dimensional column vector.\nA stack-allocated, 6-dimensional column vector.\nAn owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …\nA column vector slice with dimensions known at …\nA 1D column vector slice.\nA 2D column vector slice.\nA 3D column vector slice.\nA 4D column vector slice.\nA 5D column vector slice.\nA 6D column vector slice.\nA column vector slice with dimensions known at …\nA 1D column vector slice.\nA 2D column vector slice.\nA 3D column vector slice.\nA 4D column vector slice.\nA 5D column vector slice.\nA 6D column vector slice.\nThe type of the result of a matrix sum.\nA column vector view with dimensions known at compile-time.\nA 1D column vector view.\nA 2D column vector view.\nA 3D column vector view.\nA 4D column vector view.\nA 5D column vector view.\nA 6D column vector view.\nA column vector view with dimensions known at compile-time.\nA 1D column vector view.\nA 2D column vector view.\nA 3D column vector view.\nA 4D column vector view.\nA 5D column vector view.\nA 6D column vector view.\nA matrix data storage for a matrix view. Only contains an …\nA mutable matrix data storage for mutable matrix view. …\nA constant <code>Complex</code> 0.\nThe column vector with a 1 as its fifth component, and …\nThe unit column vector with a 1 as its fifth component, …\nThe absolute value of <code>a</code>.\nThe absolute value of this complex number: …\nComputes the component-wise absolute value.\nComputes the principal value of the inverse cosine of <code>self</code>.\nCalculates the quaternionic arccosinus.\nComputes the principal value of inverse hyperbolic cosine …\nCalculates the hyperbolic quaternionic arccosinus.\nEquivalent to <code>self.adjoint() * rhs</code>.\nEquivalent to <code>self.adjoint() * rhs</code> but stores the result …\nComputes the solution of the linear system …\nSolves the linear system <code>self.adjoint() . x = b</code> where <code>x</code> is …\nComputes the solution of the linear system …\nSolves the linear system <code>self.adjoint() . x = b</code> where <code>x</code> is …\nComputes the solution of the linear system …\nSolves the linear system <code>self.adjoint() . x = b</code> where <code>x</code> is …\nComputes the solution of the linear system …\nSolves the linear system <code>self.adjoint() . x = b</code> where <code>x</code> is …\nAdds a scalar to <code>self</code>.\nAdds a scalar to <code>self</code> in-place.\nEquivalent to <code>self + rhs</code> but stores the result into <code>out</code> to …\nThe adjoint (aka. conjugate-transpose) of <code>self</code>.\nSets <code>self</code> to its adjoint (aka. conjugate-transpose).\nTakes the adjoint (aka. conjugate-transpose) of <code>self</code> and …\nAre all vector lanes true?\nReturns the absolute value of the component with the …\nReturns the absolute value of the component with the …\nLane-wise bitwise and of the vector elements.\nThe smallest angle between two vectors.\nThe rotation angle in [0; pi] of this unit quaternion.\nThe rotation angle in <code>]-pi; pi]</code> of this unit complex …\nThe rotation angle.\nThe rotation angle in [0; pi].\nThe rotation angle needed to make <code>self</code> and <code>other</code> coincide.\nThe rotation angle needed to make <code>self</code> and <code>other</code> coincide.\nThe rotation angle needed to make <code>self</code> and <code>other</code> coincide.\nThe rotation angle needed to make <code>self</code> and <code>other</code> coincide.\nIs any vector lane true?\nAppends to <code>self</code> a rotation given in the axis-angle form, …\nComputes the transformation equal to <code>self</code> followed by a …\nComputes in-place the transformation equal to <code>self</code> …\nAdds the interchange of the row (or column) <code>i</code> with the row …\nAppends to <code>self</code> the given rotation in-place.\nAppends to <code>self</code> the given rotation in-place.\nAppends in-place to <code>self</code> a rotation centered at the point …\nAppends in-place to <code>self</code> a rotation centered at the point …\nAppends in-place to <code>self</code> a rotation centered at the point <code>p</code>…\nAppends in-place to <code>self</code> a rotation centered at the point <code>p</code>…\nComputes the transformation equal to <code>self</code> followed by an …\nThe similarity transformation that applies a scaling …\nComputes in-place the transformation equal to <code>self</code> …\nSets <code>self</code> to the similarity transformation that applies a …\nComputes the transformation equal to <code>self</code> followed by a …\nComputes the transformation equal to <code>self</code> followed by a …\nAppends to <code>self</code> the given translation in-place.\nAppends to <code>self</code> the given translation in-place.\nApplies a closure <code>f</code> to modify each component of <code>self</code>.\nReplaces each component of <code>self</code> by the result of a closure …\nReturns <code>self</code> with each of its components replaced by the …\nUses the metric induced by the given <code>norm</code> to compute the …\nUses the given <code>norm</code> to compute the norm of <code>self</code>.\nComputes the index and value of the vector component with …\nComputes the index and value of the vector component with …\nThe argument of this complex number.\nA reference to the underlying homogeneous transformation …\nA reference to the underlying homogeneous transformation …\nReturns a mutable pointer to the start of the matrix.\nConverts this array storage to a mutable slice.\nExtracts a mutable slice containing the entire matrix …\nA mutable slice containing all the components stored in …\nRetrieves the mutable data buffer as a contiguous slice.\nReturns a mutable reference to the underlying value. This …\nA reference to this transformation seen as a <code>Projective3</code>.\nA reference to this transformation seen as a <code>Projective3</code>.\nReturns a pointer to the start of the matrix.\nReturns a reference to the single element in this matrix.\nGet a mutable reference to the single element in this …\nConverts this array storage to a slice.\nExtracts a slice containing the entire matrix entries …\nA slice containing all the components stored in this …\nRetrieves the data buffer as a contiguous slice.\nThe underlying data storage.\nThe underlying mutable data storage.\nReinterprets this quaternion as a 4D vector.\nTransforms this quaternion into its 4D vector form (Vector …\nReturns this matrix as a view.\nReturns this matrix as a mutable view.\nComputes the principal value of the inverse sine of <code>self</code>.\nCalculates the quaternionic arcsinus.\nComputes the principal value of inverse hyperbolic sine of …\nCalculates the hyperbolic quaternionic arcsinus.\nGets the <code>width / height</code> aspect ratio of the view frustum.\nAssumes a matrix’s entries to be initialized. This …\nComputes the principal value of the inverse tangent of <code>self</code>…\nCalculates the quaternionic arctangent.\nComputes the principal value of inverse hyperbolic tangent …\nCalculates the hyperbolic quaternionic arctangent.\nComputes <code>self = a * x * c + b * self</code>.\nThe reflection axis.\nThe rotation axis of this unit quaternion or <code>None</code> if the …\nThe rotation axis. Returns <code>None</code> if the rotation angle is …\nThe rotation axis and angle in (0, pi] of this unit …\nThe rotation axis and angle in (0, pi] of this complex …\nThe rotation axis and angle in (0, pi] of this rotation …\nComputes <code>self = a * x + b * self</code>.\nThe column vector with a 1 as its sixth component, and …\nThe unit column vector with a 1 as its sixth component, …\n[Reexported at the root of this crate.] Data structures …\nThe start index of the range.\nThe reflection bias.\nComputes the bidiagonalization using householder …\nA bit mask representing the boolean state of each lanes of …\nThe bottom offset of the view cuboid.\nReturns the the 1-norm of the complex component with the …\nReturns the the 1-norm of the complex component with the …\nReturns a new vector with the same magnitude as <code>self</code> …\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nCast the components of <code>self</code> to another type.\nComputes componentwise …\nThe center of two points.\nChecks that the given matrix is a valid homogeneous …\nAttempts to compute the Cholesky decomposition of this …\nReturns a reference to the input value clamped to the …\nClones this data storage to one that does not contain any …\nClones this transform into one that owns its data.\nClones this matrix to one that owns its data.\nClones this unit quaternion into one that owns its data.\nClones this matrix into one that owns its data. The actual …\nComputes componentwise …\nComputes the QR decomposition (with column pivoting) of …\nReturns a view containing the i-th column of this matrix.\nIterate through the columns of this matrix.\nMutably iterates through this matrix columns.\nThe mean of all the columns of this matrix.\nReturns a view containing the i-th column of this matrix.\nReturns a view containing the <code>n</code> first elements of the i-th …\nReturns a view containing the <code>n</code> first elements of the i-th …\nThe product of all the columns of this matrix.\nThe sum of all the columns of this matrix.\nThe variance of all the columns of this matrix.\nExtracts from this matrix a set of consecutive columns.\nExtracts from this matrix <code>ncols</code> columns. The number of …\nExtracts from this matrix <code>ncols</code> columns. The number of …\nExtracts from this matrix <code>ncols</code> columns skipping <code>step</code> …\nExtracts from this matrix <code>ncols</code> columns skipping <code>step</code> …\nExtracts from this matrix a set of consecutive columns.\nView containing all the columns indexed by the range <code>rows</code>.\nMutable view containing all the columns indexed by the …\nSplits this <code>NxM</code> matrix into two parts delimited by two …\nSplits this <code>NxM</code> matrix into two parts delimited by two …\nExtracts from this matrix a set of consecutive columns …\nExtracts from this matrix a set of consecutive columns …\nThe underlying complex number.\nComputes the eigenvalues of this matrix.\nComputes the complex eigenvalues of the decomposed matrix.\nComponentwise matrix or vector division.\nInplace componentwise matrix or vector division.\nInplace componentwise matrix or vector division.\nComponentwise matrix or vector multiplication.\nInplace componentwise matrix or vector multiplication.\nInplace componentwise matrix or vector multiplication.\nReturns a column vector resulting from the folding of <code>f</code> on …\nReturns a row vector where each element is the result of …\nReturns a column vector where each element is the result …\nReturns the complex conjugate. i.e. <code>re - i im</code>\nThe conjugate of <code>self</code>.\nCompute the conjugate of this unit quaternion.\nCompute the conjugate of this unit quaternion.\nCompute the conjugate of this unit complex number.\nThe conjugate of this quaternion.\nThe conjugate of this dual quaternion, containing the …\nThe conjugate of the complex matrix <code>self</code> computed in-place.\nCompute in-place the conjugate of this unit complex number.\nCompute the conjugate of this unit quaternion in-place.\nCompute the conjugate of this unit quaternion in-place.\nReplaces this quaternion by its conjugate.\nReplaces this quaternion by its conjugate.\nSets <code>self</code> to its adjoint.\nThe conjugate transposition of <code>self</code>.\nTakes the conjugate and transposes <code>self</code> and store the …\nConverts an object from one type to an equivalent or more …\nConverts an object from one type to an equivalent or more …\nUse with care! Same as <code>try_convert</code> but without any …\nUse with care! Same as <code>try_convert</code> but without any …\nReturns the convolution of the target vector and a kernel.\nReturns the convolution of the target vector and a kernel.\nReturns the convolution of the target vector and a kernel.\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThe coordinates of this point, i.e., the shift from the …\nThis quaternion as a 4D vector of coordinates in the …\nFills this matrix with the content of another one. Both …\nFills this matrix with the content of a slice. Both must …\nCopies the sign of <code>sign</code> to <code>self</code>.\nComputes the cosine of <code>self</code>.\nCalculates the quaternionic cosinus.\nThe cosine of the rotation angle.\nCardinal cos\nComputes the hyperbolic cosine of <code>self</code>.\nCalculates the hyperbolic quaternionic cosinus.\nThe 3D cross product between two vectors.\nComputes the matrix <code>M</code> such that for all vector <code>v</code> we have …\nRetrieves the upper trapezoidal submatrix <code>R</code> of this …\nThe diagonal matrix resulting from the factorization\nReturns the diagonal elements as a matrix\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nComputes the matrix determinant.\nComputes the determinant of the decomposed matrix.\nComputes the determinant of the decomposed matrix.\nComputes the determinant of the decomposed matrix.\nComputes the determinant of the decomposed matrix.\nThe determinant of the matrix corresponding to this …\nThe diagonal of this matrix.\nThe diagonal part of this decomposed matrix.\nThe diagonal components of this decomposition.\nThe value of this dimension.\nThe distance between two points.\nThe squared distance between two points.\nConstruct a dynamic matrix directly from data.\nThe dot product between two vectors or matrices (seen as …\nThe dot product of two quaternions.\nThe conjugate-linear dot product between two vectors or …\nThe dual component of the quaternion\nThe underlying dual quaternion.\nConstruct a dynamic column vector directly from data.\nComputes the eigenvalues of this matrix.\nComputes the real eigenvalues of the decomposed matrix.\nThe unsorted eigenvalues of the decomposed matrix.\nThe eigenvectors of the decomposed matrix.\nThe index immediately after the last index inside of the …\nTests whether <code>self</code> and <code>rhs</code> are exactly equal.\nRetrieves the euler angles corresponding to this unit …\nEuler angles corresponding to this rotation from a …\nRepresent this rotation as Euler angles.\nComputes <code>e^(self)</code>, where <code>e</code> is the base of the natural …\nComputes exponential of this matrix\nCompute the exponential of a quaternion.\nCompute the exponential of a quaternion.\nCompute the exponential of a quaternion. Returns the …\nExtend the number of rows of a <code>Vector</code> with elements from …\nExtends the number of columns of a <code>Matrix</code> with <code>Vector</code>s …\nExtend the number of columns of the <code>Matrix</code> with elements …\nExtends the number of rows of the <code>VecStorage</code> with elements …\nExtends the number of columns of the <code>VecStorage</code> with …\nExtends the number of columns of the <code>VecStorage</code> with …\nExtends the number of columns of the <code>VecStorage</code> with …\nExtracts the i-th lane of <code>self</code>.\nExtracts the i-th lane of <code>self</code> without bound-checking.\nCreates an isometry that corresponds to the local frame of …\nCreates an unit quaternion that corresponds to the local …\nCreates a rotation that corresponds to the local frame of …\nCreates an isometry that corresponds to the local frame of …\nCreates an isometry that corresponds to the local frame of …\nCreates an similarity that corresponds to a scaling factor …\nCreates an similarity that corresponds to a scaling factor …\nSets all the elements of this matrix to <code>val</code>.\nSets all the elements of the selected column to <code>val</code>.\nSets all the diagonal elements of this matrix to <code>val</code>.\nSets all the elements of the lower-triangular part of this …\nCopies the upper-triangle of this matrix to its …\nSets all the elements of the selected row to <code>val</code>.\nSets all the elements of the lower-triangular part of this …\nCopies the upper-triangle of this matrix to its …\nSets all the elements of this matrix to the value returned …\nFills <code>self</code> with the identity matrix.\nExtracts a compile-time number of consecutive columns from …\nExtracts a compile-time number of consecutive columns from …\nExtracts from this matrix a compile-time number of columns …\nExtracts from this matrix a compile-time number of columns …\nResizes this matrix so that it contains <code>R2::value()</code> rows …\nExtracts a compile-time number of consecutive rows from …\nExtracts a compile-time number of consecutive rows from …\nExtracts from this matrix a compile-time number of rows …\nExtracts from this matrix a compile-time number of rows …\nSlices this matrix starting at its component <code>(irow, icol)</code> …\nSlices this matrix starting at its component <code>(irow, icol)</code> …\nSlices this matrix starting at its component …\nSlices this matrix starting at its component …\nReturn a view of this matrix starting at its component …\nReturn a view of this matrix starting at its component …\nReturns a view of this matrix starting at its component …\nReturns a view of this matrix starting at its component …\nFolds a function <code>f</code> on each entry of <code>self</code>.\nSimilar to <code>self.iter().fold(init, f)</code> except that <code>init</code> is …\nGets the y field of view of the view frustum.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBuilds the unit complex number corresponding to the …\nCreates a new statically-allocated matrix from the given …\nBuilds a 3D homogeneous rotation matrix from an axis and a …\nCreates a new quaternion from a unit vector (the rotation …\nBuilds a 3D rotation matrix from an axis and a rotation …\nBuilds a rotation from a basis assumed to be orthonormal.\nBuilds an unit quaternion from a basis assumed to be …\nBuilds a rotation from a basis assumed to be orthonormal.\nBuilds a rotation from a basis assumed to be orthonormal.\nCreates a matrix with its elements filled with the …\nCreates a matrix with its elements filled with the …\nCreates a matrix with its elements filled with the …\nCreates a matrix with its elements filled with the …\nCreates a matrix with its elements filled with the …\nBuilds a new matrix from its columns.\nCreates a new unit complex number from a complex number.\nCreates a new unit complex number from a complex number.\nCreates a new point with the given coordinates.\nBuilds the unit complex number from the sinus and cosinus …\nCreates a new matrix with the given data.\nCreates a new matrix with the given data without …\nCreates a square matrix with its diagonal set to <code>diag</code> and …\nCreates a matrix filled with its diagonal filled with <code>elt</code> …\nCreates a matrix filled with its diagonal filled with <code>elt</code> …\nCreates a matrix filled with its diagonal filled with <code>elt</code> …\nCreates a matrix filled with its diagonal filled with <code>elt</code> …\nCreates a new matrix with its diagonal filled with copies …\nCreates a matrix or vector with all its elements set to …\nCreates a matrix or vector with all its elements set to …\nCreates a matrix or vector with all its elements set to …\nCreates a matrix or vector with all its elements set to …\nCreates a matrix with all its elements set to <code>elem</code>.\nCreates a new rotation from Euler angles.\nCreates a new unit quaternion from Euler angles.\nCreates a new rotation from Euler angles.\nCreates a matrix or vector filled with the results of a …\nCreates a matrix or vector filled with the results of a …\nCreates a matrix or vector filled with the results of a …\nCreates a matrix or vector filled with the results of a …\nCreates a matrix filled with the results of a function …\nCreates a new orthographic projection matrix from an …\nConstructs a vector from coordinates in projective space, …\nCreates a new point from its homogeneous vector …\nConstructs a pure quaternion.\nReturn a unit dual quaternion representing the translation …\nCreates a new similarity from its rotational and …\nCreates a matrix or vector with all its elements filled by …\nCreates a matrix or vector with all its elements filled by …\nCreates a matrix or vector with all its elements filled by …\nCreates a matrix or vector with all its elements filled by …\nCreates a matrix with all its elements filled by an …\nBuilds an unit quaternion by extracting the rotation part …\nBuilds an unit complex by extracting the rotation part of …\nBuilds a rotation matrix by extracting the rotation part …\nBuilds a rotation matrix by extracting the rotation part …\nBuilds an unit complex by extracting the rotation part of …\nBuilds an unit quaternion by extracting the rotation part …\nBuilds a rotation matrix by extracting the rotation part …\nBuilds a rotation matrix by extracting the rotation part …\nCreates a new transformation from the given homogeneous …\nCreates a new rotation from the given square matrix.\nWraps the given matrix to interpret it as a 3D …\nWraps the given matrix to interpret it as a 3D perspective …\nCreates a new matrix that may be rectangular. The first …\nCreates a new matrix that may be rectangular. The first …\nCreates a new matrix that may be rectangular. The first …\nCreates a new matrix that may be rectangular. The first …\nCreates a new matrix that may be rectangular. The first …\nReturn a dual quaternion representing the translation and …\nCreates a new quaternion from its scalar and vector parts. …\nCreates a new isometry from its rotational and …\nCreates a new similarity from its rotational and …\nCreates a new quaternion from its polar decomposition.\nCreates a new unit quaternion from a quaternion.\nCreate a new matrix view without bounds checking and from …\nCreate a new matrix view without bounds checking and from …\nBuilds a pure-real complex number from the given value.\nConstructs a real quaternion.\nCreates a dual quaternion from only its real part, with no …\nCreates a dual quaternion from its rotation and …\nWraps the given reference, assuming it is already …\nCreates a dual quaternion from a unit quaternion rotation.\nBuilds an unit quaternion from a rotation matrix.\nBuilds the unit complex number from the corresponding 2D …\nCreates a matrix or vector with all its elements filled by …\nCreates a matrix or vector with all its elements filled by …\nCreates a matrix or vector with all its elements filled by …\nCreates a matrix or vector with all its elements filled by …\nCreates a matrix with all its elements filled by an …\nCreates a matrix with its elements filled with the …\nCreates a matrix with its elements filled with the …\nCreates a matrix with its elements filled with the …\nCreates a matrix with its elements filled with the …\nCreates a matrix with its elements filled with the …\nBuilds a new matrix from its rows.\nBuilds a 3D homogeneous rotation matrix from an axis and …\nBuilds a unit complex rotation from an angle in radian …\nCreates a new unit quaternion rotation from a rotation …\nBuilds a 3D rotation matrix from an axis scaled by the …\nBuilds a 2 dimensional rotation matrix from an angle in …\nCreates a new unit quaternion rotation from a rotation …\nCreates a new similarity that applies only a scaling …\nBuilds a pure-real complex number from the given value.\nCreates a new matrix view from the given data array.\nCreates a new mutable matrix view from the given data …\nCreates a new matrix view from the given data array.\nCreates a new mutable matrix view from the given data …\nCreates a new matrix view from the given data array.\nCreates a new matrix view from the given data array.\nCreates a new mutable matrix view from the given data …\nCreates a new mutable matrix view from the given data …\nCreates a new point from a slice.\nCreates a matrix view from an array and with dimensions …\nCreates a mutable matrix view from an array and with …\nCreates, without bound-checking, a matrix view from an …\nCreates, without bound-checking, a mutable matrix view …\nCreates, without bound checking, a new matrix view from …\nCreates, without bound checking, a new mutable matrix view …\nCreates, without bound checking, a new matrix view from …\nCreates, without bound checking, a new matrix view from …\nCreates, without bound checking, a new mutable matrix view …\nCreates, without bound checking, a new matrix view from …\nCreates, without bound checking, a new mutable matrix view …\nCreates, without bound checking, a new mutable matrix view …\nCreates a new matrix view with the specified strides from …\nCreates a new matrix view with the specified strides from …\nCreates a new matrix view with the specified strides from …\nCreates a new matrix view with the specified strides from …\nCreates a matrix view from an array and with dimensions …\nCreates a mutable matrix view from an array and with …\nCreates, without bounds checking, a matrix view from an …\nCreates, without bound-checking, a mutable matrix view …\nCreates a new mutable matrix view with the specified …\nCreates a new mutable matrix view with the specified …\nCreates a new mutable matrix view with the specified …\nCreates a new mutable matrix view with the specified …\nCreates, without bound checking, a new matrix view with …\nCreates, without bound checking, a new mutable matrix view …\nCreates, without bound checking, a new matrix view with …\nCreates, without bound checking, a new matrix view with …\nCreates, without bound checking, a new mutable matrix view …\nCreates, without bound checking, a new mutable matrix view …\nCreates, without bound checking, a new mutable matrix view …\nCreates, without bound checking, a new matrix view with …\nParses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …\nParses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …\nBuilds an instance of <code>Self</code> from a run-time value. Panics …\nCreates a matrix backed by a given <code>Vec</code>.\nCreates a matrix backed by a given <code>Vec</code>.\nCreates a matrix backed by a given <code>Vec</code>.\nCreates a matrix backed by a given <code>Vec</code>.\nCreates a matrix backed by a given <code>Vec</code>.\nCreates a new heap-allocated matrix from the given …\nCreates a new heap-allocated matrix from the given …\nCreates a new heap-allocated matrix from the given …\nCreates a quaternion from a 4D vector. The quaternion …\nCreates a new translation from the given vector.\nComputes the LU decomposition with full pivoting of <code>matrix</code>.\nComputes <code>self = alpha * a * b + beta * self</code>, where …\nComputes <code>self = alpha * a.adjoint() * b + beta * self</code>, …\nComputes <code>self = alpha * a.transpose() * b + beta * self</code>, …\nComputes <code>self = alpha * a * x + beta * self</code>, where <code>a</code> is a …\nComputes <code>self = alpha * a.adjoint() * x + beta * self</code>, …\nComputes <code>self = alpha * a.transpose() * x + beta * self</code>, …\nCreates a slice that may or may not have a fixed size and …\nCreates a slice that may or may not have a fixed size and …\nCreates a slice that may or may not have a fixed size and …\nCreates a slice that may or may not have a fixed size and …\nCreates a matrix view that may or may not have a fixed …\nCreates a matrix view that may or may not have a fixed …\nCreates a matrix view that may or may not have a fixed …\nCreates a matrix view that may or may not have a fixed …\n[Reexported at the root of this crate.] Data structures …\nComputes <code>self = alpha * x * y.transpose() + beta * self</code>.\nComputes <code>self = alpha * x * y.transpose() + beta * self</code>, …\nComputes <code>self = alpha * x * y.adjoint() + beta * self</code>.\nProduces a view of the data at the given index, or <code>None</code> if …\nGets the address of the i-th matrix component without …\nGets the address of the i-th matrix component without …\nGets the mutable address of the i-th matrix component …\nGets the mutable address of the i-th matrix component …\nProduces a mutable view of the data at the given index, or …\nRetrieves a reference to the i-th element without …\nProduces a view of the data at the given index, without …\nGets a reference to i-th element of this point without …\nRetrieves a reference to the i-th element without …\nRetrieves a mutable reference to the i-th element without …\nRetrieves a mutable reference to the element at …\nReturns a mutable view of the data at the given index, …\nGets a mutable reference to i-th element of this point …\nRetrieves the upper trapezoidal submatrix <code>H</code> of this …\nDivides quaternion into two.\nIndicates whether a <code>Transform</code> with the category <code>Self</code> has a …\nComputes <code>self = alpha * a * x + beta * self</code>, where <code>a</code> is an …\nComputes <code>self = alpha * x * y.adjoint() + beta * self</code>, …\nThe hermitian part of <code>self</code>, i.e., …\nComputes the Hessenberg decomposition of this matrix using …\nComputes (self.conjugate() * self + other.conjugate() * …\nReturns the imaginary unit.\nComputes the index of the vector component with the …\nComputes the index of the matrix component with the …\nComputes the index of the vector component with the …\nComputes the index of the vector component with the …\nComputes the index of the matrix component with the …\nThe rotation identity.\nCreates a new identity transform.\nCreates an identity matrix. If the matrix is not square, …\nCreates an identity matrix. If the matrix is not square, …\nCreates an identity matrix. If the matrix is not square, …\nCreates an identity matrix. If the matrix is not square, …\nThe unit dual quaternion multiplicative identity, which …\nThe rotation identity.\nThe unit complex number multiplicative identity.\nCreates a new square identity rotation of the given …\nThe quaternion multiplicative identity.\nThe dual quaternion multiplicative identity.\nCreates a new identity translation.\nCreates a new identity scale.\nCreates a new identity isometry.\nCreates a new identity similarity.\nCreates a new dynamically-allocated sequence of <code>n</code> identity …\nCreates a new statically-allocated sequence of <code>D</code> identity …\nCreates a new identity matrix.\nCreates a new sequence of D identity permutations.\nMerges the value of <code>if_value()</code> and <code>else_value()</code> depending …\nMerges the value of <code>if_value()</code> and <code>else_if.1()</code> and …\nMerges the value of <code>if_value()</code> and <code>else_if.1()</code> and …\nImaginary portion of the complex number\nThe imaginary part of this quaternion.\nThe imaginary part of this complex number.\nComputes the index of the vector component with the …\nComputes the index of the vector component with the …\nProduces a view of the data at the given index, or panics …\nProduces a mutable view of the data at the given index, or …\nReturns the infimum of <code>a</code> and <code>b</code>.\nComputes the infimum (aka. componentwise min) of two …\nComputes the infimum (aka. componentwise min) of two …\nReturns simultaneously the infimum and supremum of <code>a</code> and <code>b</code>.\nComputes the (infimum, supremum) of two matrices/vectors.\nComputes the (infimum, supremum) of two points.\nCalculates the inner product (also known as the dot …\nInserts a column filled with <code>val</code> at the <code>i-th</code> position.\nUpdates the decomposition such that we get the …\nInserts <code>n</code> columns filled with <code>val</code> starting at the <code>i-th</code> …\nInserts <code>ninsert.value()</code> columns starting at the <code>i-th</code> place …\nInserts <code>D</code> columns filled with <code>val</code> starting at the <code>i-th</code> …\nInserts <code>D::dim()</code> rows filled with <code>val</code> starting at the <code>i-th</code> …\nInserts a row filled with <code>val</code> at the <code>i-th</code> position.\nInserts <code>n</code> rows filled with <code>val</code> starting at the <code>i-th</code> …\nInserts <code>ninsert.value()</code> rows at the <code>i-th</code> place of this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRetrieves the underlying matrix.\nRetrieves the underlying value.\nUnwraps the underlying matrix.\nRetrieves the underlying homogeneous matrix.\nRetrieves the underlying homogeneous matrix.\nBuilds a matrix data storage that does not contain any …\nMoves this matrix into one that owns its data.\nMoves this unit quaternion into one that owns its data.\nMoves this matrix into one that owns its data. The actual …\nConvert this 1x1 matrix into a scalar.\nExtracts the original slice from this storage.\nExtracts the original slice from this storage.\nExtracts the original slice from this storage\nReturns <code>1/self</code>\nComputes <code>self.inverse() * rhs</code> in a more efficient way.\nApplies this sequence of permutations in reverse to the …\nApplies this sequence of permutations in reverse to the …\nThe rotation inverse.\nInverts this transformation. Use <code>.try_inverse</code> if this …\nInverts this complex number if it is not zero.\nInverts this dual quaternion if it is not zero.\nInverts this quaternion if it is not zero.\nInverts <code>self</code>.\nInverts <code>self</code>.\nInverts <code>self</code>.\nInverts <code>self</code>.\nRetrieves the inverse of the underlying homogeneous matrix.\nRetrieves the inverse of the underlying homogeneous matrix.\nComputes the inverse of the decomposed matrix.\nChange <code>self</code> to its inverse.\nInverts this transformation in-place. Use <code>.try_inverse_mut</code> …\nInverts this quaternion if it is not zero.\nInverts in-place this unit complex number.\nInverts this dual quaternion in place if it is not zero.\nInverts <code>self</code> in-place.\nInverts <code>self</code> in-place.\nInverts <code>self</code> in-place.\nInverts <code>self</code> in-place.\nApply the inverse rotation to the given point.\nTransform the given point by the inverse of this …\nRotate the given point by the inverse of this unit complex …\nRotate and translate a point by the inverse of this unit …\nRotate a point by the inverse of this unit quaternion. …\nRotate the given point by the inverse of this rotation. …\nTranslate the given point by the inverse of this …\nTransform the given point by the inverse of this isometry. …\nTransform the given point by the inverse of this …\nApply the inverse rotation to the given unit vector.\nRotate a unit vector by the inverse of this unit …\nRotate a vector by the inverse of this unit quaternion. …\nRotate the given vector by the inverse of this unit …\nRotate the given vector by the inverse of this rotation. …\nTransform the given unit vector by the inverse of this …\nApply the inverse rotation to the given vector.\nTransform the given vector by the inverse of this …\nRotate a vector by the inverse of this unit quaternion, …\nRotate a vector by the inverse of this unit quaternion. …\nRotate the given vector by the inverse of this unit …\nRotate the given vector by the inverse of this rotation. …\nTransform the given vector by the inverse of this …\nTransform the given vector by the inverse of this …\nInverts <code>self</code>.\nIndicates whether this data buffer stores its elements …\nIndicates if <code>try_convert</code> will succeed without actually …\nReturns true if the matrix contains no elements.\nReturns true if the underlying vector contains no elements.\nReturns true if the point contains no elements.\nReturns true if the permutation sequence contains no …\nChecks if the given complex number is finite\nIndicated if this is the identity matrix within a relative …\nChecks if the given complex number is infinite\nReturns <code>true</code> if this matrix is invertible.\nIndicates if the decomposed matrix is invertible.\nIndicates if the decomposed matrix is invertible.\nIndicates if the decomposed matrix is invertible.\nIndicates if the decomposed matrix is invertible.\nChecks if the given complex number is NaN\nChecks if the given complex number is normal\nChecks that <code>Mᵀ × M = Id</code>.\nCheck if the quaternion is pure.\nIs the sign of this real number negative?\nIs the sign of this real number positive?\nChecks that this matrix is orthogonal and has a …\nIndicates if this is a square matrix.\nIndicates whether this decomposition contains an …\nThe part of this similarity that does not include the …\nThe part of this similarity that does not include the …\nThe part of this similarity that does not include the …\nThe part of this similarity that does not include the …\nThe part of this similarity that does not include the …\nThe unit dual quaternion needed to make <code>self</code> and <code>other</code> …\nIterates through this matrix coordinates in column-major …\nIterates through this point coordinates.\nMutably iterates through this matrix coordinates.\nMutably iterates through this point coordinates.\nThe column vector with <code>val</code> as its i-th component.\nThe column unit vector with <code>T::one()</code> as its i-th component.\nThe kronecker product of two matrices (aka. tensor product …\nRetrieves the lower-triangular factor of the Cholesky …\nThe lower triangular matrix of this decomposition.\nThe lower triangular matrix of this decomposition.\nReturns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …\nRetrieves the lower-triangular factor of the Cholesky …\nThe lower triangular matrix of this decomposition.\nThe number of lanes of this SIMD value.\nThe left offset of the view cuboid.\nLeft quaternionic division.\nThe total number of elements of this matrix.\nThe number of elements on the underlying vector.\nThe dimension of this point.\nThe number of non-identity permutations applied by this …\nReturns <code>self * (1.0 - t) + rhs * t</code>, i.e., the linear blend …\nLinear interpolation between two unit quaternions.\nLinear interpolation between two unit dual quaternions.\nLinear interpolation between two points.\nLinear interpolation between two quaternion.\nLinear interpolation between two dual quaternions.\nInterpolates between two isometries using a linear …\nInterpolates between two isometries using a linear …\nInterpolates between two isometries using a linear …\nInterpolates between two isometries using a linear …\n[Reexported at the root of this crate.] Factorization of …\nCompute the index corresponding to the irow-th row and …\nComputes the principal value of natural logarithm of <code>self</code>.\nCompute the natural logarithm of a quaternion.\nCompute the natural logarithm of a quaternion.\nComputes the natural logarithm of determinant of the …\nReturns the logarithm of <code>self</code> with respect to an arbitrary …\nBuilds a left-handed look-at view matrix.\nBuilds a left-handed look-at view matrix without …\nBuilds a left-handed look-at view matrix without …\nBuilds a left-handed look-at view matrix.\nBuilds a left-handed look-at view matrix.\nBuilds a left-handed look-at view matrix including a …\nBuilds a left-handed look-at view matrix including a …\nBuilds a right-handed look-at view matrix.\nBuilds a right-handed look-at view matrix without …\nBuilds a right-handed look-at view matrix without …\nBuilds a right-handed look-at view matrix.\nBuilds a right-handed look-at view matrix.\nBuilds a right-handed look-at view matrix including …\nBuilds a right-handed look-at view matrix including …\nExtracts the lower triangular part of this matrix …\nThe Lp norm of this matrix.\nComputes the LU decomposition with partial (row) pivoting …\nA synonym for the norm of this matrix.\nA synonym for the norm of this quaternion.\nA synonym for the squared norm of this matrix.\nA synonym for the squared norm of this quaternion.\nReturns a matrix containing the result of <code>f</code> applied to …\nReturns a point containing the result of <code>f</code> applied to each …\nApply the given function to this matrix’s diagonal and …\nApplies a function to each lane of <code>self</code>.\nReturns a matrix containing the result of <code>f</code> applied to …\nA reference to the underlying matrix.\nA reference to the underlying matrix representation of …\nConstruct a fixed-size matrix directly from data.\nA mutable reference to underlying matrix. Use …\nA mutable reference to the underlying matrix …\nA mutable reference to the underlying matrix.\nA mutable reference to the underlying matrix …\nSame as <code>cmp::max</code>.\nReturns the component with the largest value.\nThe largest finite positive value representable using this …\nThe mean of all the elements of this matrix.\nCreate the mean unit quaternion from a data structure …\nUse the metric induced by this norm to compute the metric …\nCompute the distance between <code>self</code> and <code>rhs</code> using the metric …\nSame as <code>cmp::min</code>.\nReturns the component with the smallest value.\nThe smallest finite positive value representable using …\nThe modulus of this complex number.\nThe squared modulus of this complex number.\nEquivalent to <code>self * rhs</code> but stores the result into <code>out</code> to …\nThe name of this dimension, i.e., the singleton <code>Self</code>.\nThe number of columns of this matrix.\nNegates <code>self</code> in-place.\nCreate a new <code>Complex</code>\nCreates a new reflection wrt. the plane orthogonal to the …\nA dynamic size equal to <code>value</code>.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nInitializes this matrix from its components.\nCreates a new unit quaternion rotation from a rotation …\nBuilds the unit complex number corresponding to the …\nCreates a new dynamic matrix data storage from the given …\nInitializes this point from its components.\nInitializes this point from its components.\nInitializes this point from its components.\nInitializes this point from its components.\nInitializes this point from its components.\nInitializes this point from its components.\nBuilds a 3 dimensional rotation matrix from an axis and an …\nBuilds a 2 dimensional rotation matrix from an angle in …\nCreates a new quaternion from its individual components. …\nInitializes this translation from its components.\nInitializes this translation from its components.\nInitializes this translation from its components.\nInitializes this translation from its components.\nInitializes this translation from its components.\nInitializes this translation from its components.\nInitializes this Scale from its components.\nInitializes this Scale from its components.\nInitializes this Scale from its components.\nInitializes this Scale from its components.\nInitializes this Scale from its components.\nInitializes this Scale from its components.\nCreates a new 2D isometry from a translation and a …\nCreates a new isometry from a translation and a rotation …\nCreates a new 2D isometry from a translation and a …\nCreates a new isometry from a translation and a rotation …\nCreates a new similarity from a translation and a rotation …\nCreates a new similarity from a translation, rotation …\nCreates a new similarity from a translation, a rotation, …\nCreates a new similarity from a translation, rotation …\nCreates a new orthographic projection matrix.\nCreates a new perspective matrix from the aspect ratio, y …\nComputes the Bidiagonal decomposition using householder …\nAttempts to compute the Cholesky decomposition of <code>matrix</code>.\nComputes the <code>ColPivQR</code> decomposition using householder …\nComputes the LU decomposition with full pivoting of <code>matrix</code>.\nComputes the Hessenberg decomposition using householder …\nComputes the LU decomposition with partial (row) pivoting …\nComputes the QR decomposition using householder …\nComputes the Schur decomposition of a square matrix.\nComputes the Singular Value Decomposition of <code>matrix</code> using …\nComputes the eigendecomposition of the given symmetric …\nComputes the tridiagonalization of the symmetric matrix <code>m</code>.\nComputes the UDU^T factorization.\nNormalize the given vector and return it wrapped on a <code>Unit</code> …\nCreates a new reflection wrt. the plane orthogonal to the …\nCreates a new unit quaternion rotation from a rotation …\nCreates a new homogeneous matrix that applies a distinct …\nCreates a new homogeneous matrix that applies a scaling …\nCreates a new homogeneous matrix that applies a scaling …\nNormalize the given vector and return it wrapped on a <code>Unit</code> …\nDeprecated: Use <code>Matrix4::face_towards</code> instead.\nDeprecated: Use <code>Isometry::face_towards</code> instead.\nDeprecated: Use <code>Isometry::face_towards</code> instead.\nDeprecated: Use <code>UnitQuaternion::face_towards</code> instead.\nDeprecated: Use <code>Rotation3::face_towards</code> instead.\nDeprecated: Use <code>SimilarityMatrix3::face_towards</code> instead.\nDeprecated: Use <code>SimilarityMatrix3::face_towards</code> instead.\nCreates a new homogeneous matrix for an orthographic …\nCreates a new homogeneous matrix for a perspective …\nBuilds a 2 dimensional homogeneous rotation matrix from an …\nBuilds a 3D homogeneous rotation matrix from an axis and …\nBuilds a 3D homogeneous rotation matrix from an axis and …\nCreates a new homogeneous matrix that applies the same …\nCreates a new homogeneous matrix that applies a pure …\nCreate a new matrix view without bounds checking.\nCreate a new matrix view without bounds checking.\nWraps the given value, assuming it is already normalized.\nComputes the Cholesky decomposition of <code>matrix</code> without …\nComputes the Singular Value Decomposition of <code>matrix</code> using …\nCreate a new matrix view without bounds checking.\nCreate a new matrix view without bounds checking.\nAttempts to approximate the Cholesky decomposition of …\nComputes the Hessenberg decomposition using householder …\nNormalized linear interpolation between two unit …\nNormalized linear interpolation between two unit …\nAre all vector lanes false?\nApply this norm to the given matrix.\nComputes the norm.\nThe L2 norm of this matrix.\nThe norm of this quaternion.\nThe sum of the absolute value of this complex number’s …\nReturns the square of the norm (since <code>T</code> doesn’t …\nComputes the squared norm.\nThe squared L2 norm of this vector.\nThe squared norm of this quaternion.\nReturns a normalized version of this matrix.\nNormalizes this quaternion.\nNormalizes this quaternion.\nNormalizes this matrix in-place and returns its norm.\nNormalizes this quaternion.\nNormalizes this quaternion.\nThe number of rows of this matrix.\nThe off-diagonal part of this decomposed matrix.\nThe off-diagonal components of this decomposition.\nGets the multiplicative identity element.\nCreates a new identity transform.\nCreates a new identity isometry.\nCreates a new identity similarity.\nLane-wise bitwise or of the vector elements.\nCreates a new point with all coordinates equal to zero.\nApplies the given closure to each element of the …\nOrthonormalizes the given family of vectors. The largest …\nCalculates the outer product (also known as the wedge …\nRetrieves the column permutation of this decomposition.\nThe row permutations of this decomposition.\nThe row permutations of this decomposition.\nUses the given matrix as-is without any checks or …\nClamp <code>value</code> between <code>min</code> and <code>max</code>. Returns <code>None</code> if <code>value</code> is …\nCompare <code>a</code> and <code>b</code> using a partial ordering relation.\nReturns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &gt;= b</code>.\nReturns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &gt; b</code>.\nReturns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &lt;= b</code>.\nReturns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &lt; b</code>.\nReturn the maximum of <code>a</code> and <code>b</code> if they are comparable.\nReturn the minimum of <code>a</code> and <code>b</code> if they are comparable.\nSorts two values in increasing order using a partial …\nApplies this sequence of permutations to the columns of <code>rhs</code>…\nApplies this sequence of permutations to the rows of <code>rhs</code>.\nThe perpendicular product between two 2D column vectors, …\nConstruct a fixed-size point directly from data.\nComputes the Polar Decomposition of  a <code>matrix</code> (indirectly …\nThe polar decomposition of this quaternion.\nRaise this matrix to an integral power <code>exp</code>.\nRaises this matrix to an integral power <code>exp</code> in-place.\nRaises <code>self</code> to a complex power.\nRaises <code>self</code> to a floating point power.\nRaise this unit complex number to a given floating power.\nRaise the quaternion to a given floating power.\nRaise the rotation to a given floating power, i.e., …\nRaise the rotation to a given floating power, i.e., …\nRaise the quaternion to a given floating power.\nRaises <code>self</code> to a signed integer power.\nRaises <code>self</code> to an unsigned integer power.\nComputes the transformation equal to a non-uniform scaling …\nComputes in-place the transformation equal to a …\nComputes the transformation equal to an uniform scaling …\nThe similarity transformation that applies a scaling …\nComputes in-place the transformation equal to an uniform …\nSets <code>self</code> to the similarity transformation that applies a …\nComputes the transformation equal to a translation …\nComputes the transformation equal to a translation …\nThe product of all the elements of this matrix.\nCalculates the projection of <code>self</code> onto <code>other</code> (also known …\nProjects a point. Faster than matrix multiplication.\nProjects a point. Faster than matrix multiplication.\nProjects a vector. Faster than matrix multiplication.\nProjects a vector. Faster than matrix multiplication.\nComputes the pseudo-inverse of this matrix.\nInverts <code>self</code>.\nComputes the pseudo-inverse of the decomposed matrix.\nThe matrix data pointer.\nThe matrix mutable data pointer.\nConvert quaternion to pure quaternion.\nConstructs a new vector of higher dimension by appending …\nComputes the orthogonal matrix <code>Q</code> of this decomposition.\nThe column permutations of this decomposition.\nComputes the orthogonal matrix <code>Q</code> of this decomposition.\nComputes the orthogonal matrix <code>Q</code> of this decomposition.\nComputes the orthogonal matrix <code>Q</code> of this decomposition.\nMultiplies the provided matrix by the transpose of the <code>Q</code> …\nMultiplies the provided matrix by the transpose of the <code>Q</code> …\nComputes the QR decomposition of this matrix.\nComputes the quadratic form …\nComputes the quadratic form …\nComputes the quadratic form …\nComputes the quadratic form …\nThe underlying quaternion.\nRetrieves the upper trapezoidal submatrix <code>R</code> of this …\nRetrieves the upper trapezoidal submatrix <code>R</code> of this …\nComputes the rank of this matrix.\nComputes the rank of the decomposed matrix, i.e., the …\nGiven the Cholesky decomposition of a matrix <code>M</code>, a scalar …\nReal portion of the complex number\nThe real part of this complex number.\nThe real component of the quaternion\nRebuild the original matrix.\nRebuild the original matrix.\nRecomputes the original symmetric matrix.\nApplies the reflection to the columns of <code>rhs</code>.\nApplies the reflection to the rows of <code>lhs</code>.\nApplies the reflection to the rows of <code>lhs</code>.\nApplies the reflection to the columns of <code>rhs</code>.\nCalculates the rejection of <code>self</code> from <code>other</code> (also known as …\nTests whether <code>self</code> and <code>rhs</code> are equal up to a given epsilon.\nRemoves the <code>i</code>-th column from this matrix.\nUpdates the decomposition such that we get the …\nRemoves <code>n</code> consecutive columns from this matrix, starting …\nRemoves all columns in <code>indices</code>\nRemoves <code>nremove.value()</code> columns from this matrix, starting …\nRemoves <code>D::dim()</code> consecutive columns from this matrix, …\nRemoves <code>D::dim()</code> consecutive rows from this matrix, …\nRemoves the <code>i</code>-th row from this matrix.\nRemoves <code>n</code> consecutive rows from this matrix, starting with …\nRemoves all rows in <code>indices</code>\nRemoves <code>nremove.value()</code> rows from this matrix, starting …\nNormalizes this vector again. This is useful when repeated …\nEnsure this rotation is an orthonormal rotation matrix. …\nEnsure this rotation is an orthonormal rotation matrix. …\nNormalizes this vector again using a first-order Taylor …\nCreates a matrix or vector with all its elements set to …\nCreates a matrix or vector with all its elements set to …\nCreates a matrix or vector with all its elements set to …\nCreates a matrix or vector with all its elements set to …\nCreates a matrix with all its elements set to <code>elem</code>.\nReplaces the i-th lane of <code>self</code> by <code>val</code>.\nReplaces the i-th lane of <code>self</code> by <code>val</code> without …\nReshapes the storage into the output storage type.\nReshapes <code>self</code> such that it has dimensions …\nResizes this matrix so that it contains <code>new_nrows</code> rows and …\nResizes the underlying mutable data storage and unwraps it.\nResizes <code>self</code> such that it has dimensions …\nResizes this matrix horizontally, i.e., so that it …\nChanges the number of column of this matrix in-place.\nResizes this matrix in-place.\nResizes this matrix vertically, i.e., so that it contains …\nChanges the number of rows of this matrix in-place.\nThe right offset of the view cuboid.\nRight quaternionic division.\nReturn the rotation part of this unit dual quaternion.\nCreates a new isometry from the given rotation angle.\nCreates a new isometry from the given rotation angle.\nCreates a new isometry from the given rotation angle.\nCreates a new isometry from the given rotation angle.\nThe pure rotational part of this isometry.\nThe pure rotational part of this isometry.\nThe pure rotational part of this isometry.\nThe pure rotational part of this isometry.\nThe pure rotational part of this isometry.\nThe unit complex needed to make <code>a</code> and <code>b</code> be collinear and …\nThe unit quaternion needed to make <code>a</code> and <code>b</code> be collinear …\nThe rotation matrix required to align <code>a</code> and <code>b</code> but with its …\nThe rotation matrix required to align <code>a</code> and <code>b</code> but with its …\nThe unit complex needed to make <code>a</code> and <code>b</code> be collinear and …\nThe unit quaternion needed to make <code>a</code> and <code>b</code> be collinear …\nThe unit quaternion needed to make <code>self</code> and <code>other</code> coincide.\nThe unit complex number needed to make <code>self</code> and <code>other</code> …\nThe rotation matrix needed to make <code>self</code> and <code>other</code> coincide.\nThe rotation matrix needed to make <code>self</code> and <code>other</code> coincide.\nThe isometry that applies the rotation <code>r</code> with its axis …\nThe similarity that applies the scaling factor <code>scaling</code>, …\nReturns a view containing the i-th row of this matrix.\nIterate through the rows of this matrix.\nMutably iterates through this matrix rows.\nThe mean of all the rows of this matrix.\nThe mean of all the rows of this matrix. The result is …\nReturns a view containing the i-th row of this matrix.\nReturns a view containing the <code>n</code> first elements of the i-th …\nReturns a view containing the <code>n</code> first elements of the i-th …\nThe product of all the rows of this matrix.\nThe product of all the rows of this matrix. The result is …\nThe sum of all the rows of this matrix.\nThe sum of all the rows of this matrix. The result is …\nThe variance of all the rows of this matrix.\nThe variance of all the rows of this matrix. The result is …\nExtracts from this matrix a set of consecutive rows.\nExtracts from this matrix <code>nrows</code> rows regularly skipping …\nExtracts from this matrix <code>nrows</code> rows regularly skipping …\nExtracts from this matrix <code>nrows</code> rows regularly skipping …\nExtracts from this matrix <code>nrows</code> rows regularly skipping …\nExtracts from this matrix a set of consecutive rows.\nView containing all the rows indexed by the range <code>rows</code>.\nMutable view containing all the rows indexed by the range …\nSplits this <code>NxM</code> matrix into two parts delimited by two …\nSplits this <code>NxM</code> matrix into two parts delimited by two …\nExtracts from this matrix a set of consecutive rows …\nExtracts from this matrix a set of consecutive rows …\nThe scalar part <code>w</code> of this quaternion.\nMultiplies this complex number by <code>factor</code>.\nMultiplies <code>self</code> by the scalar <code>t</code>.\nMultiplies each component of the complex matrix <code>self</code> by …\nMultiply <code>self</code> by n.\nMultiplies each component of the complex matrix <code>self</code> by …\nThe rotation axis of this unit quaternion multiplied by …\nThe rotation angle returned as a 1-dimensional vector.\nThe rotation axis multiplied by the rotation angle.\nThe rotation angle returned as a 1-dimensional vector.\nThe smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …\nThe smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …\nThe smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …\nThe smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …\nThe smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …\nThe smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …\nThe scaling factor of this similarity transformation.\nComputes the Schur decomposition of a square matrix.\nScrew linear interpolation between two unit quaternions. …\nMerges <code>self</code> and <code>other</code> depending on the lanes of <code>cond</code>.\nCreates a new matrix by extracting the given set of …")