(function() {var type_impls = {
"jumpy":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ComplexField-for-f32\" class=\"impl\"><a href=\"#impl-ComplexField-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::ComplexField\">ComplexField</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RealField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RealField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#associatedtype.RealField\" class=\"associatedtype\">RealField</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_real\" class=\"method trait-impl\"><a href=\"#method.from_real\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.from_real\" class=\"fn\">from_real</a>(re: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::ComplexField\">ComplexField</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#associatedtype.RealField\" title=\"type jumpy::core::physics::rapier::nalgebra::ComplexField::RealField\">RealField</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Builds a pure-real complex number from the given value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.real\" class=\"method trait-impl\"><a href=\"#method.real\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.real\" class=\"fn\">real</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::ComplexField\">ComplexField</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#associatedtype.RealField\" title=\"type jumpy::core::physics::rapier::nalgebra::ComplexField::RealField\">RealField</a></h4></section></summary><div class='docblock'>The real part of this complex number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.imaginary\" class=\"method trait-impl\"><a href=\"#method.imaginary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.imaginary\" class=\"fn\">imaginary</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::ComplexField\">ComplexField</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#associatedtype.RealField\" title=\"type jumpy::core::physics::rapier::nalgebra::ComplexField::RealField\">RealField</a></h4></section></summary><div class='docblock'>The imaginary part of this complex number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.norm1\" class=\"method trait-impl\"><a href=\"#method.norm1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.norm1\" class=\"fn\">norm1</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::ComplexField\">ComplexField</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#associatedtype.RealField\" title=\"type jumpy::core::physics::rapier::nalgebra::ComplexField::RealField\">RealField</a></h4></section></summary><div class='docblock'>The sum of the absolute value of this complex number’s real and imaginary part.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.modulus\" class=\"method trait-impl\"><a href=\"#method.modulus\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.modulus\" class=\"fn\">modulus</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::ComplexField\">ComplexField</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#associatedtype.RealField\" title=\"type jumpy::core::physics::rapier::nalgebra::ComplexField::RealField\">RealField</a></h4></section></summary><div class='docblock'>The modulus of this complex number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.modulus_squared\" class=\"method trait-impl\"><a href=\"#method.modulus_squared\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.modulus_squared\" class=\"fn\">modulus_squared</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::ComplexField\">ComplexField</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#associatedtype.RealField\" title=\"type jumpy::core::physics::rapier::nalgebra::ComplexField::RealField\">RealField</a></h4></section></summary><div class='docblock'>The squared modulus of this complex number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.argument\" class=\"method trait-impl\"><a href=\"#method.argument\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.argument\" class=\"fn\">argument</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::ComplexField\">ComplexField</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#associatedtype.RealField\" title=\"type jumpy::core::physics::rapier::nalgebra::ComplexField::RealField\">RealField</a></h4></section></summary><div class='docblock'>The argument of this complex number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_exp\" class=\"method trait-impl\"><a href=\"#method.to_exp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#method.to_exp\" class=\"fn\">to_exp</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>The exponential form of this complex number: (modulus, e^{i arg})</div></details><section id=\"method.recip\" class=\"method trait-impl\"><a href=\"#method.recip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.recip\" class=\"fn\">recip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.conjugate\" class=\"method trait-impl\"><a href=\"#method.conjugate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.conjugate\" class=\"fn\">conjugate</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.scale\" class=\"method trait-impl\"><a href=\"#method.scale\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.scale\" class=\"fn\">scale</a>(self, factor: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::ComplexField\">ComplexField</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#associatedtype.RealField\" title=\"type jumpy::core::physics::rapier::nalgebra::ComplexField::RealField\">RealField</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Multiplies this complex number by <code>factor</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unscale\" class=\"method trait-impl\"><a href=\"#method.unscale\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.unscale\" class=\"fn\">unscale</a>(self, factor: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::ComplexField\">ComplexField</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#associatedtype.RealField\" title=\"type jumpy::core::physics::rapier::nalgebra::ComplexField::RealField\">RealField</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Divides this complex number by <code>factor</code>.</div></details><section id=\"method.floor\" class=\"method trait-impl\"><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.ceil\" class=\"method trait-impl\"><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.round\" class=\"method trait-impl\"><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.trunc\" class=\"method trait-impl\"><a href=\"#method.trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.trunc\" class=\"fn\">trunc</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.fract\" class=\"method trait-impl\"><a href=\"#method.fract\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.fract\" class=\"fn\">fract</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method trait-impl\"><a href=\"#method.abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>The absolute value of this complex number: <code>self / self.signum()</code>. <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.abs\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signum\" class=\"method trait-impl\"><a href=\"#method.signum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#method.signum\" class=\"fn\">signum</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>The exponential part of this complex number: <code>self / self.modulus()</code></div></details><section id=\"method.mul_add\" class=\"method trait-impl\"><a href=\"#method.mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.mul_add\" class=\"fn\">mul_add</a>(self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.powi\" class=\"method trait-impl\"><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.powi\" class=\"fn\">powi</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.powf\" class=\"method trait-impl\"><a href=\"#method.powf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.powf\" class=\"fn\">powf</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.powc\" class=\"method trait-impl\"><a href=\"#method.powc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.powc\" class=\"fn\">powc</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.sqrt\" class=\"method trait-impl\"><a href=\"#method.sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.sqrt\" class=\"fn\">sqrt</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.try_sqrt\" class=\"method trait-impl\"><a href=\"#method.try_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.try_sqrt\" class=\"fn\">try_sqrt</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>&gt;</h4></section><section id=\"method.exp\" class=\"method trait-impl\"><a href=\"#method.exp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.exp\" class=\"fn\">exp</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.exp2\" class=\"method trait-impl\"><a href=\"#method.exp2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.exp2\" class=\"fn\">exp2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.exp_m1\" class=\"method trait-impl\"><a href=\"#method.exp_m1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.exp_m1\" class=\"fn\">exp_m1</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.ln_1p\" class=\"method trait-impl\"><a href=\"#method.ln_1p\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.ln_1p\" class=\"fn\">ln_1p</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.ln\" class=\"method trait-impl\"><a href=\"#method.ln\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.ln\" class=\"fn\">ln</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.log\" class=\"method trait-impl\"><a href=\"#method.log\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.log\" class=\"fn\">log</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.log2\" class=\"method trait-impl\"><a href=\"#method.log2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.log2\" class=\"fn\">log2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.log10\" class=\"method trait-impl\"><a href=\"#method.log10\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.log10\" class=\"fn\">log10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.cbrt\" class=\"method trait-impl\"><a href=\"#method.cbrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.cbrt\" class=\"fn\">cbrt</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.hypot\" class=\"method trait-impl\"><a href=\"#method.hypot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.hypot\" class=\"fn\">hypot</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::ComplexField\">ComplexField</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#associatedtype.RealField\" title=\"type jumpy::core::physics::rapier::nalgebra::ComplexField::RealField\">RealField</a></h4></section></summary><div class='docblock'>Computes (self.conjugate() * self + other.conjugate() * other).sqrt()</div></details><section id=\"method.sin\" class=\"method trait-impl\"><a href=\"#method.sin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.sin\" class=\"fn\">sin</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.cos\" class=\"method trait-impl\"><a href=\"#method.cos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.cos\" class=\"fn\">cos</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.tan\" class=\"method trait-impl\"><a href=\"#method.tan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.tan\" class=\"fn\">tan</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.asin\" class=\"method trait-impl\"><a href=\"#method.asin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.asin\" class=\"fn\">asin</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.acos\" class=\"method trait-impl\"><a href=\"#method.acos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.acos\" class=\"fn\">acos</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.atan\" class=\"method trait-impl\"><a href=\"#method.atan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.atan\" class=\"fn\">atan</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.sin_cos\" class=\"method trait-impl\"><a href=\"#method.sin_cos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.sin_cos\" class=\"fn\">sin_cos</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>)</h4></section><section id=\"method.sinh\" class=\"method trait-impl\"><a href=\"#method.sinh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.sinh\" class=\"fn\">sinh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.cosh\" class=\"method trait-impl\"><a href=\"#method.cosh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.cosh\" class=\"fn\">cosh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.tanh\" class=\"method trait-impl\"><a href=\"#method.tanh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.tanh\" class=\"fn\">tanh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.asinh\" class=\"method trait-impl\"><a href=\"#method.asinh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.asinh\" class=\"fn\">asinh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.acosh\" class=\"method trait-impl\"><a href=\"#method.acosh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.acosh\" class=\"fn\">acosh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.atanh\" class=\"method trait-impl\"><a href=\"#method.atanh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.atanh\" class=\"fn\">atanh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.is_finite\" class=\"method trait-impl\"><a href=\"#method.is_finite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#tymethod.is_finite\" class=\"fn\">is_finite</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_polar\" class=\"method trait-impl\"><a href=\"#method.to_polar\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#method.to_polar\" class=\"fn\">to_polar</a>(self) -&gt; (Self::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#associatedtype.RealField\" title=\"type jumpy::core::physics::rapier::nalgebra::ComplexField::RealField\">RealField</a>, Self::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#associatedtype.RealField\" title=\"type jumpy::core::physics::rapier::nalgebra::ComplexField::RealField\">RealField</a>)</h4></section></summary><div class='docblock'>The polar form of this complex number: (modulus, arg)</div></details><section id=\"method.sinh_cosh\" class=\"method trait-impl\"><a href=\"#method.sinh_cosh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#method.sinh_cosh\" class=\"fn\">sinh_cosh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(Self, Self)</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.sinc\" class=\"method trait-impl\"><a href=\"#method.sinc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#method.sinc\" class=\"fn\">sinc</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Cardinal sine</div></details><section id=\"method.sinhc\" class=\"method trait-impl\"><a href=\"#method.sinhc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#method.sinhc\" class=\"fn\">sinhc</a>(self) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.cosc\" class=\"method trait-impl\"><a href=\"#method.cosc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#method.cosc\" class=\"fn\">cosc</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Cardinal cos</div></details><section id=\"method.coshc\" class=\"method trait-impl\"><a href=\"#method.coshc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.ComplexField.html#method.coshc\" class=\"fn\">coshc</a>(self) -&gt; Self</h4></section></div></details>","ComplexField","jumpy::core::physics::rapier::Real"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-f32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.210/src/serde/de/impls.rs.html#457-463\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"jumpy/prelude/trait.Deserialize.html\" title=\"trait jumpy::prelude::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.210/src/serde/de/impls.rs.html#457-463\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"jumpy/prelude/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","jumpy::core::physics::rapier::Real"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FloatOrd-for-f32\" class=\"impl\"><a href=\"#impl-FloatOrd-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"jumpy/prelude/egui/epaint/util/trait.FloatOrd.html\" title=\"trait jumpy::prelude::egui::epaint::util::FloatOrd\">FloatOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ord\" class=\"method trait-impl\"><a href=\"#method.ord\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/egui/epaint/util/trait.FloatOrd.html#tymethod.ord\" class=\"fn\">ord</a>(self) -&gt; <a class=\"struct\" href=\"jumpy/prelude/egui/epaint/util/struct.OrderedFloat.html\" title=\"struct jumpy::prelude::egui::epaint::util::OrderedFloat\">OrderedFloat</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Type to provide total order, useful as key in sorted contexts.</div></details></div></details>","FloatOrd","jumpy::core::physics::rapier::Real"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromValue%3C'gc%3E-for-f32\" class=\"impl\"><a href=\"#impl-FromValue%3C'gc%3E-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'gc&gt; <a class=\"trait\" href=\"jumpy/prelude/piccolo/trait.FromValue.html\" title=\"trait jumpy::prelude::piccolo::FromValue\">FromValue</a>&lt;'gc&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_value\" class=\"method trait-impl\"><a href=\"#method.from_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/piccolo/trait.FromValue.html#tymethod.from_value\" class=\"fn\">from_value</a>(_: <a class=\"struct\" href=\"jumpy/prelude/piccolo/struct.Context.html\" title=\"struct jumpy::prelude::piccolo::Context\">Context</a>&lt;'gc&gt;, value: <a class=\"enum\" href=\"jumpy/prelude/piccolo/enum.Value.html\" title=\"enum jumpy::prelude::piccolo::Value\">Value</a>&lt;'gc&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"jumpy/prelude/piccolo/struct.TypeError.html\" title=\"struct jumpy::prelude::piccolo::TypeError\">TypeError</a>&gt;</h4></section></div></details>","FromValue<'gc>","jumpy::core::physics::rapier::Real"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSchema-for-f32\" class=\"impl\"><a href=\"#impl-HasSchema-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"jumpy/prelude/bones_schema/trait.HasSchema.html\" title=\"trait jumpy::prelude::bones_schema::HasSchema\">HasSchema</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema\" class=\"method trait-impl\"><a href=\"#method.schema\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/bones_schema/trait.HasSchema.html#tymethod.schema\" class=\"fn\">schema</a>() -&gt; &amp;'static Schema</h4></section></summary><div class='docblock'>Get this type’s [<code>Schema</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_schema\" class=\"method trait-impl\"><a href=\"#method.register_schema\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/bones_schema/trait.HasSchema.html#method.register_schema\" class=\"fn\">register_schema</a>()</h4></section></summary><div class='docblock'>Register this schema with the global schema registry. <a href=\"jumpy/prelude/bones_schema/trait.HasSchema.html#method.register_schema\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/bones_schema/trait.HasSchema.html#method.cast\" class=\"fn\">cast</a>&lt;T&gt;(this: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;T</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"jumpy/prelude/bones_schema/trait.HasSchema.html\" title=\"trait jumpy::prelude::bones_schema::HasSchema\">HasSchema</a>,</div></h4></section></summary><div class='docblock'>Cast a reference of this type to a reference of another type with the same memory layout. <a href=\"jumpy/prelude/bones_schema/trait.HasSchema.html#method.cast\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast\" class=\"method trait-impl\"><a href=\"#method.try_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/bones_schema/trait.HasSchema.html#method.try_cast\" class=\"fn\">try_cast</a>&lt;T&gt;(this: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;T</a>, <a class=\"struct\" href=\"jumpy/prelude/bones_schema/ptr/struct.SchemaMismatchError.html\" title=\"struct jumpy::prelude::bones_schema::ptr::SchemaMismatchError\">SchemaMismatchError</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"jumpy/prelude/bones_schema/trait.HasSchema.html\" title=\"trait jumpy::prelude::bones_schema::HasSchema\">HasSchema</a>,</div></h4></section></summary><div class='docblock'>Cast a reference of this type to a reference of another type with the same memory layout. <a href=\"jumpy/prelude/bones_schema/trait.HasSchema.html#method.try_cast\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_mut\" class=\"method trait-impl\"><a href=\"#method.cast_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/bones_schema/trait.HasSchema.html#method.cast_mut\" class=\"fn\">cast_mut</a>&lt;T&gt;(this: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut T</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"jumpy/prelude/bones_schema/trait.HasSchema.html\" title=\"trait jumpy::prelude::bones_schema::HasSchema\">HasSchema</a>,</div></h4></section></summary><div class='docblock'>Cast a mutable reference of this type to a reference of another type with the same memory\nlayout. <a href=\"jumpy/prelude/bones_schema/trait.HasSchema.html#method.cast_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast_mut\" class=\"method trait-impl\"><a href=\"#method.try_cast_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/bones_schema/trait.HasSchema.html#method.try_cast_mut\" class=\"fn\">try_cast_mut</a>&lt;T&gt;(this: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut T</a>, <a class=\"struct\" href=\"jumpy/prelude/bones_schema/ptr/struct.SchemaMismatchError.html\" title=\"struct jumpy::prelude::bones_schema::ptr::SchemaMismatchError\">SchemaMismatchError</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"jumpy/prelude/bones_schema/trait.HasSchema.html\" title=\"trait jumpy::prelude::bones_schema::HasSchema\">HasSchema</a>,</div></h4></section></summary><div class='docblock'>Cast a mutable reference of this type to a reference of another type with the same memory\nlayout. <a href=\"jumpy/prelude/bones_schema/trait.HasSchema.html#method.try_cast_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_schema_ref\" class=\"method trait-impl\"><a href=\"#method.as_schema_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/bones_schema/trait.HasSchema.html#method.as_schema_ref\" class=\"fn\">as_schema_ref</a>(&amp;self) -&gt; <a class=\"struct\" href=\"jumpy/prelude/bones_schema/ptr/struct.SchemaRef.html\" title=\"struct jumpy::prelude::bones_schema::ptr::SchemaRef\">SchemaRef</a>&lt;'_&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts a reference of <code>T</code> to a <a href=\"jumpy/prelude/bones_schema/ptr/struct.SchemaRef.html\" title=\"struct jumpy::prelude::bones_schema::ptr::SchemaRef\"><code>SchemaRef</code></a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_schema_mut\" class=\"method trait-impl\"><a href=\"#method.as_schema_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/bones_schema/trait.HasSchema.html#method.as_schema_mut\" class=\"fn\">as_schema_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"jumpy/prelude/bones_schema/ptr/struct.SchemaRefMut.html\" title=\"struct jumpy::prelude::bones_schema::ptr::SchemaRefMut\">SchemaRefMut</a>&lt;'_&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts a reference of <code>T</code> to a <a href=\"jumpy/prelude/bones_schema/ptr/struct.SchemaRefMut.html\" title=\"struct jumpy::prelude::bones_schema::ptr::SchemaRefMut\"><code>SchemaRefMut</code></a></div></details></div></details>","HasSchema","jumpy::core::physics::rapier::Real"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoValue%3C'gc%3E-for-f32\" class=\"impl\"><a href=\"#impl-IntoValue%3C'gc%3E-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'gc&gt; <a class=\"trait\" href=\"jumpy/prelude/piccolo/trait.IntoValue.html\" title=\"trait jumpy::prelude::piccolo::IntoValue\">IntoValue</a>&lt;'gc&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_value\" class=\"method trait-impl\"><a href=\"#method.into_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/piccolo/trait.IntoValue.html#tymethod.into_value\" class=\"fn\">into_value</a>(self, _: <a class=\"struct\" href=\"jumpy/prelude/piccolo/struct.Context.html\" title=\"struct jumpy::prelude::piccolo::Context\">Context</a>&lt;'gc&gt;) -&gt; <a class=\"enum\" href=\"jumpy/prelude/piccolo/enum.Value.html\" title=\"enum jumpy::prelude::piccolo::Value\">Value</a>&lt;'gc&gt;</h4></section></div></details>","IntoValue<'gc>","jumpy::core::physics::rapier::Real"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumExt-for-f32\" class=\"impl\"><a href=\"#impl-NumExt-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"jumpy/prelude/egui/trait.NumExt.html\" title=\"trait jumpy::prelude::egui::NumExt\">NumExt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.at_least\" class=\"method trait-impl\"><a href=\"#method.at_least\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/egui/trait.NumExt.html#tymethod.at_least\" class=\"fn\">at_least</a>(self, lower_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>More readable version of <code>self.max(lower_limit)</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.at_most\" class=\"method trait-impl\"><a href=\"#method.at_most\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/egui/trait.NumExt.html#tymethod.at_most\" class=\"fn\">at_most</a>(self, upper_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>More readable version of <code>self.min(upper_limit)</code></div></details></div></details>","NumExt","jumpy::core::physics::rapier::Real"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Numeric-for-f32\" class=\"impl\"><a href=\"#impl-Numeric-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"jumpy/prelude/egui/epaint/emath/trait.Numeric.html\" title=\"trait jumpy::prelude::egui::epaint::emath::Numeric\">Numeric</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.INTEGRAL\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.INTEGRAL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"jumpy/prelude/egui/epaint/emath/trait.Numeric.html#associatedconstant.INTEGRAL\" class=\"constant\">INTEGRAL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a> = false</h4></section></summary><div class='docblock'>Is this an integer type?</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"jumpy/prelude/egui/epaint/emath/trait.Numeric.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> = -3.40282347E+38f32</h4></section></summary><div class='docblock'>Smallest finite value</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"jumpy/prelude/egui/epaint/emath/trait.Numeric.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> = 3.40282347E+38f32</h4></section></summary><div class='docblock'>Largest finite value</div></details><section id=\"method.to_f64\" class=\"method trait-impl\"><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/egui/epaint/emath/trait.Numeric.html#tymethod.to_f64\" class=\"fn\">to_f64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a></h4></section><section id=\"method.from_f64\" class=\"method trait-impl\"><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/egui/epaint/emath/trait.Numeric.html#tymethod.from_f64\" class=\"fn\">from_f64</a>(num: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></div></details>","Numeric","jumpy::core::physics::rapier::Real"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-f32\" class=\"impl\"><a href=\"#impl-One-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"jumpy/prelude/egui/epaint/emath/trait.One.html\" title=\"trait jumpy::prelude::egui::epaint::emath::One\">One</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.one\" class=\"method trait-impl\"><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/egui/epaint/emath/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></div></details>","One","jumpy::core::physics::rapier::Real"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RealField-for-f32\" class=\"impl\"><a href=\"#impl-RealField-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::RealField\">RealField</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>The smallest finite positive value representable using this type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>The largest finite positive value representable using this type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pi\" class=\"method trait-impl\"><a href=\"#method.pi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.pi\" class=\"fn\">pi</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>Archimedes’ constant.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.two_pi\" class=\"method trait-impl\"><a href=\"#method.two_pi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.two_pi\" class=\"fn\">two_pi</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>2.0 * pi.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.frac_pi_2\" class=\"method trait-impl\"><a href=\"#method.frac_pi_2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.frac_pi_2\" class=\"fn\">frac_pi_2</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>pi / 2.0.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.frac_pi_3\" class=\"method trait-impl\"><a href=\"#method.frac_pi_3\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.frac_pi_3\" class=\"fn\">frac_pi_3</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>pi / 3.0.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.frac_pi_4\" class=\"method trait-impl\"><a href=\"#method.frac_pi_4\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.frac_pi_4\" class=\"fn\">frac_pi_4</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>pi / 4.0.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.frac_pi_6\" class=\"method trait-impl\"><a href=\"#method.frac_pi_6\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.frac_pi_6\" class=\"fn\">frac_pi_6</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>pi / 6.0.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.frac_pi_8\" class=\"method trait-impl\"><a href=\"#method.frac_pi_8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.frac_pi_8\" class=\"fn\">frac_pi_8</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>pi / 8.0.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.frac_1_pi\" class=\"method trait-impl\"><a href=\"#method.frac_1_pi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.frac_1_pi\" class=\"fn\">frac_1_pi</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>1.0 / pi.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.frac_2_pi\" class=\"method trait-impl\"><a href=\"#method.frac_2_pi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.frac_2_pi\" class=\"fn\">frac_2_pi</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>2.0 / pi.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.frac_2_sqrt_pi\" class=\"method trait-impl\"><a href=\"#method.frac_2_sqrt_pi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.frac_2_sqrt_pi\" class=\"fn\">frac_2_sqrt_pi</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>2.0 / sqrt(pi).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.e\" class=\"method trait-impl\"><a href=\"#method.e\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.e\" class=\"fn\">e</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>Euler’s number.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log2_e\" class=\"method trait-impl\"><a href=\"#method.log2_e\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.log2_e\" class=\"fn\">log2_e</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>log2(e).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log10_e\" class=\"method trait-impl\"><a href=\"#method.log10_e\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.log10_e\" class=\"fn\">log10_e</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>log10(e).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ln_2\" class=\"method trait-impl\"><a href=\"#method.ln_2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.ln_2\" class=\"fn\">ln_2</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>ln(2.0).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ln_10\" class=\"method trait-impl\"><a href=\"#method.ln_10\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.ln_10\" class=\"fn\">ln_10</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>ln(10.0).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sign_positive\" class=\"method trait-impl\"><a href=\"#method.is_sign_positive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.is_sign_positive\" class=\"fn\">is_sign_positive</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is the sign of this real number positive?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sign_negative\" class=\"method trait-impl\"><a href=\"#method.is_sign_negative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.is_sign_negative\" class=\"fn\">is_sign_negative</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is the sign of this real number negative?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copysign\" class=\"method trait-impl\"><a href=\"#method.copysign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.copysign\" class=\"fn\">copysign</a>(self, sign: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Copies the sign of <code>sign</code> to <code>self</code>. <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.copysign\">Read more</a></div></details><section id=\"method.max\" class=\"method trait-impl\"><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.max\" class=\"fn\">max</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.min\" class=\"method trait-impl\"><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.min\" class=\"fn\">min</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.clamp\" class=\"method trait-impl\"><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, max: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.atan2\" class=\"method trait-impl\"><a href=\"#method.atan2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.RealField.html#tymethod.atan2\" class=\"fn\">atan2</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></div></details>","RealField","jumpy::core::physics::rapier::Real"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-f32\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.210/src/serde/ser/impls.rs.html#34\">source</a><a href=\"#impl-Serialize-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"jumpy/prelude/trait.Serialize.html\" title=\"trait jumpy::prelude::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.210/src/serde/ser/impls.rs.html#34\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.210/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"jumpy/prelude/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","jumpy::core::physics::rapier::Real"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdValue-for-f32\" class=\"impl\"><a href=\"#impl-SimdValue-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::SimdValue\">SimdValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Element\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Element\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#associatedtype.Element\" class=\"associatedtype\">Element</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>The type of the elements of each lane of this SIMD value.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.SimdBool\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SimdBool\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#associatedtype.SimdBool\" class=\"associatedtype\">SimdBool</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Type of the result of comparing two SIMD values like <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lanes\" class=\"method trait-impl\"><a href=\"#method.lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#tymethod.lanes\" class=\"fn\">lanes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of lanes of this SIMD value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method trait-impl\"><a href=\"#method.splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#tymethod.splat\" class=\"fn\">splat</a>(val: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type jumpy::core::physics::rapier::nalgebra::SimdValue::Element\">Element</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Initializes an SIMD value with each lanes set to <code>val</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract\" class=\"method trait-impl\"><a href=\"#method.extract\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#tymethod.extract\" class=\"fn\">extract</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type jumpy::core::physics::rapier::nalgebra::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code>. <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#tymethod.extract\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract_unchecked\" class=\"method trait-impl\"><a href=\"#method.extract_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#tymethod.extract_unchecked\" class=\"fn\">extract_unchecked</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type jumpy::core::physics::rapier::nalgebra::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code> without bound-checking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method trait-impl\"><a href=\"#method.replace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, val: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type jumpy::core::physics::rapier::nalgebra::SimdValue::Element\">Element</a>)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code>. <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#tymethod.replace\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_unchecked\" class=\"method trait-impl\"><a href=\"#method.replace_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#tymethod.replace_unchecked\" class=\"fn\">replace_unchecked</a>(\n    &amp;mut self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>,\n    val: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type jumpy::core::physics::rapier::nalgebra::SimdValue::Element\">Element</a>,\n)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code> without bound-checking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.select\" class=\"method trait-impl\"><a href=\"#method.select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#tymethod.select\" class=\"fn\">select</a>(self, cond: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type jumpy::core::physics::rapier::nalgebra::SimdValue::SimdBool\">SimdBool</a>, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Merges <code>self</code> and <code>other</code> depending on the lanes of <code>cond</code>. <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#tymethod.select\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_lanes\" class=\"method trait-impl\"><a href=\"#method.map_lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#method.map_lanes\" class=\"fn\">map_lanes</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type jumpy::core::physics::rapier::nalgebra::SimdValue::Element\">Element</a>) -&gt; Self::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type jumpy::core::physics::rapier::nalgebra::SimdValue::Element\">Element</a>) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code>. <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#method.map_lanes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip_map_lanes\" class=\"method trait-impl\"><a href=\"#method.zip_map_lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#method.zip_map_lanes\" class=\"fn\">zip_map_lanes</a>(\n    self,\n    b: Self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type jumpy::core::physics::rapier::nalgebra::SimdValue::Element\">Element</a>, Self::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type jumpy::core::physics::rapier::nalgebra::SimdValue::Element\">Element</a>) -&gt; Self::<a class=\"associatedtype\" href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type jumpy::core::physics::rapier::nalgebra::SimdValue::Element\">Element</a>,\n) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code> paired with the corresponding lane of <code>b</code>. <a href=\"jumpy/core/physics/rapier/nalgebra/trait.SimdValue.html#method.zip_map_lanes\">Read more</a></div></details></div></details>","SimdValue","jumpy::core::physics::rapier::Real"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tweenable-for-f32\" class=\"impl\"><a href=\"#impl-Tweenable-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"jumpy/prelude/kira/tween/trait.Tweenable.html\" title=\"trait jumpy::prelude::kira::tween::Tweenable\">Tweenable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.interpolate\" class=\"method trait-impl\"><a href=\"#method.interpolate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"jumpy/prelude/kira/tween/trait.Tweenable.html#tymethod.interpolate\" class=\"fn\">interpolate</a>(a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Returns an linearly interpolated value between <code>a</code> and <code>b</code>. <a href=\"jumpy/prelude/kira/tween/trait.Tweenable.html#tymethod.interpolate\">Read more</a></div></details></div></details>","Tweenable","jumpy::core::physics::rapier::Real"],["<section id=\"impl-Field-for-f32\" class=\"impl\"><a href=\"#impl-Field-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"jumpy/core/physics/rapier/nalgebra/trait.Field.html\" title=\"trait jumpy::core::physics::rapier::nalgebra::Field\">Field</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section>","Field","jumpy::core::physics::rapier::Real"],["<section id=\"impl-Real-for-f32\" class=\"impl\"><a href=\"#impl-Real-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"jumpy/prelude/egui/epaint/emath/trait.Real.html\" title=\"trait jumpy::prelude::egui::epaint::emath::Real\">Real</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h3></section>","Real","jumpy::core::physics::rapier::Real"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()